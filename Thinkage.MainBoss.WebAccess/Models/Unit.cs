


	
	
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//		Template file LINQGenerationTemplate.xml
//		Vault version 31
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Thinkage.MainBoss.WebAccess.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;

	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Master")]
	public partial class UnitDataContext : System.Data.Linq.DataContext
	{
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

	#region Extensibility Method Definitions
	partial void OnCreated();
	#endregion

		public UnitDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Master"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public UnitDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public UnitDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public UnitDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public UnitDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}
		public System.Data.Linq.Table<UnitEntities.WorkOrderExpenseModel> WorkOrderExpenseModel
		{
			get
			{
				return this.GetTable<UnitEntities.WorkOrderExpenseModel>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.AccessCode> AccessCode
		{
			get
			{
				return this.GetTable<UnitEntities.AccessCode>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.WorkOrder> WorkOrder
		{
			get
			{
				return this.GetTable<UnitEntities.WorkOrder>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.WorkOrderTemplate> WorkOrderTemplate
		{
			get
			{
				return this.GetTable<UnitEntities.WorkOrderTemplate>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.TemporaryStorage> TemporaryStorage
		{
			get
			{
				return this.GetTable<UnitEntities.TemporaryStorage>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.TemplateTemporaryStorage> TemplateTemporaryStorage
		{
			get
			{
				return this.GetTable<UnitEntities.TemplateTemporaryStorage>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.RelativeLocation> RelativeLocation
		{
			get
			{
				return this.GetTable<UnitEntities.RelativeLocation>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Location> Location
		{
			get
			{
				return this.GetTable<UnitEntities.Location>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.LocationContainment> LocationContainment
		{
			get
			{
				return this.GetTable<UnitEntities.LocationContainment>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Unit> Unit
		{
			get
			{
				return this.GetTable<UnitEntities.Unit>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.UnitCategory> UnitCategory
		{
			get
			{
				return this.GetTable<UnitEntities.UnitCategory>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Vendor> Vendor
		{
			get
			{
				return this.GetTable<UnitEntities.Vendor>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Ownership> Ownership
		{
			get
			{
				return this.GetTable<UnitEntities.Ownership>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.AssetCode> AssetCode
		{
			get
			{
				return this.GetTable<UnitEntities.AssetCode>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.SystemCode> SystemCode
		{
			get
			{
				return this.GetTable<UnitEntities.SystemCode>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.UnitUsage> UnitUsage
		{
			get
			{
				return this.GetTable<UnitEntities.UnitUsage>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Contact> Contact
		{
			get
			{
				return this.GetTable<UnitEntities.Contact>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.User> User
		{
			get
			{
				return this.GetTable<UnitEntities.User>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.PostalAddress> PostalAddress
		{
			get
			{
				return this.GetTable<UnitEntities.PostalAddress>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.PlainRelativeLocation> PlainRelativeLocation
		{
			get
			{
				return this.GetTable<UnitEntities.PlainRelativeLocation>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Specification> Specification
		{
			get
			{
				return this.GetTable<UnitEntities.Specification>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.SpecificationForm> SpecificationForm
		{
			get
			{
				return this.GetTable<UnitEntities.SpecificationForm>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.SpecificationFormField> SpecificationFormField
		{
			get
			{
				return this.GetTable<UnitEntities.SpecificationFormField>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.SpecificationData> SpecificationData
		{
			get
			{
				return this.GetTable<UnitEntities.SpecificationData>();
			}
		}
		public System.Data.Linq.Table<UnitEntities.Attachment> Attachment
		{
			get
			{
				return this.GetTable<UnitEntities.Attachment>();
			}
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetDBVersion]", IsComposable=true)]
		public string _vgetDBVersion()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetPhonePrefix]", IsComposable=true)]
		public string _vgetPhonePrefix()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
}
namespace UnitEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	using System.Runtime.CompilerServices;
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderExpenseModel")]
	public partial class WorkOrderExpenseModel
	{
		// Denotes table WorkOrderExpenseModel with labelkey='Work Order Expense Model'
		static public string WorkOrderExpenseModelLabelKey { get{return UnitLabelKdsMBLabel.K("Work Order Expense Model").Translate();}}
		private System.Guid _Id;
		private EntitySet<Unit> _UnitWorkOrderExpenseModel;

		public WorkOrderExpenseModel()
		{
			this._UnitWorkOrderExpenseModel = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitWorkOrderExpenseModel), new Action<Unit>(this.detach_UnitWorkOrderExpenseModel));
		}
		/// Denotes the WorkOrderExpenseModel's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderExpenseModel_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.WorkOrderExpenseModel),Name="WorkOrderExpenseModel_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderExpenseModel_Unit", Storage="_UnitWorkOrderExpenseModel", ThisKey="Id", OtherKey="WorkOrderExpenseModelID")]
		public EntitySet<Unit> UnitWorkOrderExpenseModel
		{
			get
			{
				return this._UnitWorkOrderExpenseModel;
			}
			set
			{
				this._UnitWorkOrderExpenseModel.Assign(value);
			}
		}

		private void attach_UnitWorkOrderExpenseModel(Unit entity)
		{
			entity.WorkOrderExpenseModel = this;
		}
		private void detach_UnitWorkOrderExpenseModel(Unit entity)
		{
			entity.WorkOrderExpenseModel = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessCode")]
	public partial class AccessCode
	{
		// Denotes table AccessCode with labelkey='Access Code'
		static public string AccessCodeLabelKey { get{return UnitLabelKdsMBLabel.K("Access Code").Translate();}}
		private System.Guid _Id;
		private EntitySet<Unit> _UnitAccessCode;

		public AccessCode()
		{
			this._UnitAccessCode = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitAccessCode), new Action<Unit>(this.detach_UnitAccessCode));
		}
		/// Denotes the AccessCode's Id column with type id(nonnull) with labelkey='Id'
		static public string AccessCode_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.AccessCode),Name="AccessCode_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessCode_Unit", Storage="_UnitAccessCode", ThisKey="Id", OtherKey="AccessCodeID")]
		public EntitySet<Unit> UnitAccessCode
		{
			get
			{
				return this._UnitAccessCode;
			}
			set
			{
				this._UnitAccessCode.Assign(value);
			}
		}

		private void attach_UnitAccessCode(Unit entity)
		{
			entity.AccessCode = this;
		}
		private void detach_UnitAccessCode(Unit entity)
		{
			entity.AccessCode = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrder")]
	public partial class WorkOrder
	{
		// Denotes table WorkOrder with labelkey='Work Order'
		static public string WorkOrderLabelKey { get{return UnitLabelKdsMBLabel.K("Work Order").Translate();}}
		private System.Guid _Id;
		private System.Object _Number;

		public WorkOrder()
		{
		}
		/// Denotes the WorkOrder's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrder_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.WorkOrder),Name="WorkOrder_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the WorkOrder's Number column with type null(nonnull) with labelkey='Number'
		static public string WorkOrder_Number{ get{return UnitLabelKdsMBLabel.K("Number").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.WorkOrder),Name="WorkOrder_Number")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderTemplate")]
	public partial class WorkOrderTemplate
	{
		// Denotes table WorkOrderTemplate with labelkey='Task'
		static public string WorkOrderTemplateLabelKey { get{return UnitLabelKdsMBLabel.K("Task").Translate();}}
		private System.Guid _Id;
		private System.Object _Code;

		public WorkOrderTemplate()
		{
		}
		/// Denotes the WorkOrderTemplate's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderTemplate_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.WorkOrderTemplate),Name="WorkOrderTemplate_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the WorkOrderTemplate's Code column with type null(nonnull) with labelkey='Code'
		static public string WorkOrderTemplate_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.WorkOrderTemplate),Name="WorkOrderTemplate_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemporaryStorage")]
	public partial class TemporaryStorage
	{
		// Denotes table TemporaryStorage with labelkey='Temporary Storage'
		static public string TemporaryStorageLabelKey { get{return UnitLabelKdsMBLabel.K("Temporary Storage").Translate();}}
		private System.Guid _Id;
		private System.Object _ContainingLocationID;

		public TemporaryStorage()
		{
		}
		/// Denotes the TemporaryStorage's Id column with type id(nonnull) with labelkey='Id'
		static public string TemporaryStorage_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.TemporaryStorage),Name="TemporaryStorage_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the TemporaryStorage's ContainingLocationID column with type null(nonnull) with labelkey='ContainingLocationID'
		static public string TemporaryStorage_ContainingLocationID{ get{return UnitLabelKdsMBLabel.K("ContainingLocationID").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.TemporaryStorage),Name="TemporaryStorage_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					this._ContainingLocationID = value;
				}
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemplateTemporaryStorage")]
	public partial class TemplateTemporaryStorage
	{
		// Denotes table TemplateTemporaryStorage with labelkey='Task Temporary Storage'
		static public string TemplateTemporaryStorageLabelKey { get{return UnitLabelKdsMBLabel.K("Task Temporary Storage").Translate();}}
		private System.Guid _Id;
		private System.Object _ContainingLocationID;

		public TemplateTemporaryStorage()
		{
		}
		/// Denotes the TemplateTemporaryStorage's Id column with type id(nonnull) with labelkey='Id'
		static public string TemplateTemporaryStorage_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.TemplateTemporaryStorage),Name="TemplateTemporaryStorage_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the TemplateTemporaryStorage's ContainingLocationID column with type null(nonnull) with labelkey='ContainingLocationID'
		static public string TemplateTemporaryStorage_ContainingLocationID{ get{return UnitLabelKdsMBLabel.K("ContainingLocationID").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.TemplateTemporaryStorage),Name="TemplateTemporaryStorage_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					this._ContainingLocationID = value;
				}
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelativeLocation")]
	public partial class RelativeLocation
	{
		// Denotes table RelativeLocation with labelkey=''
		static public string RelativeLocationLabelKey { get{return UnitLabelKdsMBLabel.K("").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _ExternalTag;
		private System.Guid _ContainingLocationID;
		private System.Guid _LocationID;
		private EntityRef<Location> _ContainingLocation;
		private EntityRef<Location> _BaseLocation;
		private EntityRef<Unit> _DerivedUnit;
		private EntityRef<PlainRelativeLocation> _DerivedPlainRelativeLocation;

		public RelativeLocation()
		{
			this._ContainingLocation = default(EntityRef<Location>);
			this._BaseLocation = default(EntityRef<Location>);
			this._DerivedUnit = default(EntityRef<Unit>);
			this._DerivedPlainRelativeLocation = default(EntityRef<PlainRelativeLocation>);
		}
		/// Denotes the RelativeLocation's Id column with type id(nonnull) with labelkey='Id'
		static public string RelativeLocation_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.RelativeLocation),Name="RelativeLocation_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the RelativeLocation's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string RelativeLocation_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.RelativeLocation),Name="RelativeLocation_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the RelativeLocation's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string RelativeLocation_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.RelativeLocation),Name="RelativeLocation_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the RelativeLocation's ExternalTag column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='External Tag'
		static public string RelativeLocation_ExternalTag{ get{return UnitLabelKdsMBLabel.K("External Tag").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.RelativeLocation),Name="RelativeLocation_ExternalTag")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalTag", DbType="NVARCHAR (50)")]
		public string ExternalTag
		{
			get
			{
				return this._ExternalTag;
			}
			set
			{
				if ((this._ExternalTag != value))
				{
					this._ExternalTag = value;
				}
			}
		}
		/// Denotes the RelativeLocation's ContainingLocationID column with type link(nonnull, field Location.Id) with labelkey='Containing Location'
		static public string RelativeLocation_ContainingLocationID{ get{return UnitLabelKdsMBLabel.K("Containing Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.RelativeLocation),Name="RelativeLocation_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					this._ContainingLocationID = value;
				}
			}
		}
		/// Denotes the RelativeLocation's LocationID column with type link(nonnull, field Location.Id) with labelkey='Location'
		static public string RelativeLocation_LocationID{ get{return UnitLabelKdsMBLabel.K("Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.RelativeLocation),Name="RelativeLocation_LocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RelativeLocation_DerivedUnit", Storage="_DerivedUnit", ThisKey="Id", OtherKey="RelativeLocationID", IsUnique=true, IsForeignKey=false)]
		public Unit DerivedUnit
		{
			get
			{
				return this._DerivedUnit.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RelativeLocation_DerivedPlainRelativeLocation", Storage="_DerivedPlainRelativeLocation", ThisKey="Id", OtherKey="RelativeLocationID", IsUnique=true, IsForeignKey=false)]
		public PlainRelativeLocation DerivedPlainRelativeLocation
		{
			get
			{
				return this._DerivedPlainRelativeLocation.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainingLocation_RelativeLocation", Storage="_ContainingLocation", ThisKey="ContainingLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location ContainingLocation
		{
			get
			{
				return this._ContainingLocation.Entity;
			}
			set
			{
				Location previousValue = this._ContainingLocation.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseLocation_RelativeLocation", Storage="_BaseLocation", ThisKey="LocationID", OtherKey="Id", IsForeignKey=true)]
		public Location BaseLocation
		{
			get
			{
				return this._BaseLocation.Entity;
			}
			set
			{
				Location previousValue = this._BaseLocation.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location
	{
		// Denotes table Location with labelkey='Location'
		static public string LocationLabelKey { get{return UnitLabelKdsMBLabel.K("Location").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private string _Desc;
		private string _Comment;
		private System.Data.Linq.Binary _GISLocation;
		private byte? _GISZoom;
		private EntitySet<RelativeLocation> _RelativeLocationContainingLocation;
		private EntitySet<Contact> _ContactLocation;
		private EntitySet<Specification> _SpecificationUnitLocation;
		private EntitySet<Attachment> _AttachmentUnitLocation;
		private EntitySet<LocationContainment> _LocationContainmentContainedLocation;
		private EntitySet<LocationContainment> _LocationContainmentContainingLocation;
		private EntityRef<RelativeLocation> _DerivedRelativeLocation;
		private EntityRef<PostalAddress> _DerivedPostalAddress;

		public Location()
		{
			this._RelativeLocationContainingLocation = new EntitySet<RelativeLocation>(new Action<RelativeLocation>(this.attach_RelativeLocationContainingLocation), new Action<RelativeLocation>(this.detach_RelativeLocationContainingLocation));
			this._ContactLocation = new EntitySet<Contact>(new Action<Contact>(this.attach_ContactLocation), new Action<Contact>(this.detach_ContactLocation));
			this._SpecificationUnitLocation = new EntitySet<Specification>(new Action<Specification>(this.attach_SpecificationUnitLocation), new Action<Specification>(this.detach_SpecificationUnitLocation));
			this._AttachmentUnitLocation = new EntitySet<Attachment>(new Action<Attachment>(this.attach_AttachmentUnitLocation), new Action<Attachment>(this.detach_AttachmentUnitLocation));
			this._LocationContainmentContainedLocation = new EntitySet<LocationContainment>(new Action<LocationContainment>(this.attach_LocationContainmentContainedLocation), new Action<LocationContainment>(this.detach_LocationContainmentContainedLocation));
			this._LocationContainmentContainingLocation = new EntitySet<LocationContainment>(new Action<LocationContainment>(this.attach_LocationContainmentContainingLocation), new Action<LocationContainment>(this.detach_LocationContainmentContainingLocation));
			this._DerivedRelativeLocation = default(EntityRef<RelativeLocation>);
			this._DerivedPostalAddress = default(EntityRef<PostalAddress>);
		}
		/// Denotes the Location's Id column with type id(nonnull) with labelkey='Id'
		static public string Location_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Location),Name="Location_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the Location's Code column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='Path'
		static public string Location_Code{ get{return UnitLabelKdsMBLabel.K("Path").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Location),Name="Location_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the Location's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string Location_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Location),Name="Location_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the Location's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Location_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Location),Name="Location_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		/// Denotes the Location's GISLocation column with type geography with labelkey='GISLocation'
		static public string Location_GISLocation{ get{return UnitLabelKdsMBLabel.K("GISLocation").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Location),Name="Location_GISLocation")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GISLocation", DbType="VARBINARY(MAX)")]
		public System.Data.Linq.Binary GISLocation
		{
			get
			{
				return this._GISLocation;
			}
			set
			{
				if ((this._GISLocation != value))
				{
					this._GISLocation = value;
				}
			}
		}
		/// Denotes the Location's GISZoom column with type integer(min 0, max 20) with labelkey='GISZoom'
		static public string Location_GISZoom{ get{return UnitLabelKdsMBLabel.K("GISZoom").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Location),Name="Location_GISZoom")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GISZoom", DbType="TINYINT")]
		public byte? GISZoom
		{
			get
			{
				return this._GISZoom;
			}
			set
			{
				if ((this._GISZoom != value))
				{
					this._GISZoom = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_RelativeLocation", Storage="_RelativeLocationContainingLocation", ThisKey="Id", OtherKey="ContainingLocationID")]
		public EntitySet<RelativeLocation> RelativeLocationContainingLocation
		{
			get
			{
				return this._RelativeLocationContainingLocation;
			}
			set
			{
				this._RelativeLocationContainingLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_DerivedRelativeLocation", Storage="_DerivedRelativeLocation", ThisKey="Id", OtherKey="LocationID", IsUnique=true, IsForeignKey=false)]
		public RelativeLocation DerivedRelativeLocation
		{
			get
			{
				return this._DerivedRelativeLocation.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_ContactLocation", ThisKey="Id", OtherKey="LocationID")]
		public EntitySet<Contact> ContactLocation
		{
			get
			{
				return this._ContactLocation;
			}
			set
			{
				this._ContactLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_DerivedPostalAddress", Storage="_DerivedPostalAddress", ThisKey="Id", OtherKey="LocationID", IsUnique=true, IsForeignKey=false)]
		public PostalAddress DerivedPostalAddress
		{
			get
			{
				return this._DerivedPostalAddress.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Specification", Storage="_SpecificationUnitLocation", ThisKey="Id", OtherKey="UnitLocationID")]
		public EntitySet<Specification> SpecificationUnitLocation
		{
			get
			{
				return this._SpecificationUnitLocation;
			}
			set
			{
				this._SpecificationUnitLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Attachment", Storage="_AttachmentUnitLocation", ThisKey="Id", OtherKey="UnitLocationID")]
		public EntitySet<Attachment> AttachmentUnitLocation
		{
			get
			{
				return this._AttachmentUnitLocation;
			}
			set
			{
				this._AttachmentUnitLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_LocationContainment", Storage="_LocationContainmentContainedLocation", ThisKey="Id", OtherKey="ContainedLocationID")]
		public EntitySet<LocationContainment> LocationContainmentContainedLocation
		{
			get
			{
				return this._LocationContainmentContainedLocation;
			}
			set
			{
				this._LocationContainmentContainedLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_LocationContainment", Storage="_LocationContainmentContainingLocation", ThisKey="Id", OtherKey="ContainingLocationID")]
		public EntitySet<LocationContainment> LocationContainmentContainingLocation
		{
			get
			{
				return this._LocationContainmentContainingLocation;
			}
			set
			{
				this._LocationContainmentContainingLocation.Assign(value);
			}
		}

		private void attach_RelativeLocationContainingLocation(RelativeLocation entity)
		{
			entity.ContainingLocation = this;
		}
		private void detach_RelativeLocationContainingLocation(RelativeLocation entity)
		{
			entity.ContainingLocation = null;
		}

		private void attach_ContactLocation(Contact entity)
		{
			entity.Location = this;
		}
		private void detach_ContactLocation(Contact entity)
		{
			entity.Location = null;
		}

		private void attach_SpecificationUnitLocation(Specification entity)
		{
			entity.UnitLocation = this;
		}
		private void detach_SpecificationUnitLocation(Specification entity)
		{
			entity.UnitLocation = null;
		}

		private void attach_AttachmentUnitLocation(Attachment entity)
		{
			entity.UnitLocation = this;
		}
		private void detach_AttachmentUnitLocation(Attachment entity)
		{
			entity.UnitLocation = null;
		}

		private void attach_LocationContainmentContainedLocation(LocationContainment entity)
		{
			entity.ContainedLocation = this;
		}
		private void detach_LocationContainmentContainedLocation(LocationContainment entity)
		{
			entity.ContainedLocation = null;
		}

		private void attach_LocationContainmentContainingLocation(LocationContainment entity)
		{
			entity.ContainingLocation = this;
		}
		private void detach_LocationContainmentContainingLocation(LocationContainment entity)
		{
			entity.ContainingLocation = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationContainment")]
	public partial class LocationContainment
	{
		// Denotes table LocationContainment with labelkey=''
		static public string LocationContainmentLabelKey { get{return UnitLabelKdsMBLabel.K("").Translate();}}
		private System.Guid _Id;
		private System.Guid _ContainedLocationID;
		private System.Guid _ContainingLocationID;
		private int _Depth;
		private EntityRef<Location> _ContainedLocation;
		private EntityRef<Location> _ContainingLocation;

		public LocationContainment()
		{
			this._ContainedLocation = default(EntityRef<Location>);
			this._ContainingLocation = default(EntityRef<Location>);
		}
		/// Denotes the LocationContainment's Id column with type id(nonnull) with labelkey='Id'
		static public string LocationContainment_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.LocationContainment),Name="LocationContainment_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the LocationContainment's ContainedLocationID column with type link(nonnull, field Location.Id) with labelkey='Contained Location'
		static public string LocationContainment_ContainedLocationID{ get{return UnitLabelKdsMBLabel.K("Contained Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.LocationContainment),Name="LocationContainment_ContainedLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainedLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContainedLocationID
		{
			get
			{
				return this._ContainedLocationID;
			}
			set
			{
				if ((this._ContainedLocationID != value))
				{
					this._ContainedLocationID = value;
				}
			}
		}
		/// Denotes the LocationContainment's ContainingLocationID column with type link(nonnull, field Location.Id) with labelkey='Containing Location'
		static public string LocationContainment_ContainingLocationID{ get{return UnitLabelKdsMBLabel.K("Containing Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.LocationContainment),Name="LocationContainment_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					this._ContainingLocationID = value;
				}
			}
		}
		/// Denotes the LocationContainment's Depth column with type integer(nonnull, 32) with labelkey='Depth'
		static public string LocationContainment_Depth{ get{return UnitLabelKdsMBLabel.K("Depth").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.LocationContainment),Name="LocationContainment_Depth")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="INT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public int Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this._Depth = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainedLocation_LocationContainment", Storage="_ContainedLocation", ThisKey="ContainedLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location ContainedLocation
		{
			get
			{
				return this._ContainedLocation.Entity;
			}
			set
			{
				Location previousValue = this._ContainedLocation.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainingLocation_LocationContainment", Storage="_ContainingLocation", ThisKey="ContainingLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location ContainingLocation
		{
			get
			{
				return this._ContainingLocation.Entity;
			}
			set
			{
				Location previousValue = this._ContainingLocation.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit
	{
		// Denotes table Unit with labelkey='Unit'
		static public string UnitLabelKey { get{return UnitLabelKdsMBLabel.K("Unit").Translate();}}
		private System.Guid _Id;
		private System.Guid _RelativeLocationID;
		private System.Guid? _UnitCategoryID;
		private string _Make;
		private string _Model;
		private string _Serial;
		private System.DateTime? _PurchaseDate;
		private string _Drawing;
		private System.Guid? _PurchaseVendorID;
		private System.Guid? _OwnershipID;
		private System.Guid? _AssetCodeID;
		private System.Guid? _SystemCodeID;
		private System.Guid? _UnitUsageID;
		private System.Decimal? _OriginalCost;
		private System.Decimal? _ReplacementCost;
		private System.DateTime? _ReplacementCostLastDate;
		private System.UInt16? _TypicalLife;
		private System.DateTime? _ScrapDate;
		private System.Decimal? _ScrapValue;
		private System.Guid? _WorkOrderExpenseModelID;
		private System.Guid? _AccessCodeID;
		private EntityRef<RelativeLocation> _BaseRelativeLocation;
		private EntityRef<UnitCategory> _UnitCategory;
		private EntityRef<Vendor> _PurchaseVendor;
		private EntityRef<Ownership> _Ownership;
		private EntityRef<AssetCode> _AssetCode;
		private EntityRef<SystemCode> _SystemCode;
		private EntityRef<UnitUsage> _UnitUsage;
		private EntityRef<WorkOrderExpenseModel> _WorkOrderExpenseModel;
		private EntityRef<AccessCode> _AccessCode;

		public Unit()
		{
			this._BaseRelativeLocation = default(EntityRef<RelativeLocation>);
			this._UnitCategory = default(EntityRef<UnitCategory>);
			this._PurchaseVendor = default(EntityRef<Vendor>);
			this._Ownership = default(EntityRef<Ownership>);
			this._AssetCode = default(EntityRef<AssetCode>);
			this._SystemCode = default(EntityRef<SystemCode>);
			this._UnitUsage = default(EntityRef<UnitUsage>);
			this._WorkOrderExpenseModel = default(EntityRef<WorkOrderExpenseModel>);
			this._AccessCode = default(EntityRef<AccessCode>);
		}
		/// Denotes the Unit's Id column with type id(nonnull) with labelkey='Id'
		static public string Unit_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the Unit's RelativeLocationID column with type link(nonnull, field RelativeLocation.Id) with labelkey=''
		static public string Unit_RelativeLocationID{ get{return UnitLabelKdsMBLabel.K("").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_RelativeLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RelativeLocationID
		{
			get
			{
				return this._RelativeLocationID;
			}
			set
			{
				if ((this._RelativeLocationID != value))
				{
					this._RelativeLocationID = value;
				}
			}
		}
		/// Denotes the Unit's UnitCategoryID column with type link(field UnitCategory.Id) with labelkey='Unit Category'
		static public string Unit_UnitCategoryID{ get{return UnitLabelKdsMBLabel.K("Unit Category").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_UnitCategoryID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCategoryID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? UnitCategoryID
		{
			get
			{
				return this._UnitCategoryID;
			}
			set
			{
				if ((this._UnitCategoryID != value))
				{
					this._UnitCategoryID = value;
				}
			}
		}
		/// Denotes the Unit's Make column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Make'
		static public string Unit_Make{ get{return UnitLabelKdsMBLabel.K("Make").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_Make")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVARCHAR (150)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
		/// Denotes the Unit's Model column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Model'
		static public string Unit_Model{ get{return UnitLabelKdsMBLabel.K("Model").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_Model")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVARCHAR (150)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		/// Denotes the Unit's Serial column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Serial'
		static public string Unit_Serial{ get{return UnitLabelKdsMBLabel.K("Serial").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_Serial")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVARCHAR (150)")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this._Serial = value;
				}
			}
		}
		/// Denotes the Unit's PurchaseDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 00:00), by 24:00) with labelkey='PurchaseDate'
		static public string Unit_PurchaseDate{ get{return UnitLabelKdsMBLabel.K("PurchaseDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_PurchaseDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DATETIME")]
		public System.DateTime? PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		/// Denotes the Unit's Drawing column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Drawing'
		static public string Unit_Drawing{ get{return UnitLabelKdsMBLabel.K("Drawing").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_Drawing")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drawing", DbType="NVARCHAR (150)")]
		public string Drawing
		{
			get
			{
				return this._Drawing;
			}
			set
			{
				if ((this._Drawing != value))
				{
					this._Drawing = value;
				}
			}
		}
		/// Denotes the Unit's PurchaseVendorID column with type link(field Vendor.Id) with labelkey='Purchase Vendor'
		static public string Unit_PurchaseVendorID{ get{return UnitLabelKdsMBLabel.K("Purchase Vendor").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_PurchaseVendorID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseVendorID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? PurchaseVendorID
		{
			get
			{
				return this._PurchaseVendorID;
			}
			set
			{
				if ((this._PurchaseVendorID != value))
				{
					this._PurchaseVendorID = value;
				}
			}
		}
		/// Denotes the Unit's OwnershipID column with type link(field Ownership.Id) with labelkey='Ownership'
		static public string Unit_OwnershipID{ get{return UnitLabelKdsMBLabel.K("Ownership").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_OwnershipID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? OwnershipID
		{
			get
			{
				return this._OwnershipID;
			}
			set
			{
				if ((this._OwnershipID != value))
				{
					this._OwnershipID = value;
				}
			}
		}
		/// Denotes the Unit's AssetCodeID column with type link(field AssetCode.Id) with labelkey='Asset Code'
		static public string Unit_AssetCodeID{ get{return UnitLabelKdsMBLabel.K("Asset Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_AssetCodeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCodeID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? AssetCodeID
		{
			get
			{
				return this._AssetCodeID;
			}
			set
			{
				if ((this._AssetCodeID != value))
				{
					this._AssetCodeID = value;
				}
			}
		}
		/// Denotes the Unit's SystemCodeID column with type link(field SystemCode.Id) with labelkey='System Code'
		static public string Unit_SystemCodeID{ get{return UnitLabelKdsMBLabel.K("System Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_SystemCodeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemCodeID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? SystemCodeID
		{
			get
			{
				return this._SystemCodeID;
			}
			set
			{
				if ((this._SystemCodeID != value))
				{
					this._SystemCodeID = value;
				}
			}
		}
		/// Denotes the Unit's UnitUsageID column with type link(field UnitUsage.Id) with labelkey='Unit Usage'
		static public string Unit_UnitUsageID{ get{return UnitLabelKdsMBLabel.K("Unit Usage").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_UnitUsageID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitUsageID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? UnitUsageID
		{
			get
			{
				return this._UnitUsageID;
			}
			set
			{
				if ((this._UnitUsageID != value))
				{
					this._UnitUsageID = value;
				}
			}
		}
		/// Denotes the Unit's OriginalCost column with type currency((min (¤922,337,203,685,477.58)), (max ¤922,337,203,685,477.58), by ¤0.01) with labelkey='OriginalCost'
		static public string Unit_OriginalCost{ get{return UnitLabelKdsMBLabel.K("OriginalCost").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_OriginalCost")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCost", DbType="MONEY")]
		public System.Decimal? OriginalCost
		{
			get
			{
				return this._OriginalCost;
			}
			set
			{
				if ((this._OriginalCost != value))
				{
					this._OriginalCost = value;
				}
			}
		}
		/// Denotes the Unit's ReplacementCost column with type currency((min (¤922,337,203,685,477.58)), (max ¤922,337,203,685,477.58), by ¤0.01) with labelkey='ReplacementCost'
		static public string Unit_ReplacementCost{ get{return UnitLabelKdsMBLabel.K("ReplacementCost").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_ReplacementCost")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementCost", DbType="MONEY")]
		public System.Decimal? ReplacementCost
		{
			get
			{
				return this._ReplacementCost;
			}
			set
			{
				if ((this._ReplacementCost != value))
				{
					this._ReplacementCost = value;
				}
			}
		}
		/// Denotes the Unit's ReplacementCostLastDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 00:00), by 24:00) with labelkey='ReplacementCostLastDate'
		static public string Unit_ReplacementCostLastDate{ get{return UnitLabelKdsMBLabel.K("ReplacementCostLastDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_ReplacementCostLastDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementCostLastDate", DbType="DATETIME")]
		public System.DateTime? ReplacementCostLastDate
		{
			get
			{
				return this._ReplacementCostLastDate;
			}
			set
			{
				if ((this._ReplacementCostLastDate != value))
				{
					this._ReplacementCostLastDate = value;
				}
			}
		}
		/// Denotes the Unit's TypicalLife column with type integer(unsigned 16) with labelkey='TypicalLife'
		static public string Unit_TypicalLife{ get{return UnitLabelKdsMBLabel.K("TypicalLife").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_TypicalLife")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypicalLife", DbType="INT")]
		public System.UInt16? TypicalLife
		{
			get
			{
				return this._TypicalLife;
			}
			set
			{
				if ((this._TypicalLife != value))
				{
					this._TypicalLife = value;
				}
			}
		}
		/// Denotes the Unit's ScrapDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 00:00), by 24:00) with labelkey='ScrapDate'
		static public string Unit_ScrapDate{ get{return UnitLabelKdsMBLabel.K("ScrapDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_ScrapDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrapDate", DbType="DATETIME")]
		public System.DateTime? ScrapDate
		{
			get
			{
				return this._ScrapDate;
			}
			set
			{
				if ((this._ScrapDate != value))
				{
					this._ScrapDate = value;
				}
			}
		}
		/// Denotes the Unit's ScrapValue column with type currency((min (¤922,337,203,685,477.58)), (max ¤922,337,203,685,477.58), by ¤0.01) with labelkey='ScrapValue'
		static public string Unit_ScrapValue{ get{return UnitLabelKdsMBLabel.K("ScrapValue").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_ScrapValue")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrapValue", DbType="MONEY")]
		public System.Decimal? ScrapValue
		{
			get
			{
				return this._ScrapValue;
			}
			set
			{
				if ((this._ScrapValue != value))
				{
					this._ScrapValue = value;
				}
			}
		}
		/// Denotes the Unit's WorkOrderExpenseModelID column with type link(field WorkOrderExpenseModel.Id) with labelkey='Work Order Expense Model'
		static public string Unit_WorkOrderExpenseModelID{ get{return UnitLabelKdsMBLabel.K("Work Order Expense Model").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_WorkOrderExpenseModelID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderExpenseModelID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? WorkOrderExpenseModelID
		{
			get
			{
				return this._WorkOrderExpenseModelID;
			}
			set
			{
				if ((this._WorkOrderExpenseModelID != value))
				{
					this._WorkOrderExpenseModelID = value;
				}
			}
		}
		/// Denotes the Unit's AccessCodeID column with type link(field AccessCode.Id) with labelkey='Access Code'
		static public string Unit_AccessCodeID{ get{return UnitLabelKdsMBLabel.K("Access Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Unit),Name="Unit_AccessCodeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessCodeID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? AccessCodeID
		{
			get
			{
				return this._AccessCodeID;
			}
			set
			{
				if ((this._AccessCodeID != value))
				{
					this._AccessCodeID = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseRelativeLocation_Unit", Storage="_BaseRelativeLocation", ThisKey="RelativeLocationID", OtherKey="Id", IsForeignKey=true)]
		public RelativeLocation BaseRelativeLocation
		{
			get
			{
				return this._BaseRelativeLocation.Entity;
			}
			set
			{
				RelativeLocation previousValue = this._BaseRelativeLocation.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitCategory_Unit", Storage="_UnitCategory", ThisKey="UnitCategoryID", OtherKey="Id", IsForeignKey=true)]
		public UnitCategory UnitCategory
		{
			get
			{
				return this._UnitCategory.Entity;
			}
			set
			{
				UnitCategory previousValue = this._UnitCategory.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseVendor_Unit", Storage="_PurchaseVendor", ThisKey="PurchaseVendorID", OtherKey="Id", IsForeignKey=true)]
		public Vendor PurchaseVendor
		{
			get
			{
				return this._PurchaseVendor.Entity;
			}
			set
			{
				Vendor previousValue = this._PurchaseVendor.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ownership_Unit", Storage="_Ownership", ThisKey="OwnershipID", OtherKey="Id", IsForeignKey=true)]
		public Ownership Ownership
		{
			get
			{
				return this._Ownership.Entity;
			}
			set
			{
				Ownership previousValue = this._Ownership.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetCode_Unit", Storage="_AssetCode", ThisKey="AssetCodeID", OtherKey="Id", IsForeignKey=true)]
		public AssetCode AssetCode
		{
			get
			{
				return this._AssetCode.Entity;
			}
			set
			{
				AssetCode previousValue = this._AssetCode.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemCode_Unit", Storage="_SystemCode", ThisKey="SystemCodeID", OtherKey="Id", IsForeignKey=true)]
		public SystemCode SystemCode
		{
			get
			{
				return this._SystemCode.Entity;
			}
			set
			{
				SystemCode previousValue = this._SystemCode.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitUsage_Unit", Storage="_UnitUsage", ThisKey="UnitUsageID", OtherKey="Id", IsForeignKey=true)]
		public UnitUsage UnitUsage
		{
			get
			{
				return this._UnitUsage.Entity;
			}
			set
			{
				UnitUsage previousValue = this._UnitUsage.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderExpenseModel_Unit", Storage="_WorkOrderExpenseModel", ThisKey="WorkOrderExpenseModelID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderExpenseModel WorkOrderExpenseModel
		{
			get
			{
				return this._WorkOrderExpenseModel.Entity;
			}
			set
			{
				WorkOrderExpenseModel previousValue = this._WorkOrderExpenseModel.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessCode_Unit", Storage="_AccessCode", ThisKey="AccessCodeID", OtherKey="Id", IsForeignKey=true)]
		public AccessCode AccessCode
		{
			get
			{
				return this._AccessCode.Entity;
			}
			set
			{
				AccessCode previousValue = this._AccessCode.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitCategory")]
	public partial class UnitCategory
	{
		// Denotes table UnitCategory with labelkey='Unit Category'
		static public string UnitCategoryLabelKey { get{return UnitLabelKdsMBLabel.K("Unit Category").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<Unit> _UnitUnitCategory;

		public UnitCategory()
		{
			this._UnitUnitCategory = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitUnitCategory), new Action<Unit>(this.detach_UnitUnitCategory));
		}
		/// Denotes the UnitCategory's Id column with type id(nonnull) with labelkey='Id'
		static public string UnitCategory_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitCategory),Name="UnitCategory_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the UnitCategory's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string UnitCategory_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitCategory),Name="UnitCategory_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the UnitCategory's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string UnitCategory_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitCategory),Name="UnitCategory_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the UnitCategory's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string UnitCategory_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitCategory),Name="UnitCategory_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the UnitCategory's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string UnitCategory_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitCategory),Name="UnitCategory_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitCategory_Unit", Storage="_UnitUnitCategory", ThisKey="Id", OtherKey="UnitCategoryID")]
		public EntitySet<Unit> UnitUnitCategory
		{
			get
			{
				return this._UnitUnitCategory;
			}
			set
			{
				this._UnitUnitCategory.Assign(value);
			}
		}

		private void attach_UnitUnitCategory(Unit entity)
		{
			entity.UnitCategory = this;
		}
		private void detach_UnitUnitCategory(Unit entity)
		{
			entity.UnitCategory = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor
	{
		// Denotes table Vendor with labelkey='Vendor'
		static public string VendorLabelKey { get{return UnitLabelKdsMBLabel.K("Vendor").Translate();}}
		private System.Guid _Id;
		private EntitySet<Unit> _UnitPurchaseVendor;

		public Vendor()
		{
			this._UnitPurchaseVendor = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitPurchaseVendor), new Action<Unit>(this.detach_UnitPurchaseVendor));
		}
		/// Denotes the Vendor's Id column with type id(nonnull) with labelkey='Id'
		static public string Vendor_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Vendor),Name="Vendor_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Unit", Storage="_UnitPurchaseVendor", ThisKey="Id", OtherKey="PurchaseVendorID")]
		public EntitySet<Unit> UnitPurchaseVendor
		{
			get
			{
				return this._UnitPurchaseVendor;
			}
			set
			{
				this._UnitPurchaseVendor.Assign(value);
			}
		}

		private void attach_UnitPurchaseVendor(Unit entity)
		{
			entity.PurchaseVendor = this;
		}
		private void detach_UnitPurchaseVendor(Unit entity)
		{
			entity.PurchaseVendor = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ownership")]
	public partial class Ownership
	{
		// Denotes table Ownership with labelkey='Ownership'
		static public string OwnershipLabelKey { get{return UnitLabelKdsMBLabel.K("Ownership").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<Unit> _UnitOwnership;

		public Ownership()
		{
			this._UnitOwnership = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitOwnership), new Action<Unit>(this.detach_UnitOwnership));
		}
		/// Denotes the Ownership's Id column with type id(nonnull) with labelkey='Id'
		static public string Ownership_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Ownership),Name="Ownership_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the Ownership's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string Ownership_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Ownership),Name="Ownership_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the Ownership's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string Ownership_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Ownership),Name="Ownership_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the Ownership's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string Ownership_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Ownership),Name="Ownership_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the Ownership's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Ownership_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Ownership),Name="Ownership_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ownership_Unit", Storage="_UnitOwnership", ThisKey="Id", OtherKey="OwnershipID")]
		public EntitySet<Unit> UnitOwnership
		{
			get
			{
				return this._UnitOwnership;
			}
			set
			{
				this._UnitOwnership.Assign(value);
			}
		}

		private void attach_UnitOwnership(Unit entity)
		{
			entity.Ownership = this;
		}
		private void detach_UnitOwnership(Unit entity)
		{
			entity.Ownership = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetCode")]
	public partial class AssetCode
	{
		// Denotes table AssetCode with labelkey='Asset Code'
		static public string AssetCodeLabelKey { get{return UnitLabelKdsMBLabel.K("Asset Code").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<Unit> _UnitAssetCode;

		public AssetCode()
		{
			this._UnitAssetCode = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitAssetCode), new Action<Unit>(this.detach_UnitAssetCode));
		}
		/// Denotes the AssetCode's Id column with type id(nonnull) with labelkey='Id'
		static public string AssetCode_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.AssetCode),Name="AssetCode_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the AssetCode's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string AssetCode_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.AssetCode),Name="AssetCode_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the AssetCode's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string AssetCode_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.AssetCode),Name="AssetCode_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the AssetCode's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string AssetCode_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.AssetCode),Name="AssetCode_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the AssetCode's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string AssetCode_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.AssetCode),Name="AssetCode_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetCode_Unit", Storage="_UnitAssetCode", ThisKey="Id", OtherKey="AssetCodeID")]
		public EntitySet<Unit> UnitAssetCode
		{
			get
			{
				return this._UnitAssetCode;
			}
			set
			{
				this._UnitAssetCode.Assign(value);
			}
		}

		private void attach_UnitAssetCode(Unit entity)
		{
			entity.AssetCode = this;
		}
		private void detach_UnitAssetCode(Unit entity)
		{
			entity.AssetCode = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemCode")]
	public partial class SystemCode
	{
		// Denotes table SystemCode with labelkey='System Code'
		static public string SystemCodeLabelKey { get{return UnitLabelKdsMBLabel.K("System Code").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<Unit> _UnitSystemCode;

		public SystemCode()
		{
			this._UnitSystemCode = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitSystemCode), new Action<Unit>(this.detach_UnitSystemCode));
		}
		/// Denotes the SystemCode's Id column with type id(nonnull) with labelkey='Id'
		static public string SystemCode_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SystemCode),Name="SystemCode_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the SystemCode's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string SystemCode_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SystemCode),Name="SystemCode_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the SystemCode's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string SystemCode_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SystemCode),Name="SystemCode_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the SystemCode's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string SystemCode_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SystemCode),Name="SystemCode_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the SystemCode's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string SystemCode_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SystemCode),Name="SystemCode_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemCode_Unit", Storage="_UnitSystemCode", ThisKey="Id", OtherKey="SystemCodeID")]
		public EntitySet<Unit> UnitSystemCode
		{
			get
			{
				return this._UnitSystemCode;
			}
			set
			{
				this._UnitSystemCode.Assign(value);
			}
		}

		private void attach_UnitSystemCode(Unit entity)
		{
			entity.SystemCode = this;
		}
		private void detach_UnitSystemCode(Unit entity)
		{
			entity.SystemCode = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitUsage")]
	public partial class UnitUsage
	{
		// Denotes table UnitUsage with labelkey='Unit Usage'
		static public string UnitUsageLabelKey { get{return UnitLabelKdsMBLabel.K("Unit Usage").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<Unit> _UnitUnitUsage;

		public UnitUsage()
		{
			this._UnitUnitUsage = new EntitySet<Unit>(new Action<Unit>(this.attach_UnitUnitUsage), new Action<Unit>(this.detach_UnitUnitUsage));
		}
		/// Denotes the UnitUsage's Id column with type id(nonnull) with labelkey='Id'
		static public string UnitUsage_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitUsage),Name="UnitUsage_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the UnitUsage's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string UnitUsage_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitUsage),Name="UnitUsage_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the UnitUsage's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string UnitUsage_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitUsage),Name="UnitUsage_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the UnitUsage's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string UnitUsage_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitUsage),Name="UnitUsage_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the UnitUsage's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string UnitUsage_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.UnitUsage),Name="UnitUsage_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitUsage_Unit", Storage="_UnitUnitUsage", ThisKey="Id", OtherKey="UnitUsageID")]
		public EntitySet<Unit> UnitUnitUsage
		{
			get
			{
				return this._UnitUnitUsage;
			}
			set
			{
				this._UnitUnitUsage.Assign(value);
			}
		}

		private void attach_UnitUnitUsage(Unit entity)
		{
			entity.UnitUsage = this;
		}
		private void detach_UnitUnitUsage(Unit entity)
		{
			entity.UnitUsage = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact
	{
		// Denotes table Contact with labelkey='Contact'
		static public string ContactLabelKey { get{return UnitLabelKdsMBLabel.K("Contact").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Comment;
		private string _BusinessPhone;
		private string _FaxPhone;
		private string _HomePhone;
		private string _PagerPhone;
		private string _MobilePhone;
		private string _Email;
		private string _AlternateEmail;
		private string _WebURL;
		private System.Guid? _LDAPGuid;
		private System.Guid? _LocationID;
		private int? _PreferredLanguage;
		private EntitySet<User> _UserContact;
		private EntityRef<Location> _Location;

		public Contact()
		{
			this._UserContact = new EntitySet<User>(new Action<User>(this.attach_UserContact), new Action<User>(this.detach_UserContact));
			this._Location = default(EntityRef<Location>);
		}
		/// Denotes the Contact's Id column with type id(nonnull) with labelkey='Id'
		static public string Contact_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the Contact's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string Contact_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the Contact's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string Contact_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the Contact's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Contact_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		/// Denotes the Contact's BusinessPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='BusinessPhone'
		static public string Contact_BusinessPhone{ get{return UnitLabelKdsMBLabel.K("BusinessPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_BusinessPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPhone", DbType="NVARCHAR (50)")]
		public string BusinessPhone
		{
			get
			{
				return this._BusinessPhone;
			}
			set
			{
				if ((this._BusinessPhone != value))
				{
					this._BusinessPhone = value;
				}
			}
		}
		/// Denotes the Contact's FaxPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='FaxPhone'
		static public string Contact_FaxPhone{ get{return UnitLabelKdsMBLabel.K("FaxPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_FaxPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxPhone", DbType="NVARCHAR (50)")]
		public string FaxPhone
		{
			get
			{
				return this._FaxPhone;
			}
			set
			{
				if ((this._FaxPhone != value))
				{
					this._FaxPhone = value;
				}
			}
		}
		/// Denotes the Contact's HomePhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='HomePhone'
		static public string Contact_HomePhone{ get{return UnitLabelKdsMBLabel.K("HomePhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_HomePhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVARCHAR (50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		/// Denotes the Contact's PagerPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='PagerPhone'
		static public string Contact_PagerPhone{ get{return UnitLabelKdsMBLabel.K("PagerPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_PagerPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagerPhone", DbType="NVARCHAR (50)")]
		public string PagerPhone
		{
			get
			{
				return this._PagerPhone;
			}
			set
			{
				if ((this._PagerPhone != value))
				{
					this._PagerPhone = value;
				}
			}
		}
		/// Denotes the Contact's MobilePhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='MobilePhone'
		static public string Contact_MobilePhone{ get{return UnitLabelKdsMBLabel.K("MobilePhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_MobilePhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVARCHAR (50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		/// Denotes the Contact's Email column with type string(minlength 1, maxlength 128, maxlines 0, trim) with labelkey='Email'
		static public string Contact_Email{ get{return UnitLabelKdsMBLabel.K("Email").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_Email")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVARCHAR (128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		/// Denotes the Contact's AlternateEmail column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='Alternate Email'
		static public string Contact_AlternateEmail{ get{return UnitLabelKdsMBLabel.K("Alternate Email").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_AlternateEmail")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail", DbType="NVARCHAR(MAX)")]
		public string AlternateEmail
		{
			get
			{
				return this._AlternateEmail;
			}
			set
			{
				if ((this._AlternateEmail != value))
				{
					this._AlternateEmail = value;
				}
			}
		}
		/// Denotes the Contact's WebURL column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='WebURL'
		static public string Contact_WebURL{ get{return UnitLabelKdsMBLabel.K("WebURL").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_WebURL")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebURL", DbType="NVARCHAR(MAX)")]
		public string WebURL
		{
			get
			{
				return this._WebURL;
			}
			set
			{
				if ((this._WebURL != value))
				{
					this._WebURL = value;
				}
			}
		}
		/// Denotes the Contact's LDAPGuid column with type id with labelkey='AD Reference'
		static public string Contact_LDAPGuid{ get{return UnitLabelKdsMBLabel.K("AD Reference").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_LDAPGuid")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDAPGuid", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? LDAPGuid
		{
			get
			{
				return this._LDAPGuid;
			}
			set
			{
				if ((this._LDAPGuid != value))
				{
					this._LDAPGuid = value;
				}
			}
		}
		/// Denotes the Contact's LocationID column with type link(field Location.Id) with labelkey='Location'
		static public string Contact_LocationID{ get{return UnitLabelKdsMBLabel.K("Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_LocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		/// Denotes the Contact's PreferredLanguage column with type integer(32) with labelkey='PreferredLanguage'
		static public string Contact_PreferredLanguage{ get{return UnitLabelKdsMBLabel.K("PreferredLanguage").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Contact),Name="Contact_PreferredLanguage")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredLanguage", DbType="INT")]
		public int? PreferredLanguage
		{
			get
			{
				return this._PreferredLanguage;
			}
			set
			{
				if ((this._PreferredLanguage != value))
				{
					this._PreferredLanguage = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_UserContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<User> UserContact
		{
			get
			{
				return this._UserContact;
			}
			set
			{
				this._UserContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_Location", ThisKey="LocationID", OtherKey="Id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
			}
		}

		private void attach_UserContact(User entity)
		{
			entity.Contact = this;
		}
		private void detach_UserContact(User entity)
		{
			entity.Contact = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	public partial class User
	{
		// Denotes table User with labelkey='User'
		static public string UserLabelKey { get{return UnitLabelKdsMBLabel.K("User").Translate();}}
		private System.Guid _ContactID;
		private System.Guid _Id;
		private EntityRef<Contact> _Contact;

		public User()
		{
			this._Contact = default(EntityRef<Contact>);
		}
		/// Denotes the User's ContactID column with type link(nonnull, field Contact.Id) with labelkey='Contact'
		static public string User_ContactID{ get{return UnitLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.User),Name="User_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
		/// Denotes the User's Id column with type id(nonnull) with labelkey='Id'
		static public string User_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.User),Name="User_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostalAddress")]
	public partial class PostalAddress
	{
		// Denotes table PostalAddress with labelkey='Postal Address'
		static public string PostalAddressLabelKey { get{return UnitLabelKdsMBLabel.K("Postal Address").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private System.Guid _LocationID;
		private string _Address1;
		private string _Address2;
		private string _City;
		private string _Territory;
		private string _Country;
		private string _PostalCode;
		private EntityRef<Location> _BaseLocation;

		public PostalAddress()
		{
			this._BaseLocation = default(EntityRef<Location>);
		}
		/// Denotes the PostalAddress's Id column with type id(nonnull) with labelkey='Id'
		static public string PostalAddress_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the PostalAddress's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string PostalAddress_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the PostalAddress's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string PostalAddress_Hidden{ get{return UnitLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
		/// Denotes the PostalAddress's LocationID column with type link(nonnull, field Location.Id) with labelkey='Location'
		static public string PostalAddress_LocationID{ get{return UnitLabelKdsMBLabel.K("Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_LocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		/// Denotes the PostalAddress's Address1 column with type string(minlength 1, maxlength 30, maxlines 0, trim) with labelkey='Address1'
		static public string PostalAddress_Address1{ get{return UnitLabelKdsMBLabel.K("Address1").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Address1")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVARCHAR (30)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		/// Denotes the PostalAddress's Address2 column with type string(minlength 1, maxlength 30, maxlines 0, trim) with labelkey='Address2'
		static public string PostalAddress_Address2{ get{return UnitLabelKdsMBLabel.K("Address2").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Address2")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVARCHAR (30)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		/// Denotes the PostalAddress's City column with type string(minlength 1, maxlength 30, maxlines 0, trim) with labelkey='City'
		static public string PostalAddress_City{ get{return UnitLabelKdsMBLabel.K("City").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_City")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVARCHAR (30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		/// Denotes the PostalAddress's Territory column with type string(minlength 1, maxlength 30, maxlines 0, trim) with labelkey='Territory'
		static public string PostalAddress_Territory{ get{return UnitLabelKdsMBLabel.K("Territory").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Territory")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Territory", DbType="NVARCHAR (30)")]
		public string Territory
		{
			get
			{
				return this._Territory;
			}
			set
			{
				if ((this._Territory != value))
				{
					this._Territory = value;
				}
			}
		}
		/// Denotes the PostalAddress's Country column with type string(minlength 1, maxlength 30, maxlines 0, trim) with labelkey='Country'
		static public string PostalAddress_Country{ get{return UnitLabelKdsMBLabel.K("Country").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_Country")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVARCHAR (30)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		/// Denotes the PostalAddress's PostalCode column with type string(minlength 1, maxlength 10, maxlines 0, trim) with labelkey='PostalCode'
		static public string PostalAddress_PostalCode{ get{return UnitLabelKdsMBLabel.K("PostalCode").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PostalAddress),Name="PostalAddress_PostalCode")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVARCHAR (10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseLocation_PostalAddress", Storage="_BaseLocation", ThisKey="LocationID", OtherKey="Id", IsForeignKey=true)]
		public Location BaseLocation
		{
			get
			{
				return this._BaseLocation.Entity;
			}
			set
			{
				Location previousValue = this._BaseLocation.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlainRelativeLocation")]
	public partial class PlainRelativeLocation
	{
		// Denotes table PlainRelativeLocation with labelkey='Relative Location'
		static public string PlainRelativeLocationLabelKey { get{return UnitLabelKdsMBLabel.K("Relative Location").Translate();}}
		private System.Guid _Id;
		private System.Guid _RelativeLocationID;
		private EntityRef<RelativeLocation> _BaseRelativeLocation;

		public PlainRelativeLocation()
		{
			this._BaseRelativeLocation = default(EntityRef<RelativeLocation>);
		}
		/// Denotes the PlainRelativeLocation's Id column with type id(nonnull) with labelkey='Id'
		static public string PlainRelativeLocation_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PlainRelativeLocation),Name="PlainRelativeLocation_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the PlainRelativeLocation's RelativeLocationID column with type link(nonnull, field RelativeLocation.Id) with labelkey=''
		static public string PlainRelativeLocation_RelativeLocationID{ get{return UnitLabelKdsMBLabel.K("").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.PlainRelativeLocation),Name="PlainRelativeLocation_RelativeLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RelativeLocationID
		{
			get
			{
				return this._RelativeLocationID;
			}
			set
			{
				if ((this._RelativeLocationID != value))
				{
					this._RelativeLocationID = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseRelativeLocation_PlainRelativeLocation", Storage="_BaseRelativeLocation", ThisKey="RelativeLocationID", OtherKey="Id", IsForeignKey=true)]
		public RelativeLocation BaseRelativeLocation
		{
			get
			{
				return this._BaseRelativeLocation.Entity;
			}
			set
			{
				RelativeLocation previousValue = this._BaseRelativeLocation.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specification")]
	public partial class Specification
	{
		// Denotes table Specification with labelkey='Specification'
		static public string SpecificationLabelKey { get{return UnitLabelKdsMBLabel.K("Specification").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private string _Desc;
		private string _Comment;
		private System.Guid _UnitLocationID;
		private System.Guid _SpecificationFormID;
		private string _ReportText;
		private EntityRef<Location> _UnitLocation;
		private EntityRef<SpecificationForm> _SpecificationForm;

		public Specification()
		{
			this._UnitLocation = default(EntityRef<Location>);
			this._SpecificationForm = default(EntityRef<SpecificationForm>);
		}
		/// Denotes the Specification's Id column with type id(nonnull) with labelkey='Id'
		static public string Specification_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the Specification's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string Specification_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the Specification's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string Specification_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the Specification's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Specification_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		/// Denotes the Specification's UnitLocationID column with type link(nonnull, field Location.Id) with labelkey='Unit'
		static public string Specification_UnitLocationID{ get{return UnitLabelKdsMBLabel.K("Unit").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_UnitLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid UnitLocationID
		{
			get
			{
				return this._UnitLocationID;
			}
			set
			{
				if ((this._UnitLocationID != value))
				{
					this._UnitLocationID = value;
				}
			}
		}
		/// Denotes the Specification's SpecificationFormID column with type link(nonnull, field SpecificationForm.Id) with labelkey='SpecificationForm'
		static public string Specification_SpecificationFormID{ get{return UnitLabelKdsMBLabel.K("SpecificationForm").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_SpecificationFormID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationFormID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid SpecificationFormID
		{
			get
			{
				return this._SpecificationFormID;
			}
			set
			{
				if ((this._SpecificationFormID != value))
				{
					this._SpecificationFormID = value;
				}
			}
		}
		/// Denotes the Specification's ReportText column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='ReportText'
		static public string Specification_ReportText{ get{return UnitLabelKdsMBLabel.K("ReportText").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Specification),Name="Specification_ReportText")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportText", DbType="NVARCHAR(MAX)")]
		public string ReportText
		{
			get
			{
				return this._ReportText;
			}
			set
			{
				if ((this._ReportText != value))
				{
					this._ReportText = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitLocation_Specification", Storage="_UnitLocation", ThisKey="UnitLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location UnitLocation
		{
			get
			{
				return this._UnitLocation.Entity;
			}
			set
			{
				Location previousValue = this._UnitLocation.Entity;
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificationForm_Specification", Storage="_SpecificationForm", ThisKey="SpecificationFormID", OtherKey="Id", IsForeignKey=true)]
		public SpecificationForm SpecificationForm
		{
			get
			{
				return this._SpecificationForm.Entity;
			}
			set
			{
				SpecificationForm previousValue = this._SpecificationForm.Entity;
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecificationForm")]
	public partial class SpecificationForm
	{
		// Denotes table SpecificationForm with labelkey='SpecificationForm'
		static public string SpecificationFormLabelKey { get{return UnitLabelKdsMBLabel.K("SpecificationForm").Translate();}}
		private System.Guid _Id;
		private EntitySet<Specification> _SpecificationSpecificationForm;

		public SpecificationForm()
		{
			this._SpecificationSpecificationForm = new EntitySet<Specification>(new Action<Specification>(this.attach_SpecificationSpecificationForm), new Action<Specification>(this.detach_SpecificationSpecificationForm));
		}
		/// Denotes the SpecificationForm's Id column with type id(nonnull) with labelkey='Id'
		static public string SpecificationForm_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SpecificationForm),Name="SpecificationForm_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificationForm_Specification", Storage="_SpecificationSpecificationForm", ThisKey="Id", OtherKey="SpecificationFormID")]
		public EntitySet<Specification> SpecificationSpecificationForm
		{
			get
			{
				return this._SpecificationSpecificationForm;
			}
			set
			{
				this._SpecificationSpecificationForm.Assign(value);
			}
		}

		private void attach_SpecificationSpecificationForm(Specification entity)
		{
			entity.SpecificationForm = this;
		}
		private void detach_SpecificationSpecificationForm(Specification entity)
		{
			entity.SpecificationForm = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecificationFormField")]
	public partial class SpecificationFormField
	{
		// Denotes table SpecificationFormField with labelkey='SpecificationFormField'
		static public string SpecificationFormFieldLabelKey { get{return UnitLabelKdsMBLabel.K("SpecificationFormField").Translate();}}
		private System.Guid _Id;

		public SpecificationFormField()
		{
		}
		/// Denotes the SpecificationFormField's Id column with type id(nonnull) with labelkey='Id'
		static public string SpecificationFormField_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SpecificationFormField),Name="SpecificationFormField_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecificationData")]
	public partial class SpecificationData
	{
		// Denotes table SpecificationData with labelkey='SpecificationData'
		static public string SpecificationDataLabelKey { get{return UnitLabelKdsMBLabel.K("SpecificationData").Translate();}}
		private System.Guid _Id;

		public SpecificationData()
		{
		}
		/// Denotes the SpecificationData's Id column with type id(nonnull) with labelkey='Id'
		static public string SpecificationData_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.SpecificationData),Name="SpecificationData_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachment")]
	public partial class Attachment
	{
		// Denotes table Attachment with labelkey='Attachment'
		static public string AttachmentLabelKey { get{return UnitLabelKdsMBLabel.K("Attachment").Translate();}}
		private System.Guid _Id;
		private string _Code;
		private string _Desc;
		private string _Comment;
		private string _Path;
		private System.Guid _UnitLocationID;
		private EntityRef<Location> _UnitLocation;

		public Attachment()
		{
			this._UnitLocation = default(EntityRef<Location>);
		}
		/// Denotes the Attachment's Id column with type id(nonnull) with labelkey='Id'
		static public string Attachment_Id{ get{return UnitLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Attachment),Name="Attachment_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		/// Denotes the Attachment's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string Attachment_Code{ get{return UnitLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Attachment),Name="Attachment_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		/// Denotes the Attachment's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string Attachment_Desc{ get{return UnitLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Attachment),Name="Attachment_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		/// Denotes the Attachment's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Attachment_Comment{ get{return UnitLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Attachment),Name="Attachment_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		/// Denotes the Attachment's Path column with type string(nonnull, minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='Path'
		static public string Attachment_Path{ get{return UnitLabelKdsMBLabel.K("Path").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Attachment),Name="Attachment_Path")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVARCHAR(MAX)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		/// Denotes the Attachment's UnitLocationID column with type link(nonnull, field Location.Id) with labelkey='Unit'
		static public string Attachment_UnitLocationID{ get{return UnitLabelKdsMBLabel.K("Unit").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(UnitEntities.Attachment),Name="Attachment_UnitLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid UnitLocationID
		{
			get
			{
				return this._UnitLocationID;
			}
			set
			{
				if ((this._UnitLocationID != value))
				{
					this._UnitLocationID = value;
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitLocation_Attachment", Storage="_UnitLocation", ThisKey="UnitLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location UnitLocation
		{
			get
			{
				return this._UnitLocation.Entity;
			}
			set
			{
				Location previousValue = this._UnitLocation.Entity;
			}
		}
	}
	internal class UnitLabelKdsMBLabel : Thinkage.Libraries.Translation.GeneralKeyBuilder {
		const string LabelContext = "dsMBLabel";

		static UnitLabelKdsMBLabel Instance = new UnitLabelKdsMBLabel();
		protected UnitLabelKdsMBLabel() {
		}
		protected override Thinkage.Libraries.Translation.ContextReference GetContext() {
			return Thinkage.Libraries.Translation.ContextReference.New(LabelContext);
		}
		public static Thinkage.Libraries.Translation.Key K([Thinkage.Libraries.Translation.Context(LabelContext)]string s) {
			return Instance.BuildKey(s);
		}
	}
}
#pragma warning restore 1591

