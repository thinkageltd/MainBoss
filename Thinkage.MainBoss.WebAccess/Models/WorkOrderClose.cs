


	
	
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//		Template file LINQGenerationTemplate.xml
//		Vault version 31
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Thinkage.MainBoss.WebAccess.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;

	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Master")]
	public partial class WorkOrderCloseDataContext : System.Data.Linq.DataContext
	{
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void InsertWorkOrderExpenseModel(WorkOrderCloseEntities.WorkOrderExpenseModel instance);
	partial void UpdateWorkOrderExpenseModel(WorkOrderCloseEntities.WorkOrderExpenseModel instance);
	partial void DeleteWorkOrderExpenseModel(WorkOrderCloseEntities.WorkOrderExpenseModel instance);
	partial void InsertAccessCode(WorkOrderCloseEntities.AccessCode instance);
	partial void UpdateAccessCode(WorkOrderCloseEntities.AccessCode instance);
	partial void DeleteAccessCode(WorkOrderCloseEntities.AccessCode instance);
	partial void InsertWorkCategory(WorkOrderCloseEntities.WorkCategory instance);
	partial void UpdateWorkCategory(WorkOrderCloseEntities.WorkCategory instance);
	partial void DeleteWorkCategory(WorkOrderCloseEntities.WorkCategory instance);
	partial void InsertCostCenter(WorkOrderCloseEntities.CostCenter instance);
	partial void UpdateCostCenter(WorkOrderCloseEntities.CostCenter instance);
	partial void DeleteCostCenter(WorkOrderCloseEntities.CostCenter instance);
	partial void InsertWorkOrderPriority(WorkOrderCloseEntities.WorkOrderPriority instance);
	partial void UpdateWorkOrderPriority(WorkOrderCloseEntities.WorkOrderPriority instance);
	partial void DeleteWorkOrderPriority(WorkOrderCloseEntities.WorkOrderPriority instance);
	partial void InsertActualItemLocation(WorkOrderCloseEntities.ActualItemLocation instance);
	partial void UpdateActualItemLocation(WorkOrderCloseEntities.ActualItemLocation instance);
	partial void DeleteActualItemLocation(WorkOrderCloseEntities.ActualItemLocation instance);
	partial void InsertItemLocation(WorkOrderCloseEntities.ItemLocation instance);
	partial void UpdateItemLocation(WorkOrderCloseEntities.ItemLocation instance);
	partial void DeleteItemLocation(WorkOrderCloseEntities.ItemLocation instance);
	partial void InsertTemporaryStorage(WorkOrderCloseEntities.TemporaryStorage instance);
	partial void UpdateTemporaryStorage(WorkOrderCloseEntities.TemporaryStorage instance);
	partial void DeleteTemporaryStorage(WorkOrderCloseEntities.TemporaryStorage instance);
	partial void InsertRequestState(WorkOrderCloseEntities.RequestState instance);
	partial void UpdateRequestState(WorkOrderCloseEntities.RequestState instance);
	partial void DeleteRequestState(WorkOrderCloseEntities.RequestState instance);
	partial void InsertRequestStateHistory(WorkOrderCloseEntities.RequestStateHistory instance);
	partial void UpdateRequestStateHistory(WorkOrderCloseEntities.RequestStateHistory instance);
	partial void DeleteRequestStateHistory(WorkOrderCloseEntities.RequestStateHistory instance);
	partial void InsertWorkOrderStateTransition(WorkOrderCloseEntities.WorkOrderStateTransition instance);
	partial void UpdateWorkOrderStateTransition(WorkOrderCloseEntities.WorkOrderStateTransition instance);
	partial void DeleteWorkOrderStateTransition(WorkOrderCloseEntities.WorkOrderStateTransition instance);
	partial void InsertWorkOrderState(WorkOrderCloseEntities.WorkOrderState instance);
	partial void UpdateWorkOrderState(WorkOrderCloseEntities.WorkOrderState instance);
	partial void DeleteWorkOrderState(WorkOrderCloseEntities.WorkOrderState instance);
	partial void InsertWorkOrder(WorkOrderCloseEntities.WorkOrder instance);
	partial void UpdateWorkOrder(WorkOrderCloseEntities.WorkOrder instance);
	partial void DeleteWorkOrder(WorkOrderCloseEntities.WorkOrder instance);
	partial void InsertLocation(WorkOrderCloseEntities.Location instance);
	partial void UpdateLocation(WorkOrderCloseEntities.Location instance);
	partial void DeleteLocation(WorkOrderCloseEntities.Location instance);
	partial void InsertWorkOrderStateHistory(WorkOrderCloseEntities.WorkOrderStateHistory instance);
	partial void UpdateWorkOrderStateHistory(WorkOrderCloseEntities.WorkOrderStateHistory instance);
	partial void DeleteWorkOrderStateHistory(WorkOrderCloseEntities.WorkOrderStateHistory instance);
	partial void InsertRequestor(WorkOrderCloseEntities.Requestor instance);
	partial void UpdateRequestor(WorkOrderCloseEntities.Requestor instance);
	partial void DeleteRequestor(WorkOrderCloseEntities.Requestor instance);
	partial void InsertProject(WorkOrderCloseEntities.Project instance);
	partial void UpdateProject(WorkOrderCloseEntities.Project instance);
	partial void DeleteProject(WorkOrderCloseEntities.Project instance);
	partial void InsertCloseCode(WorkOrderCloseEntities.CloseCode instance);
	partial void UpdateCloseCode(WorkOrderCloseEntities.CloseCode instance);
	partial void DeleteCloseCode(WorkOrderCloseEntities.CloseCode instance);
	partial void InsertPMGenerationBatch(WorkOrderCloseEntities.PMGenerationBatch instance);
	partial void UpdatePMGenerationBatch(WorkOrderCloseEntities.PMGenerationBatch instance);
	partial void DeletePMGenerationBatch(WorkOrderCloseEntities.PMGenerationBatch instance);
	partial void InsertDemand(WorkOrderCloseEntities.Demand instance);
	partial void UpdateDemand(WorkOrderCloseEntities.Demand instance);
	partial void DeleteDemand(WorkOrderCloseEntities.Demand instance);
	partial void InsertWorkOrderStateHistoryStatus(WorkOrderCloseEntities.WorkOrderStateHistoryStatus instance);
	partial void UpdateWorkOrderStateHistoryStatus(WorkOrderCloseEntities.WorkOrderStateHistoryStatus instance);
	partial void DeleteWorkOrderStateHistoryStatus(WorkOrderCloseEntities.WorkOrderStateHistoryStatus instance);
	partial void InsertRequest(WorkOrderCloseEntities.Request instance);
	partial void UpdateRequest(WorkOrderCloseEntities.Request instance);
	partial void DeleteRequest(WorkOrderCloseEntities.Request instance);
	partial void InsertContact(WorkOrderCloseEntities.Contact instance);
	partial void UpdateContact(WorkOrderCloseEntities.Contact instance);
	partial void DeleteContact(WorkOrderCloseEntities.Contact instance);
	partial void InsertRequestedWorkOrder(WorkOrderCloseEntities.RequestedWorkOrder instance);
	partial void UpdateRequestedWorkOrder(WorkOrderCloseEntities.RequestedWorkOrder instance);
	partial void DeleteRequestedWorkOrder(WorkOrderCloseEntities.RequestedWorkOrder instance);
	partial void InsertUser(WorkOrderCloseEntities.User instance);
	partial void UpdateUser(WorkOrderCloseEntities.User instance);
	partial void DeleteUser(WorkOrderCloseEntities.User instance);
	#endregion

		public WorkOrderCloseDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Master"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public WorkOrderCloseDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public WorkOrderCloseDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public WorkOrderCloseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public WorkOrderCloseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrderExpenseModel> WorkOrderExpenseModel
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrderExpenseModel>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.AccessCode> AccessCode
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.AccessCode>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkCategory> WorkCategory
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkCategory>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.CostCenter> CostCenter
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.CostCenter>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrderPriority> WorkOrderPriority
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrderPriority>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.ActualItemLocation> ActualItemLocation
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.ActualItemLocation>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.ItemLocation> ItemLocation
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.ItemLocation>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.TemporaryStorage> TemporaryStorage
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.TemporaryStorage>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.RequestState> RequestState
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.RequestState>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.RequestStateHistory> RequestStateHistory
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.RequestStateHistory>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrderStateTransition> WorkOrderStateTransition
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrderStateTransition>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrderState> WorkOrderState
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrderState>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrder> WorkOrder
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrder>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.Location> Location
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.Location>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrderStateHistory> WorkOrderStateHistory
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrderStateHistory>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.Requestor> Requestor
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.Requestor>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.Project> Project
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.Project>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.CloseCode> CloseCode
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.CloseCode>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.PMGenerationBatch> PMGenerationBatch
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.PMGenerationBatch>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.Demand> Demand
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.Demand>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.WorkOrderStateHistoryStatus> WorkOrderStateHistoryStatus
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.WorkOrderStateHistoryStatus>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.Request> Request
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.Request>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.Contact> Contact
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.Contact>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.RequestedWorkOrder> RequestedWorkOrder
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.RequestedWorkOrder>();
			}
		}
		public System.Data.Linq.Table<WorkOrderCloseEntities.User> User
		{
			get
			{
				return this.GetTable<WorkOrderCloseEntities.User>();
			}
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetDBVersion]", IsComposable=true)]
		public string _vgetDBVersion()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetWOSequence]", IsComposable=true)]
		public System.Int64 _vgetWOSequence()
		{
			return ((System.Int64)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetWOSequenceFormat]", IsComposable=true)]
		public string _vgetWOSequenceFormat()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetWODefaultDuration]", IsComposable=true)]
		public System.DateTime? _vgetWODefaultDuration()
		{
			return ((System.DateTime?)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetManageRequestStates]", IsComposable=true)]
		public bool _vgetManageRequestStates()
		{
			return ((bool)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetCopyWSHCommentToRSH]", IsComposable=true)]
		public bool _vgetCopyWSHCommentToRSH()
		{
			return ((bool)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
}
namespace WorkOrderCloseEntities
{
	using System.Runtime.Serialization;
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	using System.Runtime.CompilerServices;
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderExpenseModel")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrderExpenseModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderExpenseModel with labelkey='Work Order Expense Model'
		static public string WorkOrderExpenseModelLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order Expense Model").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderWorkOrderExpenseModel;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public WorkOrderExpenseModel()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrderExpenseModel's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderExpenseModel_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderExpenseModel),Name="WorkOrderExpenseModel_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderExpenseModel_WorkOrder", Storage="_WorkOrderWorkOrderExpenseModel", ThisKey="Id", OtherKey="WorkOrderExpenseModelID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderWorkOrderExpenseModel
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderWorkOrderExpenseModel.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderWorkOrderExpenseModel;
			}
			set
			{
				this._WorkOrderWorkOrderExpenseModel.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderWorkOrderExpenseModel(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderExpenseModel = this;
		}
		private void detach_WorkOrderWorkOrderExpenseModel(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderExpenseModel = null;
		}
		private void Initialize()
		{
			this._WorkOrderWorkOrderExpenseModel = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderWorkOrderExpenseModel), new Action<WorkOrder>(this.detach_WorkOrderWorkOrderExpenseModel));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessCode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccessCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table AccessCode with labelkey='Access Code'
		static public string AccessCodeLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Access Code").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderAccessCode;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public AccessCode()
		{
			this.Initialize();
		}
		/// Denotes the AccessCode's Id column with type id(nonnull) with labelkey='Id'
		static public string AccessCode_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.AccessCode),Name="AccessCode_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessCode_WorkOrder", Storage="_WorkOrderAccessCode", ThisKey="Id", OtherKey="AccessCodeID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderAccessCode
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderAccessCode.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderAccessCode;
			}
			set
			{
				this._WorkOrderAccessCode.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderAccessCode(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.AccessCode = this;
		}
		private void detach_WorkOrderAccessCode(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.AccessCode = null;
		}
		private void Initialize()
		{
			this._WorkOrderAccessCode = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderAccessCode), new Action<WorkOrder>(this.detach_WorkOrderAccessCode));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkCategory with labelkey='Work Category'
		static public string WorkCategoryLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Category").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderWorkCategory;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public WorkCategory()
		{
			this.Initialize();
		}
		/// Denotes the WorkCategory's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkCategory_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkCategory),Name="WorkCategory_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkCategory_WorkOrder", Storage="_WorkOrderWorkCategory", ThisKey="Id", OtherKey="WorkCategoryID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderWorkCategory
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderWorkCategory.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderWorkCategory;
			}
			set
			{
				this._WorkOrderWorkCategory.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderWorkCategory(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkCategory = this;
		}
		private void detach_WorkOrderWorkCategory(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkCategory = null;
		}
		private void Initialize()
		{
			this._WorkOrderWorkCategory = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderWorkCategory), new Action<WorkOrder>(this.detach_WorkOrderWorkCategory));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostCenter")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CostCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table CostCenter with labelkey='Cost Center'
		static public string CostCenterLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Cost Center").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public CostCenter()
		{
			this.Initialize();
		}
		/// Denotes the CostCenter's Id column with type id(nonnull) with labelkey='Id'
		static public string CostCenter_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.CostCenter),Name="CostCenter_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderPriority")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrderPriority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderPriority with labelkey='Work Order Priority'
		static public string WorkOrderPriorityLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order Priority").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderWorkOrderPriority;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public WorkOrderPriority()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrderPriority's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderPriority_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderPriority),Name="WorkOrderPriority_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderPriority_WorkOrder", Storage="_WorkOrderWorkOrderPriority", ThisKey="Id", OtherKey="WorkOrderPriorityID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderWorkOrderPriority
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderWorkOrderPriority.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderWorkOrderPriority;
			}
			set
			{
				this._WorkOrderWorkOrderPriority.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderWorkOrderPriority(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderPriority = this;
		}
		private void detach_WorkOrderWorkOrderPriority(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderPriority = null;
		}
		private void Initialize()
		{
			this._WorkOrderWorkOrderPriority = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderWorkOrderPriority), new Action<WorkOrder>(this.detach_WorkOrderWorkOrderPriority));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActualItemLocation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ActualItemLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table ActualItemLocation with labelkey='Actual Item Location'
		static public string ActualItemLocationLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Actual Item Location").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Object _TotalCost;
		private System.Object _OnHand;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnTotalCostChanging(System.Object value);
	partial void OnTotalCostChanged();
	partial void OnOnHandChanging(System.Object value);
	partial void OnOnHandChanged();
	#endregion

		public ActualItemLocation()
		{
			this.Initialize();
		}
		/// Denotes the ActualItemLocation's Id column with type id(nonnull) with labelkey='Id'
		static public string ActualItemLocation_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.ActualItemLocation),Name="ActualItemLocation_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the ActualItemLocation's TotalCost column with type null(nonnull) with labelkey='TotalCost'
		static public string ActualItemLocation_TotalCost{ get{return WorkOrderCloseLabelKdsMBLabel.K("TotalCost").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.ActualItemLocation),Name="ActualItemLocation_TotalCost")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged();
					this.OnTotalCostChanged();
				}
			}
		}
		/// Denotes the ActualItemLocation's OnHand column with type null(nonnull) with labelkey='OnHand'
		static public string ActualItemLocation_OnHand{ get{return WorkOrderCloseLabelKdsMBLabel.K("OnHand").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.ActualItemLocation),Name="ActualItemLocation_OnHand")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnHand", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object OnHand
		{
			get
			{
				return this._OnHand;
			}
			set
			{
				if ((this._OnHand != value))
				{
					this.OnOnHandChanging(value);
					this.SendPropertyChanging();
					this._OnHand = value;
					this.SendPropertyChanged();
					this.OnOnHandChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemLocation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ItemLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table ItemLocation with labelkey='Item Location'
		static public string ItemLocationLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Item Location").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public ItemLocation()
		{
			this.Initialize();
		}
		/// Denotes the ItemLocation's Id column with type id(nonnull) with labelkey='Id'
		static public string ItemLocation_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.ItemLocation),Name="ItemLocation_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemporaryStorage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TemporaryStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table TemporaryStorage with labelkey='Temporary Storage'
		static public string TemporaryStorageLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Temporary Storage").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public TemporaryStorage()
		{
			this.Initialize();
		}
		/// Denotes the TemporaryStorage's Id column with type id(nonnull) with labelkey='Id'
		static public string TemporaryStorage_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.TemporaryStorage),Name="TemporaryStorage_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestState")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RequestState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestState with labelkey='Request State'
		static public string RequestStateLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Request State").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public RequestState()
		{
			this.Initialize();
		}
		/// Denotes the RequestState's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestState_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.RequestState),Name="RequestState_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStateHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RequestStateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestStateHistory with labelkey='Request State History'
		static public string RequestStateHistoryLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Request State History").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public RequestStateHistory()
		{
			this.Initialize();
		}
		/// Denotes the RequestStateHistory's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestStateHistory_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.RequestStateHistory),Name="RequestStateHistory_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderStateTransition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrderStateTransition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderStateTransition with labelkey='Work Order State Transition'
		static public string WorkOrderStateTransitionLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order State Transition").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private Thinkage.Libraries.Translation.SimpleKey _Operation;
		private Thinkage.Libraries.Translation.SimpleKey _OperationHint;
		private bool _CanTransitionWithoutUI;
		private bool _CopyStatusFromPrevious;
		private System.Guid _FromStateID;
		private System.Guid _ToStateID;
		private short _Rank;
		private string _RightName;
		private EntityRef<WorkOrderState> _FromState;
		private EntityRef<WorkOrderState> _ToState;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnOperationChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnOperationChanged();
	partial void OnOperationHintChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnOperationHintChanged();
	partial void OnCanTransitionWithoutUIChanging(bool value);
	partial void OnCanTransitionWithoutUIChanged();
	partial void OnCopyStatusFromPreviousChanging(bool value);
	partial void OnCopyStatusFromPreviousChanged();
	partial void OnFromStateIDChanging(System.Guid value);
	partial void OnFromStateIDChanged();
	partial void OnToStateIDChanging(System.Guid value);
	partial void OnToStateIDChanged();
	partial void OnRankChanging(short value);
	partial void OnRankChanged();
	partial void OnRightNameChanging(string value);
	partial void OnRightNameChanged();
	#endregion

		public WorkOrderStateTransition()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrderStateTransition's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderStateTransition_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's Operation column with type translationkey(nonnull, maxlines 0, maxkeylength 512) with labelkey='Operation'
		static public string WorkOrderStateTransition_Operation{ get{return WorkOrderCloseLabelKdsMBLabel.K("Operation").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_Operation")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="NVARCHAR(512)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public Thinkage.Libraries.Translation.SimpleKey Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged();
					this.OnOperationChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's OperationHint column with type translationkey(nonnull, maxlines 0, maxkeylength 512) with labelkey='OperationHint'
		static public string WorkOrderStateTransition_OperationHint{ get{return WorkOrderCloseLabelKdsMBLabel.K("OperationHint").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_OperationHint")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationHint", DbType="NVARCHAR(512)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public Thinkage.Libraries.Translation.SimpleKey OperationHint
		{
			get
			{
				return this._OperationHint;
			}
			set
			{
				if ((this._OperationHint != value))
				{
					this.OnOperationHintChanging(value);
					this.SendPropertyChanging();
					this._OperationHint = value;
					this.SendPropertyChanged();
					this.OnOperationHintChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's CanTransitionWithoutUI column with type bool(nonnull) with labelkey='CanTransitionWithoutUI'
		static public string WorkOrderStateTransition_CanTransitionWithoutUI{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanTransitionWithoutUI").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_CanTransitionWithoutUI")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanTransitionWithoutUI", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanTransitionWithoutUI
		{
			get
			{
				return this._CanTransitionWithoutUI;
			}
			set
			{
				if ((this._CanTransitionWithoutUI != value))
				{
					this.OnCanTransitionWithoutUIChanging(value);
					this.SendPropertyChanging();
					this._CanTransitionWithoutUI = value;
					this.SendPropertyChanged();
					this.OnCanTransitionWithoutUIChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's CopyStatusFromPrevious column with type bool(nonnull) with labelkey='CopyStatusFromPrevious'
		static public string WorkOrderStateTransition_CopyStatusFromPrevious{ get{return WorkOrderCloseLabelKdsMBLabel.K("CopyStatusFromPrevious").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_CopyStatusFromPrevious")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyStatusFromPrevious", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CopyStatusFromPrevious
		{
			get
			{
				return this._CopyStatusFromPrevious;
			}
			set
			{
				if ((this._CopyStatusFromPrevious != value))
				{
					this.OnCopyStatusFromPreviousChanging(value);
					this.SendPropertyChanging();
					this._CopyStatusFromPrevious = value;
					this.SendPropertyChanged();
					this.OnCopyStatusFromPreviousChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's FromStateID column with type link(nonnull, field WorkOrderState.Id) with labelkey='From State'
		static public string WorkOrderStateTransition_FromStateID{ get{return WorkOrderCloseLabelKdsMBLabel.K("From State").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_FromStateID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStateID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid FromStateID
		{
			get
			{
				return this._FromStateID;
			}
			set
			{
				if ((this._FromStateID != value))
				{
					if (this._FromState.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStateIDChanging(value);
					this.SendPropertyChanging();
					this._FromStateID = value;
					this.SendPropertyChanged();
					this.OnFromStateIDChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's ToStateID column with type link(nonnull, field WorkOrderState.Id) with labelkey='To State'
		static public string WorkOrderStateTransition_ToStateID{ get{return WorkOrderCloseLabelKdsMBLabel.K("To State").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_ToStateID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStateID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ToStateID
		{
			get
			{
				return this._ToStateID;
			}
			set
			{
				if ((this._ToStateID != value))
				{
					if (this._ToState.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStateIDChanging(value);
					this.SendPropertyChanging();
					this._ToStateID = value;
					this.SendPropertyChanged();
					this.OnToStateIDChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's Rank column with type integer(nonnull, 16) with labelkey='Rank'
		static public string WorkOrderStateTransition_Rank{ get{return WorkOrderCloseLabelKdsMBLabel.K("Rank").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_Rank")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="SMALLINT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged();
					this.OnRankChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateTransition's RightName column with type string(minlength 1, maxlength 100, maxlines 0, trim) with labelkey='RightName'
		static public string WorkOrderStateTransition_RightName{ get{return WorkOrderCloseLabelKdsMBLabel.K("RightName").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateTransition),Name="WorkOrderStateTransition_RightName")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightName", DbType="NVARCHAR (100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1)]
		public string RightName
		{
			get
			{
				return this._RightName;
			}
			set
			{
				if ((this._RightName != value))
				{
					this.OnRightNameChanging(value);
					this.SendPropertyChanging();
					this._RightName = value;
					this.SendPropertyChanged();
					this.OnRightNameChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FromState_WorkOrderStateTransition", Storage="_FromState", ThisKey="FromStateID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderState FromState
		{
			get
			{
				return this._FromState.Entity;
			}
			set
			{
				WorkOrderState previousValue = this._FromState.Entity;
				if (((previousValue != value)
							|| (this._FromState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FromState.Entity = null;
						previousValue.WorkOrderStateTransitionFromState.Remove(this);
					}
					this._FromState.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStateTransitionFromState.Add(this);
						this._FromStateID = value.Id;
					}
					else
					{
						this._FromStateID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ToState_WorkOrderStateTransition", Storage="_ToState", ThisKey="ToStateID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderState ToState
		{
			get
			{
				return this._ToState.Entity;
			}
			set
			{
				WorkOrderState previousValue = this._ToState.Entity;
				if (((previousValue != value)
							|| (this._ToState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToState.Entity = null;
						previousValue.WorkOrderStateTransitionToState.Remove(this);
					}
					this._ToState.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStateTransitionToState.Add(this);
						this._ToStateID = value.Id;
					}
					else
					{
						this._ToStateID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			this._FromState = default(EntityRef<WorkOrderState>);
			this._ToState = default(EntityRef<WorkOrderState>);
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderState")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrderState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderState with labelkey='Work Order State'
		static public string WorkOrderStateLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order State").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private Thinkage.Libraries.Translation.SimpleKey _Code;
		private System.DateTime? _Hidden;
		private Thinkage.Libraries.Translation.SimpleKey _Desc;
		private string _Comment;
		private bool _DemandCountsActive;
		private bool _TemporaryStorageActive;
		private bool _CanModifyDemands;
		private bool _CanModifyActuals;
		private bool _CanModifyPOLines;
		private bool _CanModifyChargebacks;
		private bool _CanModifyChargebackLines;
		private bool _CanModifyDefinitionFields;
		private bool _CanModifyOperationalFields;
		private bool _AffectsFuturePMGeneration;
		private bool _FilterAsOpen;
		private bool _FilterAsClosed;
		private bool _FilterAsVoid;
		private bool _FilterAsDraft;
		private EntitySet<WorkOrderStateTransition> _WorkOrderStateTransitionFromState;
		private EntitySet<WorkOrderStateTransition> _WorkOrderStateTransitionToState;
		private EntitySet<WorkOrderStateHistory> _WorkOrderStateHistoryWorkOrderState;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnDemandCountsActiveChanging(bool value);
	partial void OnDemandCountsActiveChanged();
	partial void OnTemporaryStorageActiveChanging(bool value);
	partial void OnTemporaryStorageActiveChanged();
	partial void OnCanModifyDemandsChanging(bool value);
	partial void OnCanModifyDemandsChanged();
	partial void OnCanModifyActualsChanging(bool value);
	partial void OnCanModifyActualsChanged();
	partial void OnCanModifyPOLinesChanging(bool value);
	partial void OnCanModifyPOLinesChanged();
	partial void OnCanModifyChargebacksChanging(bool value);
	partial void OnCanModifyChargebacksChanged();
	partial void OnCanModifyChargebackLinesChanging(bool value);
	partial void OnCanModifyChargebackLinesChanged();
	partial void OnCanModifyDefinitionFieldsChanging(bool value);
	partial void OnCanModifyDefinitionFieldsChanged();
	partial void OnCanModifyOperationalFieldsChanging(bool value);
	partial void OnCanModifyOperationalFieldsChanged();
	partial void OnAffectsFuturePMGenerationChanging(bool value);
	partial void OnAffectsFuturePMGenerationChanged();
	partial void OnFilterAsOpenChanging(bool value);
	partial void OnFilterAsOpenChanged();
	partial void OnFilterAsClosedChanging(bool value);
	partial void OnFilterAsClosedChanged();
	partial void OnFilterAsVoidChanging(bool value);
	partial void OnFilterAsVoidChanged();
	partial void OnFilterAsDraftChanging(bool value);
	partial void OnFilterAsDraftChanged();
	#endregion

		public WorkOrderState()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrderState's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderState_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's Code column with type translationkey(nonnull, maxlines 0, maxkeylength 512) with labelkey='Code'
		static public string WorkOrderState_Code{ get{return WorkOrderCloseLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR(512)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public Thinkage.Libraries.Translation.SimpleKey Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string WorkOrderState_Hidden{ get{return WorkOrderCloseLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's Desc column with type translationkey(maxlines 0, maxkeylength 512) with labelkey='Desc'
		static public string WorkOrderState_Desc{ get{return WorkOrderCloseLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1)]
		public Thinkage.Libraries.Translation.SimpleKey Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string WorkOrderState_Comment{ get{return WorkOrderCloseLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's DemandCountsActive column with type bool(nonnull) with labelkey='DemandCountsActive'
		static public string WorkOrderState_DemandCountsActive{ get{return WorkOrderCloseLabelKdsMBLabel.K("DemandCountsActive").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_DemandCountsActive")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandCountsActive", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool DemandCountsActive
		{
			get
			{
				return this._DemandCountsActive;
			}
			set
			{
				if ((this._DemandCountsActive != value))
				{
					this.OnDemandCountsActiveChanging(value);
					this.SendPropertyChanging();
					this._DemandCountsActive = value;
					this.SendPropertyChanged();
					this.OnDemandCountsActiveChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's TemporaryStorageActive column with type bool(nonnull) with labelkey='TemporaryStorageActive'
		static public string WorkOrderState_TemporaryStorageActive{ get{return WorkOrderCloseLabelKdsMBLabel.K("TemporaryStorageActive").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_TemporaryStorageActive")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryStorageActive", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool TemporaryStorageActive
		{
			get
			{
				return this._TemporaryStorageActive;
			}
			set
			{
				if ((this._TemporaryStorageActive != value))
				{
					this.OnTemporaryStorageActiveChanging(value);
					this.SendPropertyChanging();
					this._TemporaryStorageActive = value;
					this.SendPropertyChanged();
					this.OnTemporaryStorageActiveChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyDemands column with type bool(nonnull) with labelkey='CanModifyDemands'
		static public string WorkOrderState_CanModifyDemands{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyDemands").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyDemands")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyDemands", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyDemands
		{
			get
			{
				return this._CanModifyDemands;
			}
			set
			{
				if ((this._CanModifyDemands != value))
				{
					this.OnCanModifyDemandsChanging(value);
					this.SendPropertyChanging();
					this._CanModifyDemands = value;
					this.SendPropertyChanged();
					this.OnCanModifyDemandsChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyActuals column with type bool(nonnull) with labelkey='CanModifyActuals'
		static public string WorkOrderState_CanModifyActuals{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyActuals").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyActuals")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyActuals", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyActuals
		{
			get
			{
				return this._CanModifyActuals;
			}
			set
			{
				if ((this._CanModifyActuals != value))
				{
					this.OnCanModifyActualsChanging(value);
					this.SendPropertyChanging();
					this._CanModifyActuals = value;
					this.SendPropertyChanged();
					this.OnCanModifyActualsChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyPOLines column with type bool(nonnull) with labelkey='CanModifyPOLines'
		static public string WorkOrderState_CanModifyPOLines{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyPOLines").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyPOLines")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyPOLines", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyPOLines
		{
			get
			{
				return this._CanModifyPOLines;
			}
			set
			{
				if ((this._CanModifyPOLines != value))
				{
					this.OnCanModifyPOLinesChanging(value);
					this.SendPropertyChanging();
					this._CanModifyPOLines = value;
					this.SendPropertyChanged();
					this.OnCanModifyPOLinesChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyChargebacks column with type bool(nonnull) with labelkey='CanModifyChargebacks'
		static public string WorkOrderState_CanModifyChargebacks{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyChargebacks").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyChargebacks")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyChargebacks", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyChargebacks
		{
			get
			{
				return this._CanModifyChargebacks;
			}
			set
			{
				if ((this._CanModifyChargebacks != value))
				{
					this.OnCanModifyChargebacksChanging(value);
					this.SendPropertyChanging();
					this._CanModifyChargebacks = value;
					this.SendPropertyChanged();
					this.OnCanModifyChargebacksChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyChargebackLines column with type bool(nonnull) with labelkey='CanModifyChargebackLines'
		static public string WorkOrderState_CanModifyChargebackLines{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyChargebackLines").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyChargebackLines")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyChargebackLines", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyChargebackLines
		{
			get
			{
				return this._CanModifyChargebackLines;
			}
			set
			{
				if ((this._CanModifyChargebackLines != value))
				{
					this.OnCanModifyChargebackLinesChanging(value);
					this.SendPropertyChanging();
					this._CanModifyChargebackLines = value;
					this.SendPropertyChanged();
					this.OnCanModifyChargebackLinesChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyDefinitionFields column with type bool(nonnull) with labelkey='CanModifyDefinitionFields'
		static public string WorkOrderState_CanModifyDefinitionFields{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyDefinitionFields").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyDefinitionFields")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyDefinitionFields", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyDefinitionFields
		{
			get
			{
				return this._CanModifyDefinitionFields;
			}
			set
			{
				if ((this._CanModifyDefinitionFields != value))
				{
					this.OnCanModifyDefinitionFieldsChanging(value);
					this.SendPropertyChanging();
					this._CanModifyDefinitionFields = value;
					this.SendPropertyChanged();
					this.OnCanModifyDefinitionFieldsChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's CanModifyOperationalFields column with type bool(nonnull) with labelkey='CanModifyOperationalFields'
		static public string WorkOrderState_CanModifyOperationalFields{ get{return WorkOrderCloseLabelKdsMBLabel.K("CanModifyOperationalFields").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_CanModifyOperationalFields")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyOperationalFields", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanModifyOperationalFields
		{
			get
			{
				return this._CanModifyOperationalFields;
			}
			set
			{
				if ((this._CanModifyOperationalFields != value))
				{
					this.OnCanModifyOperationalFieldsChanging(value);
					this.SendPropertyChanging();
					this._CanModifyOperationalFields = value;
					this.SendPropertyChanged();
					this.OnCanModifyOperationalFieldsChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's AffectsFuturePMGeneration column with type bool(nonnull) with labelkey='AffectsFuturePMGeneration'
		static public string WorkOrderState_AffectsFuturePMGeneration{ get{return WorkOrderCloseLabelKdsMBLabel.K("AffectsFuturePMGeneration").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_AffectsFuturePMGeneration")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectsFuturePMGeneration", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool AffectsFuturePMGeneration
		{
			get
			{
				return this._AffectsFuturePMGeneration;
			}
			set
			{
				if ((this._AffectsFuturePMGeneration != value))
				{
					this.OnAffectsFuturePMGenerationChanging(value);
					this.SendPropertyChanging();
					this._AffectsFuturePMGeneration = value;
					this.SendPropertyChanged();
					this.OnAffectsFuturePMGenerationChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's FilterAsOpen column with type bool(nonnull) with labelkey='FilterAsOpen'
		static public string WorkOrderState_FilterAsOpen{ get{return WorkOrderCloseLabelKdsMBLabel.K("FilterAsOpen").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_FilterAsOpen")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsOpen", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsOpen
		{
			get
			{
				return this._FilterAsOpen;
			}
			set
			{
				if ((this._FilterAsOpen != value))
				{
					this.OnFilterAsOpenChanging(value);
					this.SendPropertyChanging();
					this._FilterAsOpen = value;
					this.SendPropertyChanged();
					this.OnFilterAsOpenChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's FilterAsClosed column with type bool(nonnull) with labelkey='FilterAsClosed'
		static public string WorkOrderState_FilterAsClosed{ get{return WorkOrderCloseLabelKdsMBLabel.K("FilterAsClosed").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_FilterAsClosed")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsClosed", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsClosed
		{
			get
			{
				return this._FilterAsClosed;
			}
			set
			{
				if ((this._FilterAsClosed != value))
				{
					this.OnFilterAsClosedChanging(value);
					this.SendPropertyChanging();
					this._FilterAsClosed = value;
					this.SendPropertyChanged();
					this.OnFilterAsClosedChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's FilterAsVoid column with type bool(nonnull) with labelkey='FilterAsVoid'
		static public string WorkOrderState_FilterAsVoid{ get{return WorkOrderCloseLabelKdsMBLabel.K("FilterAsVoid").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_FilterAsVoid")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsVoid", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsVoid
		{
			get
			{
				return this._FilterAsVoid;
			}
			set
			{
				if ((this._FilterAsVoid != value))
				{
					this.OnFilterAsVoidChanging(value);
					this.SendPropertyChanging();
					this._FilterAsVoid = value;
					this.SendPropertyChanged();
					this.OnFilterAsVoidChanged();
				}
			}
		}
		/// Denotes the WorkOrderState's FilterAsDraft column with type bool(nonnull) with labelkey='FilterAsDraft'
		static public string WorkOrderState_FilterAsDraft{ get{return WorkOrderCloseLabelKdsMBLabel.K("FilterAsDraft").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderState),Name="WorkOrderState_FilterAsDraft")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsDraft", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsDraft
		{
			get
			{
				return this._FilterAsDraft;
			}
			set
			{
				if ((this._FilterAsDraft != value))
				{
					this.OnFilterAsDraftChanging(value);
					this.SendPropertyChanging();
					this._FilterAsDraft = value;
					this.SendPropertyChanged();
					this.OnFilterAsDraftChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderState_WorkOrderStateTransition", Storage="_WorkOrderStateTransitionFromState", ThisKey="Id", OtherKey="FromStateID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrderStateTransition> WorkOrderStateTransitionFromState
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderStateTransitionFromState.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderStateTransitionFromState;
			}
			set
			{
				this._WorkOrderStateTransitionFromState.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderState_WorkOrderStateTransition", Storage="_WorkOrderStateTransitionToState", ThisKey="Id", OtherKey="ToStateID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrderStateTransition> WorkOrderStateTransitionToState
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderStateTransitionToState.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderStateTransitionToState;
			}
			set
			{
				this._WorkOrderStateTransitionToState.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderState_WorkOrderStateHistory", Storage="_WorkOrderStateHistoryWorkOrderState", ThisKey="Id", OtherKey="WorkOrderStateID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrderStateHistory> WorkOrderStateHistoryWorkOrderState
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderStateHistoryWorkOrderState.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderStateHistoryWorkOrderState;
			}
			set
			{
				this._WorkOrderStateHistoryWorkOrderState.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderStateTransitionFromState(WorkOrderStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.FromState = this;
		}
		private void detach_WorkOrderStateTransitionFromState(WorkOrderStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.FromState = null;
		}

		private void attach_WorkOrderStateTransitionToState(WorkOrderStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.ToState = this;
		}
		private void detach_WorkOrderStateTransitionToState(WorkOrderStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.ToState = null;
		}

		private void attach_WorkOrderStateHistoryWorkOrderState(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderState = this;
		}
		private void detach_WorkOrderStateHistoryWorkOrderState(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderState = null;
		}
		private void Initialize()
		{
			this._WorkOrderStateTransitionFromState = new EntitySet<WorkOrderStateTransition>(new Action<WorkOrderStateTransition>(this.attach_WorkOrderStateTransitionFromState), new Action<WorkOrderStateTransition>(this.detach_WorkOrderStateTransitionFromState));
			this._WorkOrderStateTransitionToState = new EntitySet<WorkOrderStateTransition>(new Action<WorkOrderStateTransition>(this.attach_WorkOrderStateTransitionToState), new Action<WorkOrderStateTransition>(this.detach_WorkOrderStateTransitionToState));
			this._WorkOrderStateHistoryWorkOrderState = new EntitySet<WorkOrderStateHistory>(new Action<WorkOrderStateHistory>(this.attach_WorkOrderStateHistoryWorkOrderState), new Action<WorkOrderStateHistory>(this.detach_WorkOrderStateHistoryWorkOrderState));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrder")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrder with labelkey='Work Order'
		static public string WorkOrderLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Number;
		private System.Guid _UnitLocationID;
		private System.Guid? _PMGenerationBatchID;
		private System.Guid _CurrentWorkOrderStateHistoryID;
		private string _Subject;
		private string _Description;
		private string _ClosingComment;
		private System.Guid? _RequestorID;
		private System.Guid? _WorkCategoryID;
		private System.Guid _WorkOrderExpenseModelID;
		private System.Guid? _AccessCodeID;
		private System.Guid? _ProjectID;
		private System.Guid? _WorkOrderPriorityID;
		private System.Guid? _CloseCodeID;
		private System.DateTime? _Downtime;
		private System.DateTime _StartDateEstimate;
		private System.DateTime _EndDateEstimate;
		private System.DateTime? _WorkDueDate;
		private bool _SelectPrintFlag;
		private System.Decimal _TotalDemand;
		private System.Decimal _TotalActual;
		private bool _TemporaryStorageEmpty;
		private EntitySet<WorkOrderStateHistory> _WorkOrderStateHistoryWorkOrder;
		private EntityRef<Location> _UnitLocation;
		private EntityRef<PMGenerationBatch> _PMGenerationBatch;
		private EntityRef<WorkOrderStateHistory> _CurrentWorkOrderStateHistory;
		private EntityRef<Requestor> _Requestor;
		private EntityRef<WorkCategory> _WorkCategory;
		private EntityRef<WorkOrderExpenseModel> _WorkOrderExpenseModel;
		private EntityRef<AccessCode> _AccessCode;
		private EntityRef<Project> _Project;
		private EntityRef<WorkOrderPriority> _WorkOrderPriority;
		private EntityRef<CloseCode> _CloseCode;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnNumberChanging(string value);
	partial void OnNumberChanged();
	partial void OnUnitLocationIDChanging(System.Guid value);
	partial void OnUnitLocationIDChanged();
	partial void OnPMGenerationBatchIDChanging(System.Guid? value);
	partial void OnPMGenerationBatchIDChanged();
	partial void OnCurrentWorkOrderStateHistoryIDChanging(System.Guid value);
	partial void OnCurrentWorkOrderStateHistoryIDChanged();
	partial void OnSubjectChanging(string value);
	partial void OnSubjectChanged();
	partial void OnDescriptionChanging(string value);
	partial void OnDescriptionChanged();
	partial void OnClosingCommentChanging(string value);
	partial void OnClosingCommentChanged();
	partial void OnRequestorIDChanging(System.Guid? value);
	partial void OnRequestorIDChanged();
	partial void OnWorkCategoryIDChanging(System.Guid? value);
	partial void OnWorkCategoryIDChanged();
	partial void OnWorkOrderExpenseModelIDChanging(System.Guid value);
	partial void OnWorkOrderExpenseModelIDChanged();
	partial void OnAccessCodeIDChanging(System.Guid? value);
	partial void OnAccessCodeIDChanged();
	partial void OnProjectIDChanging(System.Guid? value);
	partial void OnProjectIDChanged();
	partial void OnWorkOrderPriorityIDChanging(System.Guid? value);
	partial void OnWorkOrderPriorityIDChanged();
	partial void OnCloseCodeIDChanging(System.Guid? value);
	partial void OnCloseCodeIDChanged();
	partial void OnDowntimeChanging(System.DateTime? value);
	partial void OnDowntimeChanged();
	partial void OnStartDateEstimateChanging(System.DateTime value);
	partial void OnStartDateEstimateChanged();
	partial void OnEndDateEstimateChanging(System.DateTime value);
	partial void OnEndDateEstimateChanged();
	partial void OnWorkDueDateChanging(System.DateTime? value);
	partial void OnWorkDueDateChanged();
	partial void OnSelectPrintFlagChanging(bool value);
	partial void OnSelectPrintFlagChanged();
	partial void OnTotalDemandChanging(System.Decimal value);
	partial void OnTotalDemandChanged();
	partial void OnTotalActualChanging(System.Decimal value);
	partial void OnTotalActualChanged();
	partial void OnTemporaryStorageEmptyChanging(bool value);
	partial void OnTemporaryStorageEmptyChanged();
	#endregion

		public WorkOrder()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrder's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrder_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrder's Number column with type string(nonnull, minlength 1, maxlength 20, maxlines 0, trim) with labelkey='Number'
		static public string WorkOrder_Number{ get{return WorkOrderCloseLabelKdsMBLabel.K("Number").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_Number")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVARCHAR (20)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged();
					this.OnNumberChanged();
				}
			}
		}
		/// Denotes the WorkOrder's UnitLocationID column with type link(nonnull, field Location.Id) with labelkey='Unit'
		static public string WorkOrder_UnitLocationID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Unit").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_UnitLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid UnitLocationID
		{
			get
			{
				return this._UnitLocationID;
			}
			set
			{
				if ((this._UnitLocationID != value))
				{
					if (this._UnitLocation.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitLocationIDChanging(value);
					this.SendPropertyChanging();
					this._UnitLocationID = value;
					this.SendPropertyChanged();
					this.OnUnitLocationIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's PMGenerationBatchID column with type link(field PMGenerationBatch.Id) with labelkey='PMGenerationBatch'
		static public string WorkOrder_PMGenerationBatchID{ get{return WorkOrderCloseLabelKdsMBLabel.K("PMGenerationBatch").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_PMGenerationBatchID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMGenerationBatchID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1)]
		public System.Guid? PMGenerationBatchID
		{
			get
			{
				return this._PMGenerationBatchID;
			}
			set
			{
				if ((this._PMGenerationBatchID != value))
				{
					if (this._PMGenerationBatch.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPMGenerationBatchIDChanging(value);
					this.SendPropertyChanging();
					this._PMGenerationBatchID = value;
					this.SendPropertyChanged();
					this.OnPMGenerationBatchIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's CurrentWorkOrderStateHistoryID column with type link(nonnull, field WorkOrderStateHistory.Id) with labelkey='Current State History'
		static public string WorkOrder_CurrentWorkOrderStateHistoryID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Current State History").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_CurrentWorkOrderStateHistoryID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentWorkOrderStateHistoryID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid CurrentWorkOrderStateHistoryID
		{
			get
			{
				return this._CurrentWorkOrderStateHistoryID;
			}
			set
			{
				if ((this._CurrentWorkOrderStateHistoryID != value))
				{
					if (this._CurrentWorkOrderStateHistory.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentWorkOrderStateHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentWorkOrderStateHistoryID = value;
					this.SendPropertyChanged();
					this.OnCurrentWorkOrderStateHistoryIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's Subject column with type string(nonnull, minlength 1, maxlength 100, maxlines 0, trim) with labelkey='Subject'
		static public string WorkOrder_Subject{ get{return WorkOrderCloseLabelKdsMBLabel.K("Subject").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_Subject")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVARCHAR (100)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged();
					this.OnSubjectChanged();
				}
			}
		}
		/// Denotes the WorkOrder's Description column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Description'
		static public string WorkOrder_Description{ get{return WorkOrderCloseLabelKdsMBLabel.K("Description").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_Description")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVARCHAR(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged();
					this.OnDescriptionChanged();
				}
			}
		}
		/// Denotes the WorkOrder's ClosingComment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string WorkOrder_ClosingComment{ get{return WorkOrderCloseLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_ClosingComment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingComment", DbType="NVARCHAR(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1)]
		public string ClosingComment
		{
			get
			{
				return this._ClosingComment;
			}
			set
			{
				if ((this._ClosingComment != value))
				{
					this.OnClosingCommentChanging(value);
					this.SendPropertyChanging();
					this._ClosingComment = value;
					this.SendPropertyChanged();
					this.OnClosingCommentChanged();
				}
			}
		}
		/// Denotes the WorkOrder's RequestorID column with type link(field Requestor.Id) with labelkey='Requestor'
		static public string WorkOrder_RequestorID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Requestor").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_RequestorID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1)]
		public System.Guid? RequestorID
		{
			get
			{
				return this._RequestorID;
			}
			set
			{
				if ((this._RequestorID != value))
				{
					if (this._Requestor.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestorIDChanging(value);
					this.SendPropertyChanging();
					this._RequestorID = value;
					this.SendPropertyChanged();
					this.OnRequestorIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's WorkCategoryID column with type link(field WorkCategory.Id) with labelkey='Work Category'
		static public string WorkOrder_WorkCategoryID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Work Category").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_WorkCategoryID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCategoryID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1)]
		public System.Guid? WorkCategoryID
		{
			get
			{
				return this._WorkCategoryID;
			}
			set
			{
				if ((this._WorkCategoryID != value))
				{
					if (this._WorkCategory.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._WorkCategoryID = value;
					this.SendPropertyChanged();
					this.OnWorkCategoryIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's WorkOrderExpenseModelID column with type link(nonnull, field WorkOrderExpenseModel.Id) with labelkey='Expense Model'
		static public string WorkOrder_WorkOrderExpenseModelID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Expense Model").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_WorkOrderExpenseModelID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderExpenseModelID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid WorkOrderExpenseModelID
		{
			get
			{
				return this._WorkOrderExpenseModelID;
			}
			set
			{
				if ((this._WorkOrderExpenseModelID != value))
				{
					if (this._WorkOrderExpenseModel.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderExpenseModelIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderExpenseModelID = value;
					this.SendPropertyChanged();
					this.OnWorkOrderExpenseModelIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's AccessCodeID column with type link(field AccessCode.Id) with labelkey='Access Code'
		static public string WorkOrder_AccessCodeID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Access Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_AccessCodeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessCodeID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1)]
		public System.Guid? AccessCodeID
		{
			get
			{
				return this._AccessCodeID;
			}
			set
			{
				if ((this._AccessCodeID != value))
				{
					if (this._AccessCode.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessCodeIDChanging(value);
					this.SendPropertyChanging();
					this._AccessCodeID = value;
					this.SendPropertyChanged();
					this.OnAccessCodeIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's ProjectID column with type link(field Project.Id) with labelkey='Project'
		static public string WorkOrder_ProjectID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Project").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_ProjectID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		public System.Guid? ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged();
					this.OnProjectIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's WorkOrderPriorityID column with type link(field WorkOrderPriority.Id) with labelkey='Priority'
		static public string WorkOrder_WorkOrderPriorityID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Priority").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_WorkOrderPriorityID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderPriorityID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		public System.Guid? WorkOrderPriorityID
		{
			get
			{
				return this._WorkOrderPriorityID;
			}
			set
			{
				if ((this._WorkOrderPriorityID != value))
				{
					if (this._WorkOrderPriority.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderPriorityIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderPriorityID = value;
					this.SendPropertyChanged();
					this.OnWorkOrderPriorityIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's CloseCodeID column with type link(field CloseCode.Id) with labelkey='Close Code'
		static public string WorkOrder_CloseCodeID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Close Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_CloseCodeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseCodeID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		public System.Guid? CloseCodeID
		{
			get
			{
				return this._CloseCodeID;
			}
			set
			{
				if ((this._CloseCodeID != value))
				{
					if (this._CloseCode.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCloseCodeIDChanging(value);
					this.SendPropertyChanging();
					this._CloseCodeID = value;
					this.SendPropertyChanged();
					this.OnCloseCodeIDChanged();
				}
			}
		}
		/// Denotes the WorkOrder's Downtime column with type interval(min 0:00, max 876000:00, by 0:00:01) with labelkey='Downtime'
		static public string WorkOrder_Downtime{ get{return WorkOrderCloseLabelKdsMBLabel.K("Downtime").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_Downtime")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Downtime", DbType="DATETIME")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		public System.DateTime? Downtime
		{
			get
			{
				return this._Downtime;
			}
			set
			{
				if ((this._Downtime != value))
				{
					this.OnDowntimeChanging(value);
					this.SendPropertyChanging();
					this._Downtime = value;
					this.SendPropertyChanged();
					this.OnDowntimeChanged();
				}
			}
		}
		/// Denotes the WorkOrder's StartDateEstimate column with type datetime(nonnull, (min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 00:00), by 24:00) with labelkey='Work Start Date'
		static public string WorkOrder_StartDateEstimate{ get{return WorkOrderCloseLabelKdsMBLabel.K("Work Start Date").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_StartDateEstimate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateEstimate", DbType="DATETIME", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.DateTime StartDateEstimate
		{
			get
			{
				return this._StartDateEstimate;
			}
			set
			{
				if ((this._StartDateEstimate != value))
				{
					this.OnStartDateEstimateChanging(value);
					this.SendPropertyChanging();
					this._StartDateEstimate = value;
					this.SendPropertyChanged();
					this.OnStartDateEstimateChanged();
				}
			}
		}
		/// Denotes the WorkOrder's EndDateEstimate column with type datetime(nonnull, (min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 00:00), by 24:00) with labelkey='Work End Date'
		static public string WorkOrder_EndDateEstimate{ get{return WorkOrderCloseLabelKdsMBLabel.K("Work End Date").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_EndDateEstimate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateEstimate", DbType="DATETIME", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.DateTime EndDateEstimate
		{
			get
			{
				return this._EndDateEstimate;
			}
			set
			{
				if ((this._EndDateEstimate != value))
				{
					this.OnEndDateEstimateChanging(value);
					this.SendPropertyChanging();
					this._EndDateEstimate = value;
					this.SendPropertyChanged();
					this.OnEndDateEstimateChanged();
				}
			}
		}
		/// Denotes the WorkOrder's WorkDueDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 00:00), by 24:00) with labelkey='Work Due Date'
		static public string WorkOrder_WorkDueDate{ get{return WorkOrderCloseLabelKdsMBLabel.K("Work Due Date").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_WorkDueDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkDueDate", DbType="DATETIME")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		public System.DateTime? WorkDueDate
		{
			get
			{
				return this._WorkDueDate;
			}
			set
			{
				if ((this._WorkDueDate != value))
				{
					this.OnWorkDueDateChanging(value);
					this.SendPropertyChanging();
					this._WorkDueDate = value;
					this.SendPropertyChanged();
					this.OnWorkDueDateChanged();
				}
			}
		}
		/// Denotes the WorkOrder's SelectPrintFlag column with type bool(nonnull) with labelkey='Select for Printing'
		static public string WorkOrder_SelectPrintFlag{ get{return WorkOrderCloseLabelKdsMBLabel.K("Select for Printing").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_SelectPrintFlag")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectPrintFlag", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool SelectPrintFlag
		{
			get
			{
				return this._SelectPrintFlag;
			}
			set
			{
				if ((this._SelectPrintFlag != value))
				{
					this.OnSelectPrintFlagChanging(value);
					this.SendPropertyChanging();
					this._SelectPrintFlag = value;
					this.SendPropertyChanged();
					this.OnSelectPrintFlagChanged();
				}
			}
		}
		/// Denotes the WorkOrder's TotalDemand column with type currency(nonnull, (min (¤922,337,203,685,477.58)), (max ¤922,337,203,685,477.58), by ¤0.01) with labelkey='TotalDemand'
		static public string WorkOrder_TotalDemand{ get{return WorkOrderCloseLabelKdsMBLabel.K("TotalDemand").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_TotalDemand")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDemand", DbType="MONEY", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Decimal TotalDemand
		{
			get
			{
				return this._TotalDemand;
			}
			set
			{
				if ((this._TotalDemand != value))
				{
					this.OnTotalDemandChanging(value);
					this.SendPropertyChanging();
					this._TotalDemand = value;
					this.SendPropertyChanged();
					this.OnTotalDemandChanged();
				}
			}
		}
		/// Denotes the WorkOrder's TotalActual column with type currency(nonnull, (min (¤922,337,203,685,477.58)), (max ¤922,337,203,685,477.58), by ¤0.01) with labelkey='TotalActual'
		static public string WorkOrder_TotalActual{ get{return WorkOrderCloseLabelKdsMBLabel.K("TotalActual").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_TotalActual")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalActual", DbType="MONEY", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Decimal TotalActual
		{
			get
			{
				return this._TotalActual;
			}
			set
			{
				if ((this._TotalActual != value))
				{
					this.OnTotalActualChanging(value);
					this.SendPropertyChanging();
					this._TotalActual = value;
					this.SendPropertyChanged();
					this.OnTotalActualChanged();
				}
			}
		}
		/// Denotes the WorkOrder's TemporaryStorageEmpty column with type bool(nonnull) with labelkey='TemporaryStorageEmpty'
		static public string WorkOrder_TemporaryStorageEmpty{ get{return WorkOrderCloseLabelKdsMBLabel.K("TemporaryStorageEmpty").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrder),Name="WorkOrder_TemporaryStorageEmpty")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryStorageEmpty", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool TemporaryStorageEmpty
		{
			get
			{
				return this._TemporaryStorageEmpty;
			}
			set
			{
				if ((this._TemporaryStorageEmpty != value))
				{
					this.OnTemporaryStorageEmptyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryStorageEmpty = value;
					this.SendPropertyChanged();
					this.OnTemporaryStorageEmptyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderStateHistory", Storage="_WorkOrderStateHistoryWorkOrder", ThisKey="Id", OtherKey="WorkOrderID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrderStateHistory> WorkOrderStateHistoryWorkOrder
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderStateHistoryWorkOrder.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderStateHistoryWorkOrder;
			}
			set
			{
				this._WorkOrderStateHistoryWorkOrder.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitLocation_WorkOrder", Storage="_UnitLocation", ThisKey="UnitLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location UnitLocation
		{
			get
			{
				return this._UnitLocation.Entity;
			}
			set
			{
				Location previousValue = this._UnitLocation.Entity;
				if (((previousValue != value)
							|| (this._UnitLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitLocation.Entity = null;
						previousValue.WorkOrderUnitLocation.Remove(this);
					}
					this._UnitLocation.Entity = value;
					if ((value != null))
					{
						value.WorkOrderUnitLocation.Add(this);
						this._UnitLocationID = value.Id;
					}
					else
					{
						this._UnitLocationID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PMGenerationBatch_WorkOrder", Storage="_PMGenerationBatch", ThisKey="PMGenerationBatchID", OtherKey="Id", IsForeignKey=true)]
		public PMGenerationBatch PMGenerationBatch
		{
			get
			{
				return this._PMGenerationBatch.Entity;
			}
			set
			{
				PMGenerationBatch previousValue = this._PMGenerationBatch.Entity;
				if (((previousValue != value)
							|| (this._PMGenerationBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PMGenerationBatch.Entity = null;
						previousValue.WorkOrderPMGenerationBatch.Remove(this);
					}
					this._PMGenerationBatch.Entity = value;
					if ((value != null))
					{
						value.WorkOrderPMGenerationBatch.Add(this);
						this._PMGenerationBatchID = value.Id;
					}
					else
					{
						this._PMGenerationBatchID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrentWorkOrderStateHistory_WorkOrder", Storage="_CurrentWorkOrderStateHistory", ThisKey="CurrentWorkOrderStateHistoryID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderStateHistory CurrentWorkOrderStateHistory
		{
			get
			{
				return this._CurrentWorkOrderStateHistory.Entity;
			}
			set
			{
				WorkOrderStateHistory previousValue = this._CurrentWorkOrderStateHistory.Entity;
				if (((previousValue != value)
							|| (this._CurrentWorkOrderStateHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrentWorkOrderStateHistory.Entity = null;
						previousValue.WorkOrderCurrentWorkOrderStateHistory.Remove(this);
					}
					this._CurrentWorkOrderStateHistory.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCurrentWorkOrderStateHistory.Add(this);
						this._CurrentWorkOrderStateHistoryID = value.Id;
					}
					else
					{
						this._CurrentWorkOrderStateHistoryID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requestor_WorkOrder", Storage="_Requestor", ThisKey="RequestorID", OtherKey="Id", IsForeignKey=true)]
		public Requestor Requestor
		{
			get
			{
				return this._Requestor.Entity;
			}
			set
			{
				Requestor previousValue = this._Requestor.Entity;
				if (((previousValue != value)
							|| (this._Requestor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requestor.Entity = null;
						previousValue.WorkOrderRequestor.Remove(this);
					}
					this._Requestor.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequestor.Add(this);
						this._RequestorID = value.Id;
					}
					else
					{
						this._RequestorID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkCategory_WorkOrder", Storage="_WorkCategory", ThisKey="WorkCategoryID", OtherKey="Id", IsForeignKey=true)]
		public WorkCategory WorkCategory
		{
			get
			{
				return this._WorkCategory.Entity;
			}
			set
			{
				WorkCategory previousValue = this._WorkCategory.Entity;
				if (((previousValue != value)
							|| (this._WorkCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkCategory.Entity = null;
						previousValue.WorkOrderWorkCategory.Remove(this);
					}
					this._WorkCategory.Entity = value;
					if ((value != null))
					{
						value.WorkOrderWorkCategory.Add(this);
						this._WorkCategoryID = value.Id;
					}
					else
					{
						this._WorkCategoryID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderExpenseModel_WorkOrder", Storage="_WorkOrderExpenseModel", ThisKey="WorkOrderExpenseModelID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderExpenseModel WorkOrderExpenseModel
		{
			get
			{
				return this._WorkOrderExpenseModel.Entity;
			}
			set
			{
				WorkOrderExpenseModel previousValue = this._WorkOrderExpenseModel.Entity;
				if (((previousValue != value)
							|| (this._WorkOrderExpenseModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderExpenseModel.Entity = null;
						previousValue.WorkOrderWorkOrderExpenseModel.Remove(this);
					}
					this._WorkOrderExpenseModel.Entity = value;
					if ((value != null))
					{
						value.WorkOrderWorkOrderExpenseModel.Add(this);
						this._WorkOrderExpenseModelID = value.Id;
					}
					else
					{
						this._WorkOrderExpenseModelID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessCode_WorkOrder", Storage="_AccessCode", ThisKey="AccessCodeID", OtherKey="Id", IsForeignKey=true)]
		public AccessCode AccessCode
		{
			get
			{
				return this._AccessCode.Entity;
			}
			set
			{
				AccessCode previousValue = this._AccessCode.Entity;
				if (((previousValue != value)
							|| (this._AccessCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessCode.Entity = null;
						previousValue.WorkOrderAccessCode.Remove(this);
					}
					this._AccessCode.Entity = value;
					if ((value != null))
					{
						value.WorkOrderAccessCode.Add(this);
						this._AccessCodeID = value.Id;
					}
					else
					{
						this._AccessCodeID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_WorkOrder", Storage="_Project", ThisKey="ProjectID", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value)
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.WorkOrderProject.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.WorkOrderProject.Add(this);
						this._ProjectID = value.Id;
					}
					else
					{
						this._ProjectID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderPriority_WorkOrder", Storage="_WorkOrderPriority", ThisKey="WorkOrderPriorityID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderPriority WorkOrderPriority
		{
			get
			{
				return this._WorkOrderPriority.Entity;
			}
			set
			{
				WorkOrderPriority previousValue = this._WorkOrderPriority.Entity;
				if (((previousValue != value)
							|| (this._WorkOrderPriority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderPriority.Entity = null;
						previousValue.WorkOrderWorkOrderPriority.Remove(this);
					}
					this._WorkOrderPriority.Entity = value;
					if ((value != null))
					{
						value.WorkOrderWorkOrderPriority.Add(this);
						this._WorkOrderPriorityID = value.Id;
					}
					else
					{
						this._WorkOrderPriorityID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CloseCode_WorkOrder", Storage="_CloseCode", ThisKey="CloseCodeID", OtherKey="Id", IsForeignKey=true)]
		public CloseCode CloseCode
		{
			get
			{
				return this._CloseCode.Entity;
			}
			set
			{
				CloseCode previousValue = this._CloseCode.Entity;
				if (((previousValue != value)
							|| (this._CloseCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CloseCode.Entity = null;
						previousValue.WorkOrderCloseCode.Remove(this);
					}
					this._CloseCode.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCloseCode.Add(this);
						this._CloseCodeID = value.Id;
					}
					else
					{
						this._CloseCodeID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderStateHistoryWorkOrder(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		private void detach_WorkOrderStateHistoryWorkOrder(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		private void Initialize()
		{
			this._WorkOrderStateHistoryWorkOrder = new EntitySet<WorkOrderStateHistory>(new Action<WorkOrderStateHistory>(this.attach_WorkOrderStateHistoryWorkOrder), new Action<WorkOrderStateHistory>(this.detach_WorkOrderStateHistoryWorkOrder));
			this._UnitLocation = default(EntityRef<Location>);
			this._PMGenerationBatch = default(EntityRef<PMGenerationBatch>);
			this._CurrentWorkOrderStateHistory = default(EntityRef<WorkOrderStateHistory>);
			this._Requestor = default(EntityRef<Requestor>);
			this._WorkCategory = default(EntityRef<WorkCategory>);
			this._WorkOrderExpenseModel = default(EntityRef<WorkOrderExpenseModel>);
			this._AccessCode = default(EntityRef<AccessCode>);
			this._Project = default(EntityRef<Project>);
			this._WorkOrderPriority = default(EntityRef<WorkOrderPriority>);
			this._CloseCode = default(EntityRef<CloseCode>);
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Location with labelkey='Location'
		static public string LocationLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Location").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderUnitLocation;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Location()
		{
			this.Initialize();
		}
		/// Denotes the Location's Id column with type id(nonnull) with labelkey='Id'
		static public string Location_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.Location),Name="Location_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_WorkOrder", Storage="_WorkOrderUnitLocation", ThisKey="Id", OtherKey="UnitLocationID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderUnitLocation
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderUnitLocation.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderUnitLocation;
			}
			set
			{
				this._WorkOrderUnitLocation.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderUnitLocation(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.UnitLocation = this;
		}
		private void detach_WorkOrderUnitLocation(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.UnitLocation = null;
		}
		private void Initialize()
		{
			this._WorkOrderUnitLocation = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderUnitLocation), new Action<WorkOrder>(this.detach_WorkOrderUnitLocation));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderStateHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrderStateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderStateHistory with labelkey='Work Order State History'
		static public string WorkOrderStateHistoryLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order State History").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _WorkOrderID;
		private System.DateTime _EffectiveDate;
		private System.Guid _Id;
		private System.DateTime _EntryDate;
		private System.Guid? _UserID;
		private bool _EffectiveDateReadonly;
		private System.Guid _WorkOrderStateID;
		private System.Guid? _WorkOrderStateHistoryStatusID;
		private string _Comment;
		private EntitySet<WorkOrder> _WorkOrderCurrentWorkOrderStateHistory;
		private EntityRef<User> _User;
		private EntityRef<WorkOrder> _WorkOrder;
		private EntityRef<WorkOrderState> _WorkOrderState;
		private EntityRef<WorkOrderStateHistoryStatus> _WorkOrderStateHistoryStatus;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnWorkOrderIDChanging(System.Guid value);
	partial void OnWorkOrderIDChanged();
	partial void OnEffectiveDateChanging(System.DateTime value);
	partial void OnEffectiveDateChanged();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnEntryDateChanging(System.DateTime value);
	partial void OnEntryDateChanged();
	partial void OnUserIDChanging(System.Guid? value);
	partial void OnUserIDChanged();
	partial void OnEffectiveDateReadonlyChanging(bool value);
	partial void OnEffectiveDateReadonlyChanged();
	partial void OnWorkOrderStateIDChanging(System.Guid value);
	partial void OnWorkOrderStateIDChanged();
	partial void OnWorkOrderStateHistoryStatusIDChanging(System.Guid? value);
	partial void OnWorkOrderStateHistoryStatusIDChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public WorkOrderStateHistory()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrderStateHistory's WorkOrderID column with type link(nonnull, field WorkOrder.Id) with labelkey='Work Order'
		static public string WorkOrderStateHistory_WorkOrderID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_WorkOrderID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged();
					this.OnWorkOrderIDChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's EffectiveDate column with type datetime(nonnull, (min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='EffectiveDate'
		static public string WorkOrderStateHistory_EffectiveDate{ get{return WorkOrderCloseLabelKdsMBLabel.K("EffectiveDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_EffectiveDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DATETIME", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged();
					this.OnEffectiveDateChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderStateHistory_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's EntryDate column with type datetime(nonnull, (min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='EntryDate'
		static public string WorkOrderStateHistory_EntryDate{ get{return WorkOrderCloseLabelKdsMBLabel.K("EntryDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_EntryDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DATETIME", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged();
					this.OnEntryDateChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's UserID column with type link(field User.Id) with labelkey='User'
		static public string WorkOrderStateHistory_UserID{ get{return WorkOrderCloseLabelKdsMBLabel.K("User").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_UserID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1)]
		public System.Guid? UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged();
					this.OnUserIDChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's EffectiveDateReadonly column with type bool(nonnull) with labelkey='EffectiveDateReadonly'
		static public string WorkOrderStateHistory_EffectiveDateReadonly{ get{return WorkOrderCloseLabelKdsMBLabel.K("EffectiveDateReadonly").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_EffectiveDateReadonly")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDateReadonly", DbType="BIT", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool EffectiveDateReadonly
		{
			get
			{
				return this._EffectiveDateReadonly;
			}
			set
			{
				if ((this._EffectiveDateReadonly != value))
				{
					this.OnEffectiveDateReadonlyChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDateReadonly = value;
					this.SendPropertyChanged();
					this.OnEffectiveDateReadonlyChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's WorkOrderStateID column with type link(nonnull, field WorkOrderState.Id) with labelkey='State'
		static public string WorkOrderStateHistory_WorkOrderStateID{ get{return WorkOrderCloseLabelKdsMBLabel.K("State").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_WorkOrderStateID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderStateID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid WorkOrderStateID
		{
			get
			{
				return this._WorkOrderStateID;
			}
			set
			{
				if ((this._WorkOrderStateID != value))
				{
					if (this._WorkOrderState.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderStateIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderStateID = value;
					this.SendPropertyChanged();
					this.OnWorkOrderStateIDChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's WorkOrderStateHistoryStatusID column with type link(field WorkOrderStateHistoryStatus.Id) with labelkey='Status'
		static public string WorkOrderStateHistory_WorkOrderStateHistoryStatusID{ get{return WorkOrderCloseLabelKdsMBLabel.K("Status").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_WorkOrderStateHistoryStatusID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderStateHistoryStatusID", DbType="UNIQUEIDENTIFIER")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1)]
		public System.Guid? WorkOrderStateHistoryStatusID
		{
			get
			{
				return this._WorkOrderStateHistoryStatusID;
			}
			set
			{
				if ((this._WorkOrderStateHistoryStatusID != value))
				{
					if (this._WorkOrderStateHistoryStatus.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderStateHistoryStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderStateHistoryStatusID = value;
					this.SendPropertyChanged();
					this.OnWorkOrderStateHistoryStatusIDChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistory's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string WorkOrderStateHistory_Comment{ get{return WorkOrderCloseLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderStateHistory_WorkOrder", Storage="_WorkOrderCurrentWorkOrderStateHistory", ThisKey="Id", OtherKey="CurrentWorkOrderStateHistoryID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderCurrentWorkOrderStateHistory
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderCurrentWorkOrderStateHistory.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderCurrentWorkOrderStateHistory;
			}
			set
			{
				this._WorkOrderCurrentWorkOrderStateHistory.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderStateHistory", Storage="_User", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value)
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderStateHistoryUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStateHistoryUser.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderStateHistory", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value)
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderStateHistoryWorkOrder.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStateHistoryWorkOrder.Add(this);
						this._WorkOrderID = value.Id;
					}
					else
					{
						this._WorkOrderID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderState_WorkOrderStateHistory", Storage="_WorkOrderState", ThisKey="WorkOrderStateID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderState WorkOrderState
		{
			get
			{
				return this._WorkOrderState.Entity;
			}
			set
			{
				WorkOrderState previousValue = this._WorkOrderState.Entity;
				if (((previousValue != value)
							|| (this._WorkOrderState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderState.Entity = null;
						previousValue.WorkOrderStateHistoryWorkOrderState.Remove(this);
					}
					this._WorkOrderState.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStateHistoryWorkOrderState.Add(this);
						this._WorkOrderStateID = value.Id;
					}
					else
					{
						this._WorkOrderStateID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderStateHistoryStatus_WorkOrderStateHistory", Storage="_WorkOrderStateHistoryStatus", ThisKey="WorkOrderStateHistoryStatusID", OtherKey="Id", IsForeignKey=true)]
		public WorkOrderStateHistoryStatus WorkOrderStateHistoryStatus
		{
			get
			{
				return this._WorkOrderStateHistoryStatus.Entity;
			}
			set
			{
				WorkOrderStateHistoryStatus previousValue = this._WorkOrderStateHistoryStatus.Entity;
				if (((previousValue != value)
							|| (this._WorkOrderStateHistoryStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderStateHistoryStatus.Entity = null;
						previousValue.WorkOrderStateHistoryWorkOrderStateHistoryStatus.Remove(this);
					}
					this._WorkOrderStateHistoryStatus.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStateHistoryWorkOrderStateHistoryStatus.Add(this);
						this._WorkOrderStateHistoryStatusID = value.Id;
					}
					else
					{
						this._WorkOrderStateHistoryStatusID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderCurrentWorkOrderStateHistory(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.CurrentWorkOrderStateHistory = this;
		}
		private void detach_WorkOrderCurrentWorkOrderStateHistory(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.CurrentWorkOrderStateHistory = null;
		}
		private void Initialize()
		{
			this._WorkOrderCurrentWorkOrderStateHistory = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderCurrentWorkOrderStateHistory), new Action<WorkOrder>(this.detach_WorkOrderCurrentWorkOrderStateHistory));
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			this._WorkOrderState = default(EntityRef<WorkOrderState>);
			this._WorkOrderStateHistoryStatus = default(EntityRef<WorkOrderStateHistoryStatus>);
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requestor")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Requestor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Requestor with labelkey='Requestor'
		static public string RequestorLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Requestor").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderRequestor;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Requestor()
		{
			this.Initialize();
		}
		/// Denotes the Requestor's Id column with type id(nonnull) with labelkey='Id'
		static public string Requestor_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.Requestor),Name="Requestor_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requestor_WorkOrder", Storage="_WorkOrderRequestor", ThisKey="Id", OtherKey="RequestorID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderRequestor
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderRequestor.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderRequestor;
			}
			set
			{
				this._WorkOrderRequestor.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderRequestor(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Requestor = this;
		}
		private void detach_WorkOrderRequestor(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Requestor = null;
		}
		private void Initialize()
		{
			this._WorkOrderRequestor = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderRequestor), new Action<WorkOrder>(this.detach_WorkOrderRequestor));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Project with labelkey='Project'
		static public string ProjectLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Project").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderProject;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Project()
		{
			this.Initialize();
		}
		/// Denotes the Project's Id column with type id(nonnull) with labelkey='Id'
		static public string Project_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.Project),Name="Project_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_WorkOrder", Storage="_WorkOrderProject", ThisKey="Id", OtherKey="ProjectID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderProject
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderProject.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderProject;
			}
			set
			{
				this._WorkOrderProject.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderProject(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		private void detach_WorkOrderProject(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		private void Initialize()
		{
			this._WorkOrderProject = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderProject), new Action<WorkOrder>(this.detach_WorkOrderProject));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CloseCode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CloseCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table CloseCode with labelkey='Close Code'
		static public string CloseCodeLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Close Code").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<WorkOrder> _WorkOrderCloseCode;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public CloseCode()
		{
			this.Initialize();
		}
		/// Denotes the CloseCode's Id column with type id(nonnull) with labelkey='Id'
		static public string CloseCode_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.CloseCode),Name="CloseCode_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the CloseCode's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string CloseCode_Code{ get{return WorkOrderCloseLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.CloseCode),Name="CloseCode_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the CloseCode's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string CloseCode_Hidden{ get{return WorkOrderCloseLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.CloseCode),Name="CloseCode_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the CloseCode's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string CloseCode_Desc{ get{return WorkOrderCloseLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.CloseCode),Name="CloseCode_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the CloseCode's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string CloseCode_Comment{ get{return WorkOrderCloseLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.CloseCode),Name="CloseCode_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CloseCode_WorkOrder", Storage="_WorkOrderCloseCode", ThisKey="Id", OtherKey="CloseCodeID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderCloseCode
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderCloseCode.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderCloseCode;
			}
			set
			{
				this._WorkOrderCloseCode.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderCloseCode(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.CloseCode = this;
		}
		private void detach_WorkOrderCloseCode(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.CloseCode = null;
		}
		private void Initialize()
		{
			this._WorkOrderCloseCode = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderCloseCode), new Action<WorkOrder>(this.detach_WorkOrderCloseCode));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PMGenerationBatch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PMGenerationBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table PMGenerationBatch with labelkey='PMGenerationBatch'
		static public string PMGenerationBatchLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("PMGenerationBatch").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrder> _WorkOrderPMGenerationBatch;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public PMGenerationBatch()
		{
			this.Initialize();
		}
		/// Denotes the PMGenerationBatch's Id column with type id(nonnull) with labelkey='Id'
		static public string PMGenerationBatch_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.PMGenerationBatch),Name="PMGenerationBatch_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PMGenerationBatch_WorkOrder", Storage="_WorkOrderPMGenerationBatch", ThisKey="Id", OtherKey="PMGenerationBatchID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrderPMGenerationBatch
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderPMGenerationBatch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderPMGenerationBatch;
			}
			set
			{
				this._WorkOrderPMGenerationBatch.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderPMGenerationBatch(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.PMGenerationBatch = this;
		}
		private void detach_WorkOrderPMGenerationBatch(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.PMGenerationBatch = null;
		}
		private void Initialize()
		{
			this._WorkOrderPMGenerationBatch = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrderPMGenerationBatch), new Action<WorkOrder>(this.detach_WorkOrderPMGenerationBatch));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Demand")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Demand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Demand with labelkey='Demand'
		static public string DemandLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Demand").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Demand()
		{
			this.Initialize();
		}
		/// Denotes the Demand's Id column with type id(nonnull) with labelkey='Id'
		static public string Demand_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.Demand),Name="Demand_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderStateHistoryStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkOrderStateHistoryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderStateHistoryStatus with labelkey='Work Order State History Status'
		static public string WorkOrderStateHistoryStatusLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Work Order State History Status").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<WorkOrderStateHistory> _WorkOrderStateHistoryWorkOrderStateHistoryStatus;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public WorkOrderStateHistoryStatus()
		{
			this.Initialize();
		}
		/// Denotes the WorkOrderStateHistoryStatus's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderStateHistoryStatus_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistoryStatus),Name="WorkOrderStateHistoryStatus_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistoryStatus's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string WorkOrderStateHistoryStatus_Code{ get{return WorkOrderCloseLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistoryStatus),Name="WorkOrderStateHistoryStatus_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistoryStatus's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string WorkOrderStateHistoryStatus_Hidden{ get{return WorkOrderCloseLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistoryStatus),Name="WorkOrderStateHistoryStatus_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1)]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistoryStatus's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string WorkOrderStateHistoryStatus_Desc{ get{return WorkOrderCloseLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistoryStatus),Name="WorkOrderStateHistoryStatus_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the WorkOrderStateHistoryStatus's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string WorkOrderStateHistoryStatus_Comment{ get{return WorkOrderCloseLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.WorkOrderStateHistoryStatus),Name="WorkOrderStateHistoryStatus_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderStateHistoryStatus_WorkOrderStateHistory", Storage="_WorkOrderStateHistoryWorkOrderStateHistoryStatus", ThisKey="Id", OtherKey="WorkOrderStateHistoryStatusID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1+1+1+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrderStateHistory> WorkOrderStateHistoryWorkOrderStateHistoryStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderStateHistoryWorkOrderStateHistoryStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderStateHistoryWorkOrderStateHistoryStatus;
			}
			set
			{
				this._WorkOrderStateHistoryWorkOrderStateHistoryStatus.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderStateHistoryWorkOrderStateHistoryStatus(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderStateHistoryStatus = this;
		}
		private void detach_WorkOrderStateHistoryWorkOrderStateHistoryStatus(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderStateHistoryStatus = null;
		}
		private void Initialize()
		{
			this._WorkOrderStateHistoryWorkOrderStateHistoryStatus = new EntitySet<WorkOrderStateHistory>(new Action<WorkOrderStateHistory>(this.attach_WorkOrderStateHistoryWorkOrderStateHistoryStatus), new Action<WorkOrderStateHistory>(this.detach_WorkOrderStateHistoryWorkOrderStateHistoryStatus));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Request with labelkey='Request'
		static public string RequestLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Request").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Request()
		{
			this.Initialize();
		}
		/// Denotes the Request's Id column with type id(nonnull) with labelkey='Id'
		static public string Request_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.Request),Name="Request_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Contact with labelkey='Contact'
		static public string ContactLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("Contact").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Contact()
		{
			this.Initialize();
		}
		/// Denotes the Contact's Id column with type id(nonnull) with labelkey='Id'
		static public string Contact_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.Contact),Name="Contact_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestedWorkOrder")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RequestedWorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestedWorkOrder with labelkey='RequestedWorkOrder'
		static public string RequestedWorkOrderLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("RequestedWorkOrder").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public RequestedWorkOrder()
		{
			this.Initialize();
		}
		/// Denotes the RequestedWorkOrder's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestedWorkOrder_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.RequestedWorkOrder),Name="RequestedWorkOrder_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		private void Initialize()
		{
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table User with labelkey='User'
		static public string UserLabelKey { get{return WorkOrderCloseLabelKdsMBLabel.K("User").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<WorkOrderStateHistory> _WorkOrderStateHistoryUser;
#pragma warning disable 0414
		private bool serializing;
#pragma warning restore 0414
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public User()
		{
			this.Initialize();
		}
		/// Denotes the User's Id column with type id(nonnull) with labelkey='Id'
		static public string User_Id{ get{return WorkOrderCloseLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(WorkOrderCloseEntities.User),Name="User_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderStateHistory", Storage="_WorkOrderStateHistoryUser", ThisKey="Id", OtherKey="UserID")]
		
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=0+1+1, EmitDefaultValue=false)]
		public EntitySet<WorkOrderStateHistory> WorkOrderStateHistoryUser
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderStateHistoryUser.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderStateHistoryUser;
			}
			set
			{
				this._WorkOrderStateHistoryUser.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_WorkOrderStateHistoryUser(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		private void detach_WorkOrderStateHistoryUser(WorkOrderStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		private void Initialize()
		{
			this._WorkOrderStateHistoryUser = new EntitySet<WorkOrderStateHistory>(new Action<WorkOrderStateHistory>(this.attach_WorkOrderStateHistoryUser), new Action<WorkOrderStateHistory>(this.detach_WorkOrderStateHistoryUser));
			OnCreated();		
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		private void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	internal class WorkOrderCloseLabelKdsMBLabel : Thinkage.Libraries.Translation.GeneralKeyBuilder {
		const string LabelContext = "dsMBLabel";

		static WorkOrderCloseLabelKdsMBLabel Instance = new WorkOrderCloseLabelKdsMBLabel();
		protected WorkOrderCloseLabelKdsMBLabel() {
		}
		protected override Thinkage.Libraries.Translation.ContextReference GetContext() {
			return Thinkage.Libraries.Translation.ContextReference.New(LabelContext);
		}
		public static Thinkage.Libraries.Translation.Key K([Thinkage.Libraries.Translation.Context(LabelContext)]string s) {
			return Instance.BuildKey(s);
		}
	}
}
#pragma warning restore 1591

