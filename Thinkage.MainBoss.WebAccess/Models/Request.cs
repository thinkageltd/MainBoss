


	
	
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//		Template file LINQGenerationTemplate.xml
//		Vault version 31
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Thinkage.MainBoss.WebAccess.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;

	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Master")]
	public partial class RequestDataContext : System.Data.Linq.DataContext
	{
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void InsertWorkOrder(RequestEntities.WorkOrder instance);
	partial void UpdateWorkOrder(RequestEntities.WorkOrder instance);
	partial void DeleteWorkOrder(RequestEntities.WorkOrder instance);
	partial void InsertWorkOrderStateHistory(RequestEntities.WorkOrderStateHistory instance);
	partial void UpdateWorkOrderStateHistory(RequestEntities.WorkOrderStateHistory instance);
	partial void DeleteWorkOrderStateHistory(RequestEntities.WorkOrderStateHistory instance);
	partial void InsertWorkOrderTemplate(RequestEntities.WorkOrderTemplate instance);
	partial void UpdateWorkOrderTemplate(RequestEntities.WorkOrderTemplate instance);
	partial void DeleteWorkOrderTemplate(RequestEntities.WorkOrderTemplate instance);
	partial void InsertTemporaryStorage(RequestEntities.TemporaryStorage instance);
	partial void UpdateTemporaryStorage(RequestEntities.TemporaryStorage instance);
	partial void DeleteTemporaryStorage(RequestEntities.TemporaryStorage instance);
	partial void InsertTemplateTemporaryStorage(RequestEntities.TemplateTemporaryStorage instance);
	partial void UpdateTemplateTemporaryStorage(RequestEntities.TemplateTemporaryStorage instance);
	partial void DeleteTemplateTemporaryStorage(RequestEntities.TemplateTemporaryStorage instance);
	partial void InsertPostalAddress(RequestEntities.PostalAddress instance);
	partial void UpdatePostalAddress(RequestEntities.PostalAddress instance);
	partial void DeletePostalAddress(RequestEntities.PostalAddress instance);
	partial void InsertRequestStateTransition(RequestEntities.RequestStateTransition instance);
	partial void UpdateRequestStateTransition(RequestEntities.RequestStateTransition instance);
	partial void DeleteRequestStateTransition(RequestEntities.RequestStateTransition instance);
	partial void InsertRequestState(RequestEntities.RequestState instance);
	partial void UpdateRequestState(RequestEntities.RequestState instance);
	partial void DeleteRequestState(RequestEntities.RequestState instance);
	partial void InsertRequestAssignment(RequestEntities.RequestAssignment instance);
	partial void UpdateRequestAssignment(RequestEntities.RequestAssignment instance);
	partial void DeleteRequestAssignment(RequestEntities.RequestAssignment instance);
	partial void InsertRequestAssignee(RequestEntities.RequestAssignee instance);
	partial void UpdateRequestAssignee(RequestEntities.RequestAssignee instance);
	partial void DeleteRequestAssignee(RequestEntities.RequestAssignee instance);
	partial void InsertRequest(RequestEntities.Request instance);
	partial void UpdateRequest(RequestEntities.Request instance);
	partial void DeleteRequest(RequestEntities.Request instance);
	partial void InsertContact(RequestEntities.Contact instance);
	partial void UpdateContact(RequestEntities.Contact instance);
	partial void DeleteContact(RequestEntities.Contact instance);
	partial void InsertRequestStateHistory(RequestEntities.RequestStateHistory instance);
	partial void UpdateRequestStateHistory(RequestEntities.RequestStateHistory instance);
	partial void DeleteRequestStateHistory(RequestEntities.RequestStateHistory instance);
	partial void InsertRequestor(RequestEntities.Requestor instance);
	partial void UpdateRequestor(RequestEntities.Requestor instance);
	partial void DeleteRequestor(RequestEntities.Requestor instance);
	partial void InsertLocation(RequestEntities.Location instance);
	partial void UpdateLocation(RequestEntities.Location instance);
	partial void DeleteLocation(RequestEntities.Location instance);
	partial void InsertAccessCode(RequestEntities.AccessCode instance);
	partial void UpdateAccessCode(RequestEntities.AccessCode instance);
	partial void DeleteAccessCode(RequestEntities.AccessCode instance);
	partial void InsertRequestPriority(RequestEntities.RequestPriority instance);
	partial void UpdateRequestPriority(RequestEntities.RequestPriority instance);
	partial void DeleteRequestPriority(RequestEntities.RequestPriority instance);
	partial void InsertRequestedWorkOrder(RequestEntities.RequestedWorkOrder instance);
	partial void UpdateRequestedWorkOrder(RequestEntities.RequestedWorkOrder instance);
	partial void DeleteRequestedWorkOrder(RequestEntities.RequestedWorkOrder instance);
	partial void InsertEmailRequest(RequestEntities.EmailRequest instance);
	partial void UpdateEmailRequest(RequestEntities.EmailRequest instance);
	partial void DeleteEmailRequest(RequestEntities.EmailRequest instance);
	partial void InsertRequestAssignmentByAssignee(RequestEntities.RequestAssignmentByAssignee instance);
	partial void UpdateRequestAssignmentByAssignee(RequestEntities.RequestAssignmentByAssignee instance);
	partial void DeleteRequestAssignmentByAssignee(RequestEntities.RequestAssignmentByAssignee instance);
	partial void InsertLocationContainment(RequestEntities.LocationContainment instance);
	partial void UpdateLocationContainment(RequestEntities.LocationContainment instance);
	partial void DeleteLocationContainment(RequestEntities.LocationContainment instance);
	partial void InsertRelativeLocation(RequestEntities.RelativeLocation instance);
	partial void UpdateRelativeLocation(RequestEntities.RelativeLocation instance);
	partial void DeleteRelativeLocation(RequestEntities.RelativeLocation instance);
	partial void InsertUser(RequestEntities.User instance);
	partial void UpdateUser(RequestEntities.User instance);
	partial void DeleteUser(RequestEntities.User instance);
	partial void InsertRequestStateHistoryStatus(RequestEntities.RequestStateHistoryStatus instance);
	partial void UpdateRequestStateHistoryStatus(RequestEntities.RequestStateHistoryStatus instance);
	partial void DeleteRequestStateHistoryStatus(RequestEntities.RequestStateHistoryStatus instance);
	#endregion

		public RequestDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Master"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public RequestDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public RequestDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public RequestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public RequestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}
		public System.Data.Linq.Table<RequestEntities.WorkOrder> WorkOrder
		{
			get
			{
				return this.GetTable<RequestEntities.WorkOrder>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.WorkOrderStateHistory> WorkOrderStateHistory
		{
			get
			{
				return this.GetTable<RequestEntities.WorkOrderStateHistory>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.WorkOrderTemplate> WorkOrderTemplate
		{
			get
			{
				return this.GetTable<RequestEntities.WorkOrderTemplate>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.TemporaryStorage> TemporaryStorage
		{
			get
			{
				return this.GetTable<RequestEntities.TemporaryStorage>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.TemplateTemporaryStorage> TemplateTemporaryStorage
		{
			get
			{
				return this.GetTable<RequestEntities.TemplateTemporaryStorage>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.PostalAddress> PostalAddress
		{
			get
			{
				return this.GetTable<RequestEntities.PostalAddress>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestStateTransition> RequestStateTransition
		{
			get
			{
				return this.GetTable<RequestEntities.RequestStateTransition>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestState> RequestState
		{
			get
			{
				return this.GetTable<RequestEntities.RequestState>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestAssignment> RequestAssignment
		{
			get
			{
				return this.GetTable<RequestEntities.RequestAssignment>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestAssignee> RequestAssignee
		{
			get
			{
				return this.GetTable<RequestEntities.RequestAssignee>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.Request> Request
		{
			get
			{
				return this.GetTable<RequestEntities.Request>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.Contact> Contact
		{
			get
			{
				return this.GetTable<RequestEntities.Contact>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestStateHistory> RequestStateHistory
		{
			get
			{
				return this.GetTable<RequestEntities.RequestStateHistory>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.Requestor> Requestor
		{
			get
			{
				return this.GetTable<RequestEntities.Requestor>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.Location> Location
		{
			get
			{
				return this.GetTable<RequestEntities.Location>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.AccessCode> AccessCode
		{
			get
			{
				return this.GetTable<RequestEntities.AccessCode>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestPriority> RequestPriority
		{
			get
			{
				return this.GetTable<RequestEntities.RequestPriority>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestedWorkOrder> RequestedWorkOrder
		{
			get
			{
				return this.GetTable<RequestEntities.RequestedWorkOrder>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.EmailRequest> EmailRequest
		{
			get
			{
				return this.GetTable<RequestEntities.EmailRequest>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestAssignmentByAssignee> RequestAssignmentByAssignee
		{
			get
			{
				return this.GetTable<RequestEntities.RequestAssignmentByAssignee>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.LocationContainment> LocationContainment
		{
			get
			{
				return this.GetTable<RequestEntities.LocationContainment>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RelativeLocation> RelativeLocation
		{
			get
			{
				return this.GetTable<RequestEntities.RelativeLocation>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.User> User
		{
			get
			{
				return this.GetTable<RequestEntities.User>();
			}
		}
		public System.Data.Linq.Table<RequestEntities.RequestStateHistoryStatus> RequestStateHistoryStatus
		{
			get
			{
				return this.GetTable<RequestEntities.RequestStateHistoryStatus>();
			}
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetDBVersion]", IsComposable=true)]
		public string _vgetDBVersion()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetWRSequence]", IsComposable=true)]
		public System.Int64 _vgetWRSequence()
		{
			return ((System.Int64)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetWRSequenceFormat]", IsComposable=true)]
		public string _vgetWRSequenceFormat()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetPhonePrefix]", IsComposable=true)]
		public string _vgetPhonePrefix()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
}
namespace RequestEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	using System.Runtime.CompilerServices;
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrder")]
	public partial class WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrder with labelkey='Work Order'
		static public string WorkOrderLabelKey { get{return RequestLabelKdsMBLabel.K("Work Order").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Object _Number;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnNumberChanging(System.Object value);
	partial void OnNumberChanged();
	#endregion

		public WorkOrder()
		{
			OnCreated();
		}
		/// Denotes the WorkOrder's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrder_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.WorkOrder),Name="WorkOrder_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrder's Number column with type null(nonnull) with labelkey='Number'
		static public string WorkOrder_Number{ get{return RequestLabelKdsMBLabel.K("Number").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.WorkOrder),Name="WorkOrder_Number")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged();
					this.OnNumberChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderStateHistory")]
	public partial class WorkOrderStateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderStateHistory with labelkey='Work Order State History'
		static public string WorkOrderStateHistoryLabelKey { get{return RequestLabelKdsMBLabel.K("Work Order State History").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public WorkOrderStateHistory()
		{
			OnCreated();
		}
		/// Denotes the WorkOrderStateHistory's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderStateHistory_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.WorkOrderStateHistory),Name="WorkOrderStateHistory_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderTemplate")]
	public partial class WorkOrderTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table WorkOrderTemplate with labelkey='Task'
		static public string WorkOrderTemplateLabelKey { get{return RequestLabelKdsMBLabel.K("Task").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Object _Code;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(System.Object value);
	partial void OnCodeChanged();
	#endregion

		public WorkOrderTemplate()
		{
			OnCreated();
		}
		/// Denotes the WorkOrderTemplate's Id column with type id(nonnull) with labelkey='Id'
		static public string WorkOrderTemplate_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.WorkOrderTemplate),Name="WorkOrderTemplate_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the WorkOrderTemplate's Code column with type null(nonnull) with labelkey='Code'
		static public string WorkOrderTemplate_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.WorkOrderTemplate),Name="WorkOrderTemplate_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemporaryStorage")]
	public partial class TemporaryStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table TemporaryStorage with labelkey='Temporary Storage'
		static public string TemporaryStorageLabelKey { get{return RequestLabelKdsMBLabel.K("Temporary Storage").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Object _ContainingLocationID;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnContainingLocationIDChanging(System.Object value);
	partial void OnContainingLocationIDChanged();
	#endregion

		public TemporaryStorage()
		{
			OnCreated();
		}
		/// Denotes the TemporaryStorage's Id column with type id(nonnull) with labelkey='Id'
		static public string TemporaryStorage_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.TemporaryStorage),Name="TemporaryStorage_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the TemporaryStorage's ContainingLocationID column with type null(nonnull) with labelkey='ContainingLocationID'
		static public string TemporaryStorage_ContainingLocationID{ get{return RequestLabelKdsMBLabel.K("ContainingLocationID").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.TemporaryStorage),Name="TemporaryStorage_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					this.OnContainingLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ContainingLocationID = value;
					this.SendPropertyChanged();
					this.OnContainingLocationIDChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemplateTemporaryStorage")]
	public partial class TemplateTemporaryStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table TemplateTemporaryStorage with labelkey='Task Temporary Storage'
		static public string TemplateTemporaryStorageLabelKey { get{return RequestLabelKdsMBLabel.K("Task Temporary Storage").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Object _ContainingLocationID;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnContainingLocationIDChanging(System.Object value);
	partial void OnContainingLocationIDChanged();
	#endregion

		public TemplateTemporaryStorage()
		{
			OnCreated();
		}
		/// Denotes the TemplateTemporaryStorage's Id column with type id(nonnull) with labelkey='Id'
		static public string TemplateTemporaryStorage_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.TemplateTemporaryStorage),Name="TemplateTemporaryStorage_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the TemplateTemporaryStorage's ContainingLocationID column with type null(nonnull) with labelkey='ContainingLocationID'
		static public string TemplateTemporaryStorage_ContainingLocationID{ get{return RequestLabelKdsMBLabel.K("ContainingLocationID").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.TemplateTemporaryStorage),Name="TemplateTemporaryStorage_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					this.OnContainingLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ContainingLocationID = value;
					this.SendPropertyChanged();
					this.OnContainingLocationIDChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostalAddress")]
	public partial class PostalAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table PostalAddress with labelkey='Postal Address'
		static public string PostalAddressLabelKey { get{return RequestLabelKdsMBLabel.K("Postal Address").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Object _Code;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(System.Object value);
	partial void OnCodeChanged();
	#endregion

		public PostalAddress()
		{
			OnCreated();
		}
		/// Denotes the PostalAddress's Id column with type id(nonnull) with labelkey='Id'
		static public string PostalAddress_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.PostalAddress),Name="PostalAddress_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the PostalAddress's Code column with type null(nonnull) with labelkey='Code'
		static public string PostalAddress_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.PostalAddress),Name="PostalAddress_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Object Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStateTransition")]
	public partial class RequestStateTransition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestStateTransition with labelkey='Request State Transition'
		static public string RequestStateTransitionLabelKey { get{return RequestLabelKdsMBLabel.K("Request State Transition").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private Thinkage.Libraries.Translation.SimpleKey _Operation;
		private Thinkage.Libraries.Translation.SimpleKey _OperationHint;
		private bool _CanTransitionWithoutUI;
		private bool _CopyStatusFromPrevious;
		private System.Guid _FromStateID;
		private System.Guid _ToStateID;
		private short _Rank;
		private string _RightName;
		private EntityRef<RequestState> _FromState;
		private EntityRef<RequestState> _ToState;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnOperationChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnOperationChanged();
	partial void OnOperationHintChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnOperationHintChanged();
	partial void OnCanTransitionWithoutUIChanging(bool value);
	partial void OnCanTransitionWithoutUIChanged();
	partial void OnCopyStatusFromPreviousChanging(bool value);
	partial void OnCopyStatusFromPreviousChanged();
	partial void OnFromStateIDChanging(System.Guid value);
	partial void OnFromStateIDChanged();
	partial void OnToStateIDChanging(System.Guid value);
	partial void OnToStateIDChanged();
	partial void OnRankChanging(short value);
	partial void OnRankChanged();
	partial void OnRightNameChanging(string value);
	partial void OnRightNameChanged();
	#endregion

		public RequestStateTransition()
		{
			this._FromState = default(EntityRef<RequestState>);
			this._ToState = default(EntityRef<RequestState>);
			OnCreated();
		}
		/// Denotes the RequestStateTransition's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestStateTransition_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's Operation column with type translationkey(nonnull, maxlines 0, maxkeylength 512) with labelkey='Operation'
		static public string RequestStateTransition_Operation{ get{return RequestLabelKdsMBLabel.K("Operation").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_Operation")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="NVARCHAR(512)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public Thinkage.Libraries.Translation.SimpleKey Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged();
					this.OnOperationChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's OperationHint column with type translationkey(nonnull, maxlines 0, maxkeylength 512) with labelkey='OperationHint'
		static public string RequestStateTransition_OperationHint{ get{return RequestLabelKdsMBLabel.K("OperationHint").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_OperationHint")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationHint", DbType="NVARCHAR(512)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public Thinkage.Libraries.Translation.SimpleKey OperationHint
		{
			get
			{
				return this._OperationHint;
			}
			set
			{
				if ((this._OperationHint != value))
				{
					this.OnOperationHintChanging(value);
					this.SendPropertyChanging();
					this._OperationHint = value;
					this.SendPropertyChanged();
					this.OnOperationHintChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's CanTransitionWithoutUI column with type bool(nonnull) with labelkey='CanTransitionWithoutUI'
		static public string RequestStateTransition_CanTransitionWithoutUI{ get{return RequestLabelKdsMBLabel.K("CanTransitionWithoutUI").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_CanTransitionWithoutUI")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanTransitionWithoutUI", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CanTransitionWithoutUI
		{
			get
			{
				return this._CanTransitionWithoutUI;
			}
			set
			{
				if ((this._CanTransitionWithoutUI != value))
				{
					this.OnCanTransitionWithoutUIChanging(value);
					this.SendPropertyChanging();
					this._CanTransitionWithoutUI = value;
					this.SendPropertyChanged();
					this.OnCanTransitionWithoutUIChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's CopyStatusFromPrevious column with type bool(nonnull) with labelkey='CopyStatusFromPrevious'
		static public string RequestStateTransition_CopyStatusFromPrevious{ get{return RequestLabelKdsMBLabel.K("CopyStatusFromPrevious").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_CopyStatusFromPrevious")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyStatusFromPrevious", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool CopyStatusFromPrevious
		{
			get
			{
				return this._CopyStatusFromPrevious;
			}
			set
			{
				if ((this._CopyStatusFromPrevious != value))
				{
					this.OnCopyStatusFromPreviousChanging(value);
					this.SendPropertyChanging();
					this._CopyStatusFromPrevious = value;
					this.SendPropertyChanged();
					this.OnCopyStatusFromPreviousChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's FromStateID column with type link(nonnull, field RequestState.Id) with labelkey='From State'
		static public string RequestStateTransition_FromStateID{ get{return RequestLabelKdsMBLabel.K("From State").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_FromStateID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStateID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid FromStateID
		{
			get
			{
				return this._FromStateID;
			}
			set
			{
				if ((this._FromStateID != value))
				{
					if (this._FromState.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStateIDChanging(value);
					this.SendPropertyChanging();
					this._FromStateID = value;
					this.SendPropertyChanged();
					this.OnFromStateIDChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's ToStateID column with type link(nonnull, field RequestState.Id) with labelkey='To State'
		static public string RequestStateTransition_ToStateID{ get{return RequestLabelKdsMBLabel.K("To State").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_ToStateID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStateID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ToStateID
		{
			get
			{
				return this._ToStateID;
			}
			set
			{
				if ((this._ToStateID != value))
				{
					if (this._ToState.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStateIDChanging(value);
					this.SendPropertyChanging();
					this._ToStateID = value;
					this.SendPropertyChanged();
					this.OnToStateIDChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's Rank column with type integer(nonnull, 16) with labelkey='Rank'
		static public string RequestStateTransition_Rank{ get{return RequestLabelKdsMBLabel.K("Rank").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_Rank")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="SMALLINT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged();
					this.OnRankChanged();
				}
			}
		}
		/// Denotes the RequestStateTransition's RightName column with type string(minlength 1, maxlength 100, maxlines 0, trim) with labelkey='RightName'
		static public string RequestStateTransition_RightName{ get{return RequestLabelKdsMBLabel.K("RightName").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateTransition),Name="RequestStateTransition_RightName")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightName", DbType="NVARCHAR (100)")]
		public string RightName
		{
			get
			{
				return this._RightName;
			}
			set
			{
				if ((this._RightName != value))
				{
					this.OnRightNameChanging(value);
					this.SendPropertyChanging();
					this._RightName = value;
					this.SendPropertyChanged();
					this.OnRightNameChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FromState_RequestStateTransition", Storage="_FromState", ThisKey="FromStateID", OtherKey="Id", IsForeignKey=true)]
		public RequestState FromState
		{
			get
			{
				return this._FromState.Entity;
			}
			set
			{
				RequestState previousValue = this._FromState.Entity;
				if (((previousValue != value)
							|| (this._FromState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FromState.Entity = null;
						previousValue.RequestStateTransitionFromState.Remove(this);
					}
					this._FromState.Entity = value;
					if ((value != null))
					{
						value.RequestStateTransitionFromState.Add(this);
						this._FromStateID = value.Id;
					}
					else
					{
						this._FromStateID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ToState_RequestStateTransition", Storage="_ToState", ThisKey="ToStateID", OtherKey="Id", IsForeignKey=true)]
		public RequestState ToState
		{
			get
			{
				return this._ToState.Entity;
			}
			set
			{
				RequestState previousValue = this._ToState.Entity;
				if (((previousValue != value)
							|| (this._ToState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToState.Entity = null;
						previousValue.RequestStateTransitionToState.Remove(this);
					}
					this._ToState.Entity = value;
					if ((value != null))
					{
						value.RequestStateTransitionToState.Add(this);
						this._ToStateID = value.Id;
					}
					else
					{
						this._ToStateID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestState")]
	public partial class RequestState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestState with labelkey='Request State'
		static public string RequestStateLabelKey { get{return RequestLabelKdsMBLabel.K("Request State").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private Thinkage.Libraries.Translation.SimpleKey _Code;
		private System.DateTime? _Hidden;
		private Thinkage.Libraries.Translation.SimpleKey _Desc;
		private string _Comment;
		private bool _FilterAsNew;
		private bool _FilterAsInProgress;
		private bool _FilterAsClosed;
		private EntitySet<RequestStateTransition> _RequestStateTransitionFromState;
		private EntitySet<RequestStateTransition> _RequestStateTransitionToState;
		private EntitySet<RequestStateHistory> _RequestStateHistoryRequestState;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(Thinkage.Libraries.Translation.SimpleKey value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnFilterAsNewChanging(bool value);
	partial void OnFilterAsNewChanged();
	partial void OnFilterAsInProgressChanging(bool value);
	partial void OnFilterAsInProgressChanged();
	partial void OnFilterAsClosedChanging(bool value);
	partial void OnFilterAsClosedChanged();
	#endregion

		public RequestState()
		{
			this._RequestStateTransitionFromState = new EntitySet<RequestStateTransition>(new Action<RequestStateTransition>(this.attach_RequestStateTransitionFromState), new Action<RequestStateTransition>(this.detach_RequestStateTransitionFromState));
			this._RequestStateTransitionToState = new EntitySet<RequestStateTransition>(new Action<RequestStateTransition>(this.attach_RequestStateTransitionToState), new Action<RequestStateTransition>(this.detach_RequestStateTransitionToState));
			this._RequestStateHistoryRequestState = new EntitySet<RequestStateHistory>(new Action<RequestStateHistory>(this.attach_RequestStateHistoryRequestState), new Action<RequestStateHistory>(this.detach_RequestStateHistoryRequestState));
			OnCreated();
		}
		/// Denotes the RequestState's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestState_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestState's Code column with type translationkey(nonnull, maxlines 0, maxkeylength 512) with labelkey='Code'
		static public string RequestState_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR(512)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public Thinkage.Libraries.Translation.SimpleKey Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the RequestState's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string RequestState_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the RequestState's Desc column with type translationkey(maxlines 0, maxkeylength 512) with labelkey='Desc'
		static public string RequestState_Desc{ get{return RequestLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR(512)")]
		public Thinkage.Libraries.Translation.SimpleKey Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the RequestState's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string RequestState_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the RequestState's FilterAsNew column with type bool(nonnull) with labelkey='FilterAsNew'
		static public string RequestState_FilterAsNew{ get{return RequestLabelKdsMBLabel.K("FilterAsNew").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_FilterAsNew")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsNew", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsNew
		{
			get
			{
				return this._FilterAsNew;
			}
			set
			{
				if ((this._FilterAsNew != value))
				{
					this.OnFilterAsNewChanging(value);
					this.SendPropertyChanging();
					this._FilterAsNew = value;
					this.SendPropertyChanged();
					this.OnFilterAsNewChanged();
				}
			}
		}
		/// Denotes the RequestState's FilterAsInProgress column with type bool(nonnull) with labelkey='FilterAsInProgress'
		static public string RequestState_FilterAsInProgress{ get{return RequestLabelKdsMBLabel.K("FilterAsInProgress").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_FilterAsInProgress")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsInProgress", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsInProgress
		{
			get
			{
				return this._FilterAsInProgress;
			}
			set
			{
				if ((this._FilterAsInProgress != value))
				{
					this.OnFilterAsInProgressChanging(value);
					this.SendPropertyChanging();
					this._FilterAsInProgress = value;
					this.SendPropertyChanged();
					this.OnFilterAsInProgressChanged();
				}
			}
		}
		/// Denotes the RequestState's FilterAsClosed column with type bool(nonnull) with labelkey='FilterAsClosed'
		static public string RequestState_FilterAsClosed{ get{return RequestLabelKdsMBLabel.K("FilterAsClosed").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestState),Name="RequestState_FilterAsClosed")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterAsClosed", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool FilterAsClosed
		{
			get
			{
				return this._FilterAsClosed;
			}
			set
			{
				if ((this._FilterAsClosed != value))
				{
					this.OnFilterAsClosedChanging(value);
					this.SendPropertyChanging();
					this._FilterAsClosed = value;
					this.SendPropertyChanged();
					this.OnFilterAsClosedChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestState_RequestStateTransition", Storage="_RequestStateTransitionFromState", ThisKey="Id", OtherKey="FromStateID")]
		public EntitySet<RequestStateTransition> RequestStateTransitionFromState
		{
			get
			{
				return this._RequestStateTransitionFromState;
			}
			set
			{
				this._RequestStateTransitionFromState.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestState_RequestStateTransition", Storage="_RequestStateTransitionToState", ThisKey="Id", OtherKey="ToStateID")]
		public EntitySet<RequestStateTransition> RequestStateTransitionToState
		{
			get
			{
				return this._RequestStateTransitionToState;
			}
			set
			{
				this._RequestStateTransitionToState.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestState_RequestStateHistory", Storage="_RequestStateHistoryRequestState", ThisKey="Id", OtherKey="RequestStateID")]
		public EntitySet<RequestStateHistory> RequestStateHistoryRequestState
		{
			get
			{
				return this._RequestStateHistoryRequestState;
			}
			set
			{
				this._RequestStateHistoryRequestState.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestStateTransitionFromState(RequestStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.FromState = this;
		}
		private void detach_RequestStateTransitionFromState(RequestStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.FromState = null;
		}

		private void attach_RequestStateTransitionToState(RequestStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.ToState = this;
		}
		private void detach_RequestStateTransitionToState(RequestStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.ToState = null;
		}

		private void attach_RequestStateHistoryRequestState(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.RequestState = this;
		}
		private void detach_RequestStateHistoryRequestState(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.RequestState = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestAssignment")]
	public partial class RequestAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestAssignment with labelkey='Request Assignment'
		static public string RequestAssignmentLabelKey { get{return RequestLabelKdsMBLabel.K("Request Assignment").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _RequestAssigneeID;
		private System.Guid _RequestID;
		private System.DateTime? _LastNotificationDate;
		private EntitySet<RequestAssignmentByAssignee> _RequestAssignmentByAssigneeRequestAssignment;
		private EntityRef<RequestAssignee> _RequestAssignee;
		private EntityRef<Request> _Request;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnRequestAssigneeIDChanging(System.Guid value);
	partial void OnRequestAssigneeIDChanged();
	partial void OnRequestIDChanging(System.Guid value);
	partial void OnRequestIDChanged();
	partial void OnLastNotificationDateChanging(System.DateTime? value);
	partial void OnLastNotificationDateChanged();
	#endregion

		public RequestAssignment()
		{
			this._RequestAssignmentByAssigneeRequestAssignment = new EntitySet<RequestAssignmentByAssignee>(new Action<RequestAssignmentByAssignee>(this.attach_RequestAssignmentByAssigneeRequestAssignment), new Action<RequestAssignmentByAssignee>(this.detach_RequestAssignmentByAssigneeRequestAssignment));
			this._RequestAssignee = default(EntityRef<RequestAssignee>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		/// Denotes the RequestAssignment's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestAssignment_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignment),Name="RequestAssignment_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestAssignment's RequestAssigneeID column with type link(nonnull, field RequestAssignee.Id) with labelkey='Assignee'
		static public string RequestAssignment_RequestAssigneeID{ get{return RequestLabelKdsMBLabel.K("Assignee").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignment),Name="RequestAssignment_RequestAssigneeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestAssigneeID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RequestAssigneeID
		{
			get
			{
				return this._RequestAssigneeID;
			}
			set
			{
				if ((this._RequestAssigneeID != value))
				{
					if (this._RequestAssignee.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestAssigneeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestAssigneeID = value;
					this.SendPropertyChanged();
					this.OnRequestAssigneeIDChanged();
				}
			}
		}
		/// Denotes the RequestAssignment's RequestID column with type link(nonnull, field Request.Id) with labelkey='Request'
		static public string RequestAssignment_RequestID{ get{return RequestLabelKdsMBLabel.K("Request").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignment),Name="RequestAssignment_RequestID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged();
					this.OnRequestIDChanged();
				}
			}
		}
		/// Denotes the RequestAssignment's LastNotificationDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='LastNotificationDate'
		static public string RequestAssignment_LastNotificationDate{ get{return RequestLabelKdsMBLabel.K("LastNotificationDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignment),Name="RequestAssignment_LastNotificationDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNotificationDate", DbType="DATETIME")]
		public System.DateTime? LastNotificationDate
		{
			get
			{
				return this._LastNotificationDate;
			}
			set
			{
				if ((this._LastNotificationDate != value))
				{
					this.OnLastNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastNotificationDate = value;
					this.SendPropertyChanged();
					this.OnLastNotificationDateChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestAssignment_RequestAssignmentByAssignee", Storage="_RequestAssignmentByAssigneeRequestAssignment", ThisKey="Id", OtherKey="RequestAssignmentID")]
		public EntitySet<RequestAssignmentByAssignee> RequestAssignmentByAssigneeRequestAssignment
		{
			get
			{
				return this._RequestAssignmentByAssigneeRequestAssignment;
			}
			set
			{
				this._RequestAssignmentByAssigneeRequestAssignment.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestAssignee_RequestAssignment", Storage="_RequestAssignee", ThisKey="RequestAssigneeID", OtherKey="Id", IsForeignKey=true)]
		public RequestAssignee RequestAssignee
		{
			get
			{
				return this._RequestAssignee.Entity;
			}
			set
			{
				RequestAssignee previousValue = this._RequestAssignee.Entity;
				if (((previousValue != value)
							|| (this._RequestAssignee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestAssignee.Entity = null;
						previousValue.RequestAssignmentRequestAssignee.Remove(this);
					}
					this._RequestAssignee.Entity = value;
					if ((value != null))
					{
						value.RequestAssignmentRequestAssignee.Add(this);
						this._RequestAssigneeID = value.Id;
					}
					else
					{
						this._RequestAssigneeID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestAssignment", Storage="_Request", ThisKey="RequestID", OtherKey="Id", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value)
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestAssignmentRequest.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestAssignmentRequest.Add(this);
						this._RequestID = value.Id;
					}
					else
					{
						this._RequestID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestAssignmentByAssigneeRequestAssignment(RequestAssignmentByAssignee entity)
		{
			this.SendPropertyChanging();
			entity.RequestAssignment = this;
		}
		private void detach_RequestAssignmentByAssigneeRequestAssignment(RequestAssignmentByAssignee entity)
		{
			this.SendPropertyChanging();
			entity.RequestAssignment = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestAssignee")]
	public partial class RequestAssignee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestAssignee with labelkey='Request Assignee'
		static public string RequestAssigneeLabelKey { get{return RequestLabelKdsMBLabel.K("Request Assignee").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _ContactID;
		private bool _ReceiveNotification;
		private string _Comment;
		private EntitySet<RequestAssignment> _RequestAssignmentRequestAssignee;
		private EntityRef<Contact> _Contact;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnContactIDChanging(System.Guid value);
	partial void OnContactIDChanged();
	partial void OnReceiveNotificationChanging(bool value);
	partial void OnReceiveNotificationChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public RequestAssignee()
		{
			this._RequestAssignmentRequestAssignee = new EntitySet<RequestAssignment>(new Action<RequestAssignment>(this.attach_RequestAssignmentRequestAssignee), new Action<RequestAssignment>(this.detach_RequestAssignmentRequestAssignee));
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		/// Denotes the RequestAssignee's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestAssignee_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignee),Name="RequestAssignee_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestAssignee's ContactID column with type link(nonnull, field Contact.Id) with labelkey='Contact'
		static public string RequestAssignee_ContactID{ get{return RequestLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignee),Name="RequestAssignee_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged();
					this.OnContactIDChanged();
				}
			}
		}
		/// Denotes the RequestAssignee's ReceiveNotification column with type bool(nonnull) with labelkey='ReceiveNotification'
		static public string RequestAssignee_ReceiveNotification{ get{return RequestLabelKdsMBLabel.K("ReceiveNotification").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignee),Name="RequestAssignee_ReceiveNotification")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveNotification", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool ReceiveNotification
		{
			get
			{
				return this._ReceiveNotification;
			}
			set
			{
				if ((this._ReceiveNotification != value))
				{
					this.OnReceiveNotificationChanging(value);
					this.SendPropertyChanging();
					this._ReceiveNotification = value;
					this.SendPropertyChanged();
					this.OnReceiveNotificationChanged();
				}
			}
		}
		/// Denotes the RequestAssignee's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string RequestAssignee_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignee),Name="RequestAssignee_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestAssignee_RequestAssignment", Storage="_RequestAssignmentRequestAssignee", ThisKey="Id", OtherKey="RequestAssigneeID")]
		public EntitySet<RequestAssignment> RequestAssignmentRequestAssignee
		{
			get
			{
				return this._RequestAssignmentRequestAssignee;
			}
			set
			{
				this._RequestAssignmentRequestAssignee.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_RequestAssignee", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value)
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.RequestAssigneeContact.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.RequestAssigneeContact.Add(this);
						this._ContactID = value.Id;
					}
					else
					{
						this._ContactID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestAssignmentRequestAssignee(RequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.RequestAssignee = this;
		}
		private void detach_RequestAssignmentRequestAssignee(RequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.RequestAssignee = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Request with labelkey='Request'
		static public string RequestLabelKey { get{return RequestLabelKdsMBLabel.K("Request").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Number;
		private string _Subject;
		private string _Description;
		private string _Comment;
		private System.Guid _CurrentRequestStateHistoryID;
		private System.Guid _RequestorID;
		private System.Guid? _UnitLocationID;
		private System.Guid? _AccessCodeID;
		private System.Guid? _RequestPriorityID;
		private bool _SelectPrintFlag;
		private System.DateTime? _LastRequestorAcknowledgementDate;
		private string _LastRequestorAcknowledgementError;
		private EntitySet<RequestAssignment> _RequestAssignmentRequest;
		private EntitySet<RequestAssignmentByAssignee> _RequestAssignmentByAssigneeRequest;
		private EntitySet<RequestStateHistory> _RequestStateHistoryRequest;
		private EntityRef<RequestStateHistory> _CurrentRequestStateHistory;
		private EntityRef<Requestor> _Requestor;
		private EntityRef<Location> _UnitLocation;
		private EntityRef<AccessCode> _AccessCode;
		private EntityRef<RequestPriority> _RequestPriority;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnNumberChanging(string value);
	partial void OnNumberChanged();
	partial void OnSubjectChanging(string value);
	partial void OnSubjectChanged();
	partial void OnDescriptionChanging(string value);
	partial void OnDescriptionChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnCurrentRequestStateHistoryIDChanging(System.Guid value);
	partial void OnCurrentRequestStateHistoryIDChanged();
	partial void OnRequestorIDChanging(System.Guid value);
	partial void OnRequestorIDChanged();
	partial void OnUnitLocationIDChanging(System.Guid? value);
	partial void OnUnitLocationIDChanged();
	partial void OnAccessCodeIDChanging(System.Guid? value);
	partial void OnAccessCodeIDChanged();
	partial void OnRequestPriorityIDChanging(System.Guid? value);
	partial void OnRequestPriorityIDChanged();
	partial void OnSelectPrintFlagChanging(bool value);
	partial void OnSelectPrintFlagChanged();
	partial void OnLastRequestorAcknowledgementDateChanging(System.DateTime? value);
	partial void OnLastRequestorAcknowledgementDateChanged();
	partial void OnLastRequestorAcknowledgementErrorChanging(string value);
	partial void OnLastRequestorAcknowledgementErrorChanged();
	#endregion

		public Request()
		{
			this._RequestAssignmentRequest = new EntitySet<RequestAssignment>(new Action<RequestAssignment>(this.attach_RequestAssignmentRequest), new Action<RequestAssignment>(this.detach_RequestAssignmentRequest));
			this._RequestAssignmentByAssigneeRequest = new EntitySet<RequestAssignmentByAssignee>(new Action<RequestAssignmentByAssignee>(this.attach_RequestAssignmentByAssigneeRequest), new Action<RequestAssignmentByAssignee>(this.detach_RequestAssignmentByAssigneeRequest));
			this._RequestStateHistoryRequest = new EntitySet<RequestStateHistory>(new Action<RequestStateHistory>(this.attach_RequestStateHistoryRequest), new Action<RequestStateHistory>(this.detach_RequestStateHistoryRequest));
			this._CurrentRequestStateHistory = default(EntityRef<RequestStateHistory>);
			this._Requestor = default(EntityRef<Requestor>);
			this._UnitLocation = default(EntityRef<Location>);
			this._AccessCode = default(EntityRef<AccessCode>);
			this._RequestPriority = default(EntityRef<RequestPriority>);
			OnCreated();
		}
		/// Denotes the Request's Id column with type id(nonnull) with labelkey='Id'
		static public string Request_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Request's Number column with type string(nonnull, minlength 1, maxlength 20, maxlines 0, trim) with labelkey='Number'
		static public string Request_Number{ get{return RequestLabelKdsMBLabel.K("Number").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_Number")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVARCHAR (20)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged();
					this.OnNumberChanged();
				}
			}
		}
		/// Denotes the Request's Subject column with type string(nonnull, minlength 1, maxlength 100, maxlines 0, trim) with labelkey='Subject'
		static public string Request_Subject{ get{return RequestLabelKdsMBLabel.K("Subject").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_Subject")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVARCHAR (100)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged();
					this.OnSubjectChanged();
				}
			}
		}
		/// Denotes the Request's Description column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Description'
		static public string Request_Description{ get{return RequestLabelKdsMBLabel.K("Description").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_Description")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVARCHAR(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged();
					this.OnDescriptionChanged();
				}
			}
		}
		/// Denotes the Request's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Request_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the Request's CurrentRequestStateHistoryID column with type link(nonnull, field RequestStateHistory.Id) with labelkey='Current State History'
		static public string Request_CurrentRequestStateHistoryID{ get{return RequestLabelKdsMBLabel.K("Current State History").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_CurrentRequestStateHistoryID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRequestStateHistoryID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid CurrentRequestStateHistoryID
		{
			get
			{
				return this._CurrentRequestStateHistoryID;
			}
			set
			{
				if ((this._CurrentRequestStateHistoryID != value))
				{
					if (this._CurrentRequestStateHistory.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentRequestStateHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentRequestStateHistoryID = value;
					this.SendPropertyChanged();
					this.OnCurrentRequestStateHistoryIDChanged();
				}
			}
		}
		/// Denotes the Request's RequestorID column with type link(nonnull, field Requestor.Id) with labelkey='Requestor'
		static public string Request_RequestorID{ get{return RequestLabelKdsMBLabel.K("Requestor").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_RequestorID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RequestorID
		{
			get
			{
				return this._RequestorID;
			}
			set
			{
				if ((this._RequestorID != value))
				{
					if (this._Requestor.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestorIDChanging(value);
					this.SendPropertyChanging();
					this._RequestorID = value;
					this.SendPropertyChanged();
					this.OnRequestorIDChanged();
				}
			}
		}
		/// Denotes the Request's UnitLocationID column with type link(field Location.Id) with labelkey='Unit'
		static public string Request_UnitLocationID{ get{return RequestLabelKdsMBLabel.K("Unit").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_UnitLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitLocationID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? UnitLocationID
		{
			get
			{
				return this._UnitLocationID;
			}
			set
			{
				if ((this._UnitLocationID != value))
				{
					if (this._UnitLocation.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitLocationIDChanging(value);
					this.SendPropertyChanging();
					this._UnitLocationID = value;
					this.SendPropertyChanged();
					this.OnUnitLocationIDChanged();
				}
			}
		}
		/// Denotes the Request's AccessCodeID column with type link(field AccessCode.Id) with labelkey='Access Code'
		static public string Request_AccessCodeID{ get{return RequestLabelKdsMBLabel.K("Access Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_AccessCodeID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessCodeID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? AccessCodeID
		{
			get
			{
				return this._AccessCodeID;
			}
			set
			{
				if ((this._AccessCodeID != value))
				{
					if (this._AccessCode.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessCodeIDChanging(value);
					this.SendPropertyChanging();
					this._AccessCodeID = value;
					this.SendPropertyChanged();
					this.OnAccessCodeIDChanged();
				}
			}
		}
		/// Denotes the Request's RequestPriorityID column with type link(field RequestPriority.Id) with labelkey='Priority'
		static public string Request_RequestPriorityID{ get{return RequestLabelKdsMBLabel.K("Priority").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_RequestPriorityID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPriorityID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? RequestPriorityID
		{
			get
			{
				return this._RequestPriorityID;
			}
			set
			{
				if ((this._RequestPriorityID != value))
				{
					if (this._RequestPriority.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestPriorityIDChanging(value);
					this.SendPropertyChanging();
					this._RequestPriorityID = value;
					this.SendPropertyChanged();
					this.OnRequestPriorityIDChanged();
				}
			}
		}
		/// Denotes the Request's SelectPrintFlag column with type bool(nonnull) with labelkey='Select for Printing'
		static public string Request_SelectPrintFlag{ get{return RequestLabelKdsMBLabel.K("Select for Printing").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_SelectPrintFlag")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectPrintFlag", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool SelectPrintFlag
		{
			get
			{
				return this._SelectPrintFlag;
			}
			set
			{
				if ((this._SelectPrintFlag != value))
				{
					this.OnSelectPrintFlagChanging(value);
					this.SendPropertyChanging();
					this._SelectPrintFlag = value;
					this.SendPropertyChanged();
					this.OnSelectPrintFlagChanged();
				}
			}
		}
		/// Denotes the Request's LastRequestorAcknowledgementDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='LastRequestorAcknowledgementDate'
		static public string Request_LastRequestorAcknowledgementDate{ get{return RequestLabelKdsMBLabel.K("LastRequestorAcknowledgementDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_LastRequestorAcknowledgementDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequestorAcknowledgementDate", DbType="DATETIME")]
		public System.DateTime? LastRequestorAcknowledgementDate
		{
			get
			{
				return this._LastRequestorAcknowledgementDate;
			}
			set
			{
				if ((this._LastRequestorAcknowledgementDate != value))
				{
					this.OnLastRequestorAcknowledgementDateChanging(value);
					this.SendPropertyChanging();
					this._LastRequestorAcknowledgementDate = value;
					this.SendPropertyChanged();
					this.OnLastRequestorAcknowledgementDateChanged();
				}
			}
		}
		/// Denotes the Request's LastRequestorAcknowledgementError column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='LastRequestorAcknowledgementError'
		static public string Request_LastRequestorAcknowledgementError{ get{return RequestLabelKdsMBLabel.K("LastRequestorAcknowledgementError").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Request),Name="Request_LastRequestorAcknowledgementError")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequestorAcknowledgementError", DbType="NVARCHAR(MAX)")]
		public string LastRequestorAcknowledgementError
		{
			get
			{
				return this._LastRequestorAcknowledgementError;
			}
			set
			{
				if ((this._LastRequestorAcknowledgementError != value))
				{
					this.OnLastRequestorAcknowledgementErrorChanging(value);
					this.SendPropertyChanging();
					this._LastRequestorAcknowledgementError = value;
					this.SendPropertyChanged();
					this.OnLastRequestorAcknowledgementErrorChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestAssignment", Storage="_RequestAssignmentRequest", ThisKey="Id", OtherKey="RequestID")]
		public EntitySet<RequestAssignment> RequestAssignmentRequest
		{
			get
			{
				return this._RequestAssignmentRequest;
			}
			set
			{
				this._RequestAssignmentRequest.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestAssignmentByAssignee", Storage="_RequestAssignmentByAssigneeRequest", ThisKey="Id", OtherKey="RequestID")]
		public EntitySet<RequestAssignmentByAssignee> RequestAssignmentByAssigneeRequest
		{
			get
			{
				return this._RequestAssignmentByAssigneeRequest;
			}
			set
			{
				this._RequestAssignmentByAssigneeRequest.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestStateHistory", Storage="_RequestStateHistoryRequest", ThisKey="Id", OtherKey="RequestID")]
		public EntitySet<RequestStateHistory> RequestStateHistoryRequest
		{
			get
			{
				return this._RequestStateHistoryRequest;
			}
			set
			{
				this._RequestStateHistoryRequest.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrentRequestStateHistory_Request", Storage="_CurrentRequestStateHistory", ThisKey="CurrentRequestStateHistoryID", OtherKey="Id", IsForeignKey=true)]
		public RequestStateHistory CurrentRequestStateHistory
		{
			get
			{
				return this._CurrentRequestStateHistory.Entity;
			}
			set
			{
				RequestStateHistory previousValue = this._CurrentRequestStateHistory.Entity;
				if (((previousValue != value)
							|| (this._CurrentRequestStateHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrentRequestStateHistory.Entity = null;
						previousValue.RequestCurrentRequestStateHistory.Remove(this);
					}
					this._CurrentRequestStateHistory.Entity = value;
					if ((value != null))
					{
						value.RequestCurrentRequestStateHistory.Add(this);
						this._CurrentRequestStateHistoryID = value.Id;
					}
					else
					{
						this._CurrentRequestStateHistoryID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requestor_Request", Storage="_Requestor", ThisKey="RequestorID", OtherKey="Id", IsForeignKey=true)]
		public Requestor Requestor
		{
			get
			{
				return this._Requestor.Entity;
			}
			set
			{
				Requestor previousValue = this._Requestor.Entity;
				if (((previousValue != value)
							|| (this._Requestor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requestor.Entity = null;
						previousValue.RequestRequestor.Remove(this);
					}
					this._Requestor.Entity = value;
					if ((value != null))
					{
						value.RequestRequestor.Add(this);
						this._RequestorID = value.Id;
					}
					else
					{
						this._RequestorID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitLocation_Request", Storage="_UnitLocation", ThisKey="UnitLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location UnitLocation
		{
			get
			{
				return this._UnitLocation.Entity;
			}
			set
			{
				Location previousValue = this._UnitLocation.Entity;
				if (((previousValue != value)
							|| (this._UnitLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitLocation.Entity = null;
						previousValue.RequestUnitLocation.Remove(this);
					}
					this._UnitLocation.Entity = value;
					if ((value != null))
					{
						value.RequestUnitLocation.Add(this);
						this._UnitLocationID = value.Id;
					}
					else
					{
						this._UnitLocationID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessCode_Request", Storage="_AccessCode", ThisKey="AccessCodeID", OtherKey="Id", IsForeignKey=true)]
		public AccessCode AccessCode
		{
			get
			{
				return this._AccessCode.Entity;
			}
			set
			{
				AccessCode previousValue = this._AccessCode.Entity;
				if (((previousValue != value)
							|| (this._AccessCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessCode.Entity = null;
						previousValue.RequestAccessCode.Remove(this);
					}
					this._AccessCode.Entity = value;
					if ((value != null))
					{
						value.RequestAccessCode.Add(this);
						this._AccessCodeID = value.Id;
					}
					else
					{
						this._AccessCodeID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPriority_Request", Storage="_RequestPriority", ThisKey="RequestPriorityID", OtherKey="Id", IsForeignKey=true)]
		public RequestPriority RequestPriority
		{
			get
			{
				return this._RequestPriority.Entity;
			}
			set
			{
				RequestPriority previousValue = this._RequestPriority.Entity;
				if (((previousValue != value)
							|| (this._RequestPriority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestPriority.Entity = null;
						previousValue.RequestRequestPriority.Remove(this);
					}
					this._RequestPriority.Entity = value;
					if ((value != null))
					{
						value.RequestRequestPriority.Add(this);
						this._RequestPriorityID = value.Id;
					}
					else
					{
						this._RequestPriorityID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestAssignmentRequest(RequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		private void detach_RequestAssignmentRequest(RequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}

		private void attach_RequestAssignmentByAssigneeRequest(RequestAssignmentByAssignee entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		private void detach_RequestAssignmentByAssigneeRequest(RequestAssignmentByAssignee entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}

		private void attach_RequestStateHistoryRequest(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		private void detach_RequestStateHistoryRequest(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Contact with labelkey='Contact'
		static public string ContactLabelKey { get{return RequestLabelKdsMBLabel.K("Contact").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Comment;
		private string _BusinessPhone;
		private string _FaxPhone;
		private string _HomePhone;
		private string _PagerPhone;
		private string _MobilePhone;
		private string _Email;
		private string _AlternateEmail;
		private string _WebURL;
		private System.Guid? _LDAPGuid;
		private System.Guid? _LocationID;
		private int? _PreferredLanguage;
		private EntitySet<RequestAssignee> _RequestAssigneeContact;
		private EntitySet<RequestAssignmentByAssignee> _RequestAssignmentByAssigneeContact;
		private EntitySet<Requestor> _RequestorContact;
		private EntitySet<User> _UserContact;
		private EntityRef<Location> _Location;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnBusinessPhoneChanging(string value);
	partial void OnBusinessPhoneChanged();
	partial void OnFaxPhoneChanging(string value);
	partial void OnFaxPhoneChanged();
	partial void OnHomePhoneChanging(string value);
	partial void OnHomePhoneChanged();
	partial void OnPagerPhoneChanging(string value);
	partial void OnPagerPhoneChanged();
	partial void OnMobilePhoneChanging(string value);
	partial void OnMobilePhoneChanged();
	partial void OnEmailChanging(string value);
	partial void OnEmailChanged();
	partial void OnAlternateEmailChanging(string value);
	partial void OnAlternateEmailChanged();
	partial void OnWebURLChanging(string value);
	partial void OnWebURLChanged();
	partial void OnLDAPGuidChanging(System.Guid? value);
	partial void OnLDAPGuidChanged();
	partial void OnLocationIDChanging(System.Guid? value);
	partial void OnLocationIDChanged();
	partial void OnPreferredLanguageChanging(int? value);
	partial void OnPreferredLanguageChanged();
	#endregion

		public Contact()
		{
			this._RequestAssigneeContact = new EntitySet<RequestAssignee>(new Action<RequestAssignee>(this.attach_RequestAssigneeContact), new Action<RequestAssignee>(this.detach_RequestAssigneeContact));
			this._RequestAssignmentByAssigneeContact = new EntitySet<RequestAssignmentByAssignee>(new Action<RequestAssignmentByAssignee>(this.attach_RequestAssignmentByAssigneeContact), new Action<RequestAssignmentByAssignee>(this.detach_RequestAssignmentByAssigneeContact));
			this._RequestorContact = new EntitySet<Requestor>(new Action<Requestor>(this.attach_RequestorContact), new Action<Requestor>(this.detach_RequestorContact));
			this._UserContact = new EntitySet<User>(new Action<User>(this.attach_UserContact), new Action<User>(this.detach_UserContact));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		/// Denotes the Contact's Id column with type id(nonnull) with labelkey='Id'
		static public string Contact_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Contact's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string Contact_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the Contact's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string Contact_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the Contact's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Contact_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the Contact's BusinessPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='BusinessPhone'
		static public string Contact_BusinessPhone{ get{return RequestLabelKdsMBLabel.K("BusinessPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_BusinessPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPhone", DbType="NVARCHAR (50)")]
		public string BusinessPhone
		{
			get
			{
				return this._BusinessPhone;
			}
			set
			{
				if ((this._BusinessPhone != value))
				{
					this.OnBusinessPhoneChanging(value);
					this.SendPropertyChanging();
					this._BusinessPhone = value;
					this.SendPropertyChanged();
					this.OnBusinessPhoneChanged();
				}
			}
		}
		/// Denotes the Contact's FaxPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='FaxPhone'
		static public string Contact_FaxPhone{ get{return RequestLabelKdsMBLabel.K("FaxPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_FaxPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxPhone", DbType="NVARCHAR (50)")]
		public string FaxPhone
		{
			get
			{
				return this._FaxPhone;
			}
			set
			{
				if ((this._FaxPhone != value))
				{
					this.OnFaxPhoneChanging(value);
					this.SendPropertyChanging();
					this._FaxPhone = value;
					this.SendPropertyChanged();
					this.OnFaxPhoneChanged();
				}
			}
		}
		/// Denotes the Contact's HomePhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='HomePhone'
		static public string Contact_HomePhone{ get{return RequestLabelKdsMBLabel.K("HomePhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_HomePhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVARCHAR (50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged();
					this.OnHomePhoneChanged();
				}
			}
		}
		/// Denotes the Contact's PagerPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='PagerPhone'
		static public string Contact_PagerPhone{ get{return RequestLabelKdsMBLabel.K("PagerPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_PagerPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagerPhone", DbType="NVARCHAR (50)")]
		public string PagerPhone
		{
			get
			{
				return this._PagerPhone;
			}
			set
			{
				if ((this._PagerPhone != value))
				{
					this.OnPagerPhoneChanging(value);
					this.SendPropertyChanging();
					this._PagerPhone = value;
					this.SendPropertyChanged();
					this.OnPagerPhoneChanged();
				}
			}
		}
		/// Denotes the Contact's MobilePhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='MobilePhone'
		static public string Contact_MobilePhone{ get{return RequestLabelKdsMBLabel.K("MobilePhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_MobilePhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVARCHAR (50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged();
					this.OnMobilePhoneChanged();
				}
			}
		}
		/// Denotes the Contact's Email column with type string(minlength 1, maxlength 128, maxlines 0, trim) with labelkey='Email'
		static public string Contact_Email{ get{return RequestLabelKdsMBLabel.K("Email").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_Email")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVARCHAR (128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged();
					this.OnEmailChanged();
				}
			}
		}
		/// Denotes the Contact's AlternateEmail column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='Alternate Email'
		static public string Contact_AlternateEmail{ get{return RequestLabelKdsMBLabel.K("Alternate Email").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_AlternateEmail")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail", DbType="NVARCHAR(MAX)")]
		public string AlternateEmail
		{
			get
			{
				return this._AlternateEmail;
			}
			set
			{
				if ((this._AlternateEmail != value))
				{
					this.OnAlternateEmailChanging(value);
					this.SendPropertyChanging();
					this._AlternateEmail = value;
					this.SendPropertyChanged();
					this.OnAlternateEmailChanged();
				}
			}
		}
		/// Denotes the Contact's WebURL column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='WebURL'
		static public string Contact_WebURL{ get{return RequestLabelKdsMBLabel.K("WebURL").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_WebURL")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebURL", DbType="NVARCHAR(MAX)")]
		public string WebURL
		{
			get
			{
				return this._WebURL;
			}
			set
			{
				if ((this._WebURL != value))
				{
					this.OnWebURLChanging(value);
					this.SendPropertyChanging();
					this._WebURL = value;
					this.SendPropertyChanged();
					this.OnWebURLChanged();
				}
			}
		}
		/// Denotes the Contact's LDAPGuid column with type id with labelkey='AD Reference'
		static public string Contact_LDAPGuid{ get{return RequestLabelKdsMBLabel.K("AD Reference").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_LDAPGuid")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDAPGuid", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? LDAPGuid
		{
			get
			{
				return this._LDAPGuid;
			}
			set
			{
				if ((this._LDAPGuid != value))
				{
					this.OnLDAPGuidChanging(value);
					this.SendPropertyChanging();
					this._LDAPGuid = value;
					this.SendPropertyChanged();
					this.OnLDAPGuidChanged();
				}
			}
		}
		/// Denotes the Contact's LocationID column with type link(field Location.Id) with labelkey='Location'
		static public string Contact_LocationID{ get{return RequestLabelKdsMBLabel.K("Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_LocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged();
					this.OnLocationIDChanged();
				}
			}
		}
		/// Denotes the Contact's PreferredLanguage column with type integer(32) with labelkey='PreferredLanguage'
		static public string Contact_PreferredLanguage{ get{return RequestLabelKdsMBLabel.K("PreferredLanguage").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Contact),Name="Contact_PreferredLanguage")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredLanguage", DbType="INT")]
		public int? PreferredLanguage
		{
			get
			{
				return this._PreferredLanguage;
			}
			set
			{
				if ((this._PreferredLanguage != value))
				{
					this.OnPreferredLanguageChanging(value);
					this.SendPropertyChanging();
					this._PreferredLanguage = value;
					this.SendPropertyChanged();
					this.OnPreferredLanguageChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_RequestAssignee", Storage="_RequestAssigneeContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<RequestAssignee> RequestAssigneeContact
		{
			get
			{
				return this._RequestAssigneeContact;
			}
			set
			{
				this._RequestAssigneeContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_RequestAssignmentByAssignee", Storage="_RequestAssignmentByAssigneeContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<RequestAssignmentByAssignee> RequestAssignmentByAssigneeContact
		{
			get
			{
				return this._RequestAssignmentByAssigneeContact;
			}
			set
			{
				this._RequestAssignmentByAssigneeContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Requestor", Storage="_RequestorContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<Requestor> RequestorContact
		{
			get
			{
				return this._RequestorContact;
			}
			set
			{
				this._RequestorContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_UserContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<User> UserContact
		{
			get
			{
				return this._UserContact;
			}
			set
			{
				this._UserContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_Location", ThisKey="LocationID", OtherKey="Id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value)
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.ContactLocation.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.ContactLocation.Add(this);
						this._LocationID = value.Id;
					}
					else
					{
						this._LocationID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestAssigneeContact(RequestAssignee entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		private void detach_RequestAssigneeContact(RequestAssignee entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}

		private void attach_RequestAssignmentByAssigneeContact(RequestAssignmentByAssignee entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		private void detach_RequestAssignmentByAssigneeContact(RequestAssignmentByAssignee entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}

		private void attach_RequestorContact(Requestor entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		private void detach_RequestorContact(Requestor entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}

		private void attach_UserContact(User entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		private void detach_UserContact(User entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStateHistory")]
	public partial class RequestStateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestStateHistory with labelkey='Request State History'
		static public string RequestStateHistoryLabelKey { get{return RequestLabelKdsMBLabel.K("Request State History").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _RequestID;
		private System.DateTime _EffectiveDate;
		private System.Guid _Id;
		private string _Comment;
		private System.DateTime _EntryDate;
		private System.Guid? _UserID;
		private bool _EffectiveDateReadonly;
		private System.Guid _RequestStateID;
		private System.Guid? _RequestStateHistoryStatusID;
		private string _CommentToRequestor;
		private System.DateTime? _PredictedCloseDate;
		private EntitySet<Request> _RequestCurrentRequestStateHistory;
		private EntityRef<User> _User;
		private EntityRef<Request> _Request;
		private EntityRef<RequestState> _RequestState;
		private EntityRef<RequestStateHistoryStatus> _RequestStateHistoryStatus;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnRequestIDChanging(System.Guid value);
	partial void OnRequestIDChanged();
	partial void OnEffectiveDateChanging(System.DateTime value);
	partial void OnEffectiveDateChanged();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnEntryDateChanging(System.DateTime value);
	partial void OnEntryDateChanged();
	partial void OnUserIDChanging(System.Guid? value);
	partial void OnUserIDChanged();
	partial void OnEffectiveDateReadonlyChanging(bool value);
	partial void OnEffectiveDateReadonlyChanged();
	partial void OnRequestStateIDChanging(System.Guid value);
	partial void OnRequestStateIDChanged();
	partial void OnRequestStateHistoryStatusIDChanging(System.Guid? value);
	partial void OnRequestStateHistoryStatusIDChanged();
	partial void OnCommentToRequestorChanging(string value);
	partial void OnCommentToRequestorChanged();
	partial void OnPredictedCloseDateChanging(System.DateTime? value);
	partial void OnPredictedCloseDateChanged();
	#endregion

		public RequestStateHistory()
		{
			this._RequestCurrentRequestStateHistory = new EntitySet<Request>(new Action<Request>(this.attach_RequestCurrentRequestStateHistory), new Action<Request>(this.detach_RequestCurrentRequestStateHistory));
			this._User = default(EntityRef<User>);
			this._Request = default(EntityRef<Request>);
			this._RequestState = default(EntityRef<RequestState>);
			this._RequestStateHistoryStatus = default(EntityRef<RequestStateHistoryStatus>);
			OnCreated();
		}
		/// Denotes the RequestStateHistory's RequestID column with type link(nonnull, field Request.Id) with labelkey='Request'
		static public string RequestStateHistory_RequestID{ get{return RequestLabelKdsMBLabel.K("Request").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_RequestID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged();
					this.OnRequestIDChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's EffectiveDate column with type datetime(nonnull, (min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='EffectiveDate'
		static public string RequestStateHistory_EffectiveDate{ get{return RequestLabelKdsMBLabel.K("EffectiveDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_EffectiveDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DATETIME", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged();
					this.OnEffectiveDateChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestStateHistory_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string RequestStateHistory_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's EntryDate column with type datetime(nonnull, (min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='EntryDate'
		static public string RequestStateHistory_EntryDate{ get{return RequestLabelKdsMBLabel.K("EntryDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_EntryDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DATETIME", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged();
					this.OnEntryDateChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's UserID column with type link(field User.Id) with labelkey='User'
		static public string RequestStateHistory_UserID{ get{return RequestLabelKdsMBLabel.K("User").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_UserID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged();
					this.OnUserIDChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's EffectiveDateReadonly column with type bool(nonnull) with labelkey='EffectiveDateReadonly'
		static public string RequestStateHistory_EffectiveDateReadonly{ get{return RequestLabelKdsMBLabel.K("EffectiveDateReadonly").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_EffectiveDateReadonly")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDateReadonly", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool EffectiveDateReadonly
		{
			get
			{
				return this._EffectiveDateReadonly;
			}
			set
			{
				if ((this._EffectiveDateReadonly != value))
				{
					this.OnEffectiveDateReadonlyChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDateReadonly = value;
					this.SendPropertyChanged();
					this.OnEffectiveDateReadonlyChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's RequestStateID column with type link(nonnull, field RequestState.Id) with labelkey='State'
		static public string RequestStateHistory_RequestStateID{ get{return RequestLabelKdsMBLabel.K("State").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_RequestStateID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStateID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid RequestStateID
		{
			get
			{
				return this._RequestStateID;
			}
			set
			{
				if ((this._RequestStateID != value))
				{
					if (this._RequestState.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStateIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStateID = value;
					this.SendPropertyChanged();
					this.OnRequestStateIDChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's RequestStateHistoryStatusID column with type link(field RequestStateHistoryStatus.Id) with labelkey='Status'
		static public string RequestStateHistory_RequestStateHistoryStatusID{ get{return RequestLabelKdsMBLabel.K("Status").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_RequestStateHistoryStatusID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStateHistoryStatusID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? RequestStateHistoryStatusID
		{
			get
			{
				return this._RequestStateHistoryStatusID;
			}
			set
			{
				if ((this._RequestStateHistoryStatusID != value))
				{
					if (this._RequestStateHistoryStatus.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStateHistoryStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStateHistoryStatusID = value;
					this.SendPropertyChanged();
					this.OnRequestStateHistoryStatusIDChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's CommentToRequestor column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment To Requestor'
		static public string RequestStateHistory_CommentToRequestor{ get{return RequestLabelKdsMBLabel.K("Comment To Requestor").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_CommentToRequestor")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentToRequestor", DbType="NVARCHAR(MAX)")]
		public string CommentToRequestor
		{
			get
			{
				return this._CommentToRequestor;
			}
			set
			{
				if ((this._CommentToRequestor != value))
				{
					this.OnCommentToRequestorChanging(value);
					this.SendPropertyChanging();
					this._CommentToRequestor = value;
					this.SendPropertyChanged();
					this.OnCommentToRequestorChanged();
				}
			}
		}
		/// Denotes the RequestStateHistory's PredictedCloseDate column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='PredictedCloseDate'
		static public string RequestStateHistory_PredictedCloseDate{ get{return RequestLabelKdsMBLabel.K("PredictedCloseDate").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistory),Name="RequestStateHistory_PredictedCloseDate")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredictedCloseDate", DbType="DATETIME")]
		public System.DateTime? PredictedCloseDate
		{
			get
			{
				return this._PredictedCloseDate;
			}
			set
			{
				if ((this._PredictedCloseDate != value))
				{
					this.OnPredictedCloseDateChanging(value);
					this.SendPropertyChanging();
					this._PredictedCloseDate = value;
					this.SendPropertyChanged();
					this.OnPredictedCloseDateChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStateHistory_Request", Storage="_RequestCurrentRequestStateHistory", ThisKey="Id", OtherKey="CurrentRequestStateHistoryID")]
		public EntitySet<Request> RequestCurrentRequestStateHistory
		{
			get
			{
				return this._RequestCurrentRequestStateHistory;
			}
			set
			{
				this._RequestCurrentRequestStateHistory.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestStateHistory", Storage="_User", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value)
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RequestStateHistoryUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RequestStateHistoryUser.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestStateHistory", Storage="_Request", ThisKey="RequestID", OtherKey="Id", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value)
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestStateHistoryRequest.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestStateHistoryRequest.Add(this);
						this._RequestID = value.Id;
					}
					else
					{
						this._RequestID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestState_RequestStateHistory", Storage="_RequestState", ThisKey="RequestStateID", OtherKey="Id", IsForeignKey=true)]
		public RequestState RequestState
		{
			get
			{
				return this._RequestState.Entity;
			}
			set
			{
				RequestState previousValue = this._RequestState.Entity;
				if (((previousValue != value)
							|| (this._RequestState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestState.Entity = null;
						previousValue.RequestStateHistoryRequestState.Remove(this);
					}
					this._RequestState.Entity = value;
					if ((value != null))
					{
						value.RequestStateHistoryRequestState.Add(this);
						this._RequestStateID = value.Id;
					}
					else
					{
						this._RequestStateID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStateHistoryStatus_RequestStateHistory", Storage="_RequestStateHistoryStatus", ThisKey="RequestStateHistoryStatusID", OtherKey="Id", IsForeignKey=true)]
		public RequestStateHistoryStatus RequestStateHistoryStatus
		{
			get
			{
				return this._RequestStateHistoryStatus.Entity;
			}
			set
			{
				RequestStateHistoryStatus previousValue = this._RequestStateHistoryStatus.Entity;
				if (((previousValue != value)
							|| (this._RequestStateHistoryStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestStateHistoryStatus.Entity = null;
						previousValue.RequestStateHistoryRequestStateHistoryStatus.Remove(this);
					}
					this._RequestStateHistoryStatus.Entity = value;
					if ((value != null))
					{
						value.RequestStateHistoryRequestStateHistoryStatus.Add(this);
						this._RequestStateHistoryStatusID = value.Id;
					}
					else
					{
						this._RequestStateHistoryStatusID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestCurrentRequestStateHistory(Request entity)
		{
			this.SendPropertyChanging();
			entity.CurrentRequestStateHistory = this;
		}
		private void detach_RequestCurrentRequestStateHistory(Request entity)
		{
			this.SendPropertyChanging();
			entity.CurrentRequestStateHistory = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requestor")]
	public partial class Requestor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Requestor with labelkey='Requestor'
		static public string RequestorLabelKey { get{return RequestLabelKdsMBLabel.K("Requestor").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.DateTime? _Hidden;
		private System.Guid _ContactID;
		private string _Comment;
		private bool _ReceiveAcknowledgement;
		private EntitySet<Request> _RequestRequestor;
		private EntityRef<Contact> _Contact;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnContactIDChanging(System.Guid value);
	partial void OnContactIDChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnReceiveAcknowledgementChanging(bool value);
	partial void OnReceiveAcknowledgementChanged();
	#endregion

		public Requestor()
		{
			this._RequestRequestor = new EntitySet<Request>(new Action<Request>(this.attach_RequestRequestor), new Action<Request>(this.detach_RequestRequestor));
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		/// Denotes the Requestor's Id column with type id(nonnull) with labelkey='Id'
		static public string Requestor_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Requestor),Name="Requestor_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Requestor's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string Requestor_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Requestor),Name="Requestor_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the Requestor's ContactID column with type link(nonnull, field Contact.Id) with labelkey='Contact'
		static public string Requestor_ContactID{ get{return RequestLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Requestor),Name="Requestor_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged();
					this.OnContactIDChanged();
				}
			}
		}
		/// Denotes the Requestor's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Requestor_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Requestor),Name="Requestor_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the Requestor's ReceiveAcknowledgement column with type bool(nonnull) with labelkey='ReceiveAcknowledgement'
		static public string Requestor_ReceiveAcknowledgement{ get{return RequestLabelKdsMBLabel.K("ReceiveAcknowledgement").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Requestor),Name="Requestor_ReceiveAcknowledgement")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveAcknowledgement", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool ReceiveAcknowledgement
		{
			get
			{
				return this._ReceiveAcknowledgement;
			}
			set
			{
				if ((this._ReceiveAcknowledgement != value))
				{
					this.OnReceiveAcknowledgementChanging(value);
					this.SendPropertyChanging();
					this._ReceiveAcknowledgement = value;
					this.SendPropertyChanged();
					this.OnReceiveAcknowledgementChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requestor_Request", Storage="_RequestRequestor", ThisKey="Id", OtherKey="RequestorID")]
		public EntitySet<Request> RequestRequestor
		{
			get
			{
				return this._RequestRequestor;
			}
			set
			{
				this._RequestRequestor.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Requestor", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value)
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.RequestorContact.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.RequestorContact.Add(this);
						this._ContactID = value.Id;
					}
					else
					{
						this._ContactID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestRequestor(Request entity)
		{
			this.SendPropertyChanging();
			entity.Requestor = this;
		}
		private void detach_RequestRequestor(Request entity)
		{
			this.SendPropertyChanging();
			entity.Requestor = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Location with labelkey='Location'
		static public string LocationLabelKey { get{return RequestLabelKdsMBLabel.K("Location").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private string _Desc;
		private string _Comment;
		private System.Data.Linq.Binary _GISLocation;
		private byte? _GISZoom;
		private EntitySet<Request> _RequestUnitLocation;
		private EntitySet<Contact> _ContactLocation;
		private EntitySet<RelativeLocation> _RelativeLocationContainingLocation;
		private EntityRef<RelativeLocation> _DerivedRelativeLocation;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnGISLocationChanging(System.Data.Linq.Binary value);
	partial void OnGISLocationChanged();
	partial void OnGISZoomChanging(byte? value);
	partial void OnGISZoomChanged();
	#endregion

		public Location()
		{
			this._RequestUnitLocation = new EntitySet<Request>(new Action<Request>(this.attach_RequestUnitLocation), new Action<Request>(this.detach_RequestUnitLocation));
			this._ContactLocation = new EntitySet<Contact>(new Action<Contact>(this.attach_ContactLocation), new Action<Contact>(this.detach_ContactLocation));
			this._RelativeLocationContainingLocation = new EntitySet<RelativeLocation>(new Action<RelativeLocation>(this.attach_RelativeLocationContainingLocation), new Action<RelativeLocation>(this.detach_RelativeLocationContainingLocation));
			this._DerivedRelativeLocation = default(EntityRef<RelativeLocation>);
			OnCreated();
		}
		/// Denotes the Location's Id column with type id(nonnull) with labelkey='Id'
		static public string Location_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Location),Name="Location_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Location's Code column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='Path'
		static public string Location_Code{ get{return RequestLabelKdsMBLabel.K("Path").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Location),Name="Location_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the Location's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string Location_Desc{ get{return RequestLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Location),Name="Location_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the Location's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Location_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Location),Name="Location_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the Location's GISLocation column with type geography with labelkey='GISLocation'
		static public string Location_GISLocation{ get{return RequestLabelKdsMBLabel.K("GISLocation").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Location),Name="Location_GISLocation")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GISLocation", DbType="VARBINARY(MAX)")]
		public System.Data.Linq.Binary GISLocation
		{
			get
			{
				return this._GISLocation;
			}
			set
			{
				if ((this._GISLocation != value))
				{
					this.OnGISLocationChanging(value);
					this.SendPropertyChanging();
					this._GISLocation = value;
					this.SendPropertyChanged();
					this.OnGISLocationChanged();
				}
			}
		}
		/// Denotes the Location's GISZoom column with type integer(min 0, max 20) with labelkey='GISZoom'
		static public string Location_GISZoom{ get{return RequestLabelKdsMBLabel.K("GISZoom").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.Location),Name="Location_GISZoom")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GISZoom", DbType="TINYINT")]
		public byte? GISZoom
		{
			get
			{
				return this._GISZoom;
			}
			set
			{
				if ((this._GISZoom != value))
				{
					this.OnGISZoomChanging(value);
					this.SendPropertyChanging();
					this._GISZoom = value;
					this.SendPropertyChanged();
					this.OnGISZoomChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Request", Storage="_RequestUnitLocation", ThisKey="Id", OtherKey="UnitLocationID")]
		public EntitySet<Request> RequestUnitLocation
		{
			get
			{
				return this._RequestUnitLocation;
			}
			set
			{
				this._RequestUnitLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_ContactLocation", ThisKey="Id", OtherKey="LocationID")]
		public EntitySet<Contact> ContactLocation
		{
			get
			{
				return this._ContactLocation;
			}
			set
			{
				this._ContactLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_RelativeLocation", Storage="_RelativeLocationContainingLocation", ThisKey="Id", OtherKey="ContainingLocationID")]
		public EntitySet<RelativeLocation> RelativeLocationContainingLocation
		{
			get
			{
				return this._RelativeLocationContainingLocation;
			}
			set
			{
				this._RelativeLocationContainingLocation.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_DerivedRelativeLocation", Storage="_DerivedRelativeLocation", ThisKey="Id", OtherKey="LocationID", IsUnique=true, IsForeignKey=false)]
		public RelativeLocation DerivedRelativeLocation
		{
			get
			{
				return this._DerivedRelativeLocation.Entity;
			}
			set
			{
				RelativeLocation previousValue = this._DerivedRelativeLocation.Entity;
				if (((previousValue != value)
							|| (this._DerivedRelativeLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DerivedRelativeLocation.Entity = null;
						previousValue.BaseLocation = null;
					}
					this._DerivedRelativeLocation.Entity = value;
					if ((value != null))
					{
						value.BaseLocation = this;
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestUnitLocation(Request entity)
		{
			this.SendPropertyChanging();
			entity.UnitLocation = this;
		}
		private void detach_RequestUnitLocation(Request entity)
		{
			this.SendPropertyChanging();
			entity.UnitLocation = null;
		}

		private void attach_ContactLocation(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		private void detach_ContactLocation(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}

		private void attach_RelativeLocationContainingLocation(RelativeLocation entity)
		{
			this.SendPropertyChanging();
			entity.ContainingLocation = this;
		}
		private void detach_RelativeLocationContainingLocation(RelativeLocation entity)
		{
			this.SendPropertyChanging();
			entity.ContainingLocation = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessCode")]
	public partial class AccessCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table AccessCode with labelkey='Access Code'
		static public string AccessCodeLabelKey { get{return RequestLabelKdsMBLabel.K("Access Code").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<Request> _RequestAccessCode;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public AccessCode()
		{
			this._RequestAccessCode = new EntitySet<Request>(new Action<Request>(this.attach_RequestAccessCode), new Action<Request>(this.detach_RequestAccessCode));
			OnCreated();
		}
		/// Denotes the AccessCode's Id column with type id(nonnull) with labelkey='Id'
		static public string AccessCode_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.AccessCode),Name="AccessCode_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the AccessCode's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string AccessCode_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.AccessCode),Name="AccessCode_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the AccessCode's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string AccessCode_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.AccessCode),Name="AccessCode_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the AccessCode's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string AccessCode_Desc{ get{return RequestLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.AccessCode),Name="AccessCode_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the AccessCode's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string AccessCode_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.AccessCode),Name="AccessCode_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessCode_Request", Storage="_RequestAccessCode", ThisKey="Id", OtherKey="AccessCodeID")]
		public EntitySet<Request> RequestAccessCode
		{
			get
			{
				return this._RequestAccessCode;
			}
			set
			{
				this._RequestAccessCode.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestAccessCode(Request entity)
		{
			this.SendPropertyChanging();
			entity.AccessCode = this;
		}
		private void detach_RequestAccessCode(Request entity)
		{
			this.SendPropertyChanging();
			entity.AccessCode = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestPriority")]
	public partial class RequestPriority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestPriority with labelkey='Request Priority'
		static public string RequestPriorityLabelKey { get{return RequestLabelKdsMBLabel.K("Request Priority").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private short _Rank;
		private EntitySet<Request> _RequestRequestPriority;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnRankChanging(short value);
	partial void OnRankChanged();
	#endregion

		public RequestPriority()
		{
			this._RequestRequestPriority = new EntitySet<Request>(new Action<Request>(this.attach_RequestRequestPriority), new Action<Request>(this.detach_RequestRequestPriority));
			OnCreated();
		}
		/// Denotes the RequestPriority's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestPriority_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestPriority),Name="RequestPriority_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestPriority's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string RequestPriority_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestPriority),Name="RequestPriority_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the RequestPriority's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string RequestPriority_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestPriority),Name="RequestPriority_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the RequestPriority's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string RequestPriority_Desc{ get{return RequestLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestPriority),Name="RequestPriority_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the RequestPriority's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string RequestPriority_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestPriority),Name="RequestPriority_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the RequestPriority's Rank column with type integer(nonnull, 16) with labelkey='Rank'
		static public string RequestPriority_Rank{ get{return RequestLabelKdsMBLabel.K("Rank").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestPriority),Name="RequestPriority_Rank")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="SMALLINT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged();
					this.OnRankChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPriority_Request", Storage="_RequestRequestPriority", ThisKey="Id", OtherKey="RequestPriorityID")]
		public EntitySet<Request> RequestRequestPriority
		{
			get
			{
				return this._RequestRequestPriority;
			}
			set
			{
				this._RequestRequestPriority.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestRequestPriority(Request entity)
		{
			this.SendPropertyChanging();
			entity.RequestPriority = this;
		}
		private void detach_RequestRequestPriority(Request entity)
		{
			this.SendPropertyChanging();
			entity.RequestPriority = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestedWorkOrder")]
	public partial class RequestedWorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestedWorkOrder with labelkey='RequestedWorkOrder'
		static public string RequestedWorkOrderLabelKey { get{return RequestLabelKdsMBLabel.K("RequestedWorkOrder").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public RequestedWorkOrder()
		{
			OnCreated();
		}
		/// Denotes the RequestedWorkOrder's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestedWorkOrder_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestedWorkOrder),Name="RequestedWorkOrder_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailRequest")]
	public partial class EmailRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table EmailRequest with labelkey='EmailRequest'
		static public string EmailRequestLabelKey { get{return RequestLabelKdsMBLabel.K("EmailRequest").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public EmailRequest()
		{
			OnCreated();
		}
		/// Denotes the EmailRequest's Id column with type id(nonnull) with labelkey='Id'
		static public string EmailRequest_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.EmailRequest),Name="EmailRequest_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestAssignmentByAssignee")]
	public partial class RequestAssignmentByAssignee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestAssignmentByAssignee with labelkey=''
		static public string RequestAssignmentByAssigneeLabelKey { get{return RequestLabelKdsMBLabel.K("").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid? _RequestAssignmentID;
		private System.Guid? _RequestID;
		private System.Guid? _ContactID;
		private EntityRef<RequestAssignment> _RequestAssignment;
		private EntityRef<Request> _Request;
		private EntityRef<Contact> _Contact;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnRequestAssignmentIDChanging(System.Guid? value);
	partial void OnRequestAssignmentIDChanged();
	partial void OnRequestIDChanging(System.Guid? value);
	partial void OnRequestIDChanged();
	partial void OnContactIDChanging(System.Guid? value);
	partial void OnContactIDChanged();
	#endregion

		public RequestAssignmentByAssignee()
		{
			this._RequestAssignment = default(EntityRef<RequestAssignment>);
			this._Request = default(EntityRef<Request>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		/// Denotes the RequestAssignmentByAssignee's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestAssignmentByAssignee_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignmentByAssignee),Name="RequestAssignmentByAssignee_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestAssignmentByAssignee's RequestAssignmentID column with type link(field RequestAssignment.Id) with labelkey='Assignment'
		static public string RequestAssignmentByAssignee_RequestAssignmentID{ get{return RequestLabelKdsMBLabel.K("Assignment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignmentByAssignee),Name="RequestAssignmentByAssignee_RequestAssignmentID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestAssignmentID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? RequestAssignmentID
		{
			get
			{
				return this._RequestAssignmentID;
			}
			set
			{
				if ((this._RequestAssignmentID != value))
				{
					if (this._RequestAssignment.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._RequestAssignmentID = value;
					this.SendPropertyChanged();
					this.OnRequestAssignmentIDChanged();
				}
			}
		}
		/// Denotes the RequestAssignmentByAssignee's RequestID column with type link(field Request.Id) with labelkey='Request'
		static public string RequestAssignmentByAssignee_RequestID{ get{return RequestLabelKdsMBLabel.K("Request").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignmentByAssignee),Name="RequestAssignmentByAssignee_RequestID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged();
					this.OnRequestIDChanged();
				}
			}
		}
		/// Denotes the RequestAssignmentByAssignee's ContactID column with type link(field Contact.Id) with labelkey='Contact'
		static public string RequestAssignmentByAssignee_ContactID{ get{return RequestLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestAssignmentByAssignee),Name="RequestAssignmentByAssignee_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged();
					this.OnContactIDChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestAssignment_RequestAssignmentByAssignee", Storage="_RequestAssignment", ThisKey="RequestAssignmentID", OtherKey="Id", IsForeignKey=true)]
		public RequestAssignment RequestAssignment
		{
			get
			{
				return this._RequestAssignment.Entity;
			}
			set
			{
				RequestAssignment previousValue = this._RequestAssignment.Entity;
				if (((previousValue != value)
							|| (this._RequestAssignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestAssignment.Entity = null;
						previousValue.RequestAssignmentByAssigneeRequestAssignment.Remove(this);
					}
					this._RequestAssignment.Entity = value;
					if ((value != null))
					{
						value.RequestAssignmentByAssigneeRequestAssignment.Add(this);
						this._RequestAssignmentID = value.Id;
					}
					else
					{
						this._RequestAssignmentID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestAssignmentByAssignee", Storage="_Request", ThisKey="RequestID", OtherKey="Id", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value)
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestAssignmentByAssigneeRequest.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestAssignmentByAssigneeRequest.Add(this);
						this._RequestID = value.Id;
					}
					else
					{
						this._RequestID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_RequestAssignmentByAssignee", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value)
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.RequestAssignmentByAssigneeContact.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.RequestAssignmentByAssigneeContact.Add(this);
						this._ContactID = value.Id;
					}
					else
					{
						this._ContactID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationContainment")]
	public partial class LocationContainment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table LocationContainment with labelkey='LocationContainment'
		static public string LocationContainmentLabelKey { get{return RequestLabelKdsMBLabel.K("LocationContainment").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public LocationContainment()
		{
			OnCreated();
		}
		/// Denotes the LocationContainment's Id column with type id(nonnull) with labelkey='Id'
		static public string LocationContainment_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.LocationContainment),Name="LocationContainment_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelativeLocation")]
	public partial class RelativeLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RelativeLocation with labelkey=''
		static public string RelativeLocationLabelKey { get{return RequestLabelKdsMBLabel.K("").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _ContainingLocationID;
		private string _Code;
		private System.Guid _Id;
		private System.DateTime? _Hidden;
		private string _ExternalTag;
		private System.Guid _LocationID;
		private EntityRef<Location> _ContainingLocation;
		private EntityRef<Location> _BaseLocation;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnContainingLocationIDChanging(System.Guid value);
	partial void OnContainingLocationIDChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnExternalTagChanging(string value);
	partial void OnExternalTagChanged();
	partial void OnLocationIDChanging(System.Guid value);
	partial void OnLocationIDChanged();
	#endregion

		public RelativeLocation()
		{
			this._ContainingLocation = default(EntityRef<Location>);
			this._BaseLocation = default(EntityRef<Location>);
			OnCreated();
		}
		/// Denotes the RelativeLocation's ContainingLocationID column with type link(nonnull, field Location.Id) with labelkey='Containing Location'
		static public string RelativeLocation_ContainingLocationID{ get{return RequestLabelKdsMBLabel.K("Containing Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RelativeLocation),Name="RelativeLocation_ContainingLocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainingLocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContainingLocationID
		{
			get
			{
				return this._ContainingLocationID;
			}
			set
			{
				if ((this._ContainingLocationID != value))
				{
					if (this._ContainingLocation.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContainingLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ContainingLocationID = value;
					this.SendPropertyChanged();
					this.OnContainingLocationIDChanged();
				}
			}
		}
		/// Denotes the RelativeLocation's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string RelativeLocation_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RelativeLocation),Name="RelativeLocation_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the RelativeLocation's Id column with type id(nonnull) with labelkey='Id'
		static public string RelativeLocation_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RelativeLocation),Name="RelativeLocation_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RelativeLocation's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string RelativeLocation_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RelativeLocation),Name="RelativeLocation_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the RelativeLocation's ExternalTag column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='External Tag'
		static public string RelativeLocation_ExternalTag{ get{return RequestLabelKdsMBLabel.K("External Tag").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RelativeLocation),Name="RelativeLocation_ExternalTag")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalTag", DbType="NVARCHAR (50)")]
		public string ExternalTag
		{
			get
			{
				return this._ExternalTag;
			}
			set
			{
				if ((this._ExternalTag != value))
				{
					this.OnExternalTagChanging(value);
					this.SendPropertyChanging();
					this._ExternalTag = value;
					this.SendPropertyChanged();
					this.OnExternalTagChanged();
				}
			}
		}
		/// Denotes the RelativeLocation's LocationID column with type link(nonnull, field Location.Id) with labelkey='Location'
		static public string RelativeLocation_LocationID{ get{return RequestLabelKdsMBLabel.K("Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RelativeLocation),Name="RelativeLocation_LocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._BaseLocation.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged();
					this.OnLocationIDChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainingLocation_RelativeLocation", Storage="_ContainingLocation", ThisKey="ContainingLocationID", OtherKey="Id", IsForeignKey=true)]
		public Location ContainingLocation
		{
			get
			{
				return this._ContainingLocation.Entity;
			}
			set
			{
				Location previousValue = this._ContainingLocation.Entity;
				if (((previousValue != value)
							|| (this._ContainingLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContainingLocation.Entity = null;
						previousValue.RelativeLocationContainingLocation.Remove(this);
					}
					this._ContainingLocation.Entity = value;
					if ((value != null))
					{
						value.RelativeLocationContainingLocation.Add(this);
						this._ContainingLocationID = value.Id;
					}
					else
					{
						this._ContainingLocationID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseLocation_RelativeLocation", Storage="_BaseLocation", ThisKey="LocationID", OtherKey="Id", IsForeignKey=true)]
		public Location BaseLocation
		{
			get
			{
				return this._BaseLocation.Entity;
			}
			set
			{
				Location previousValue = this._BaseLocation.Entity;
				if (((previousValue != value)
							|| (this._BaseLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaseLocation.Entity = null;
					}
					this._BaseLocation.Entity = value;
					if ((value != null))
					{
						this._LocationID = value.Id;
					}
					else
					{
						this._LocationID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table User with labelkey='User'
		static public string UserLabelKey { get{return RequestLabelKdsMBLabel.K("User").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _ContactID;
		private System.Guid _Id;
		private EntitySet<RequestStateHistory> _RequestStateHistoryUser;
		private EntityRef<Contact> _Contact;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnContactIDChanging(System.Guid value);
	partial void OnContactIDChanged();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public User()
		{
			this._RequestStateHistoryUser = new EntitySet<RequestStateHistory>(new Action<RequestStateHistory>(this.attach_RequestStateHistoryUser), new Action<RequestStateHistory>(this.detach_RequestStateHistoryUser));
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		/// Denotes the User's ContactID column with type link(nonnull, field Contact.Id) with labelkey='Contact'
		static public string User_ContactID{ get{return RequestLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.User),Name="User_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged();
					this.OnContactIDChanged();
				}
			}
		}
		/// Denotes the User's Id column with type id(nonnull) with labelkey='Id'
		static public string User_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.User),Name="User_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestStateHistory", Storage="_RequestStateHistoryUser", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<RequestStateHistory> RequestStateHistoryUser
		{
			get
			{
				return this._RequestStateHistoryUser;
			}
			set
			{
				this._RequestStateHistoryUser.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value)
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.UserContact.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.UserContact.Add(this);
						this._ContactID = value.Id;
					}
					else
					{
						this._ContactID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestStateHistoryUser(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		private void detach_RequestStateHistoryUser(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStateHistoryStatus")]
	public partial class RequestStateHistoryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table RequestStateHistoryStatus with labelkey='Request State History Status'
		static public string RequestStateHistoryStatusLabelKey { get{return RequestLabelKdsMBLabel.K("Request State History Status").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Desc;
		private string _Comment;
		private EntitySet<RequestStateHistory> _RequestStateHistoryRequestStateHistoryStatus;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public RequestStateHistoryStatus()
		{
			this._RequestStateHistoryRequestStateHistoryStatus = new EntitySet<RequestStateHistory>(new Action<RequestStateHistory>(this.attach_RequestStateHistoryRequestStateHistoryStatus), new Action<RequestStateHistory>(this.detach_RequestStateHistoryRequestStateHistoryStatus));
			OnCreated();
		}
		/// Denotes the RequestStateHistoryStatus's Id column with type id(nonnull) with labelkey='Id'
		static public string RequestStateHistoryStatus_Id{ get{return RequestLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistoryStatus),Name="RequestStateHistoryStatus_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the RequestStateHistoryStatus's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string RequestStateHistoryStatus_Code{ get{return RequestLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistoryStatus),Name="RequestStateHistoryStatus_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the RequestStateHistoryStatus's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string RequestStateHistoryStatus_Hidden{ get{return RequestLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistoryStatus),Name="RequestStateHistoryStatus_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the RequestStateHistoryStatus's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string RequestStateHistoryStatus_Desc{ get{return RequestLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistoryStatus),Name="RequestStateHistoryStatus_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the RequestStateHistoryStatus's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string RequestStateHistoryStatus_Comment{ get{return RequestLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(RequestEntities.RequestStateHistoryStatus),Name="RequestStateHistoryStatus_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStateHistoryStatus_RequestStateHistory", Storage="_RequestStateHistoryRequestStateHistoryStatus", ThisKey="Id", OtherKey="RequestStateHistoryStatusID")]
		public EntitySet<RequestStateHistory> RequestStateHistoryRequestStateHistoryStatus
		{
			get
			{
				return this._RequestStateHistoryRequestStateHistoryStatus;
			}
			set
			{
				this._RequestStateHistoryRequestStateHistoryStatus.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_RequestStateHistoryRequestStateHistoryStatus(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.RequestStateHistoryStatus = this;
		}
		private void detach_RequestStateHistoryRequestStateHistoryStatus(RequestStateHistory entity)
		{
			this.SendPropertyChanging();
			entity.RequestStateHistoryStatus = null;
		}
	}
	internal class RequestLabelKdsMBLabel : Thinkage.Libraries.Translation.GeneralKeyBuilder {
		const string LabelContext = "dsMBLabel";

		static RequestLabelKdsMBLabel Instance = new RequestLabelKdsMBLabel();
		protected RequestLabelKdsMBLabel() {
		}
		protected override Thinkage.Libraries.Translation.ContextReference GetContext() {
			return Thinkage.Libraries.Translation.ContextReference.New(LabelContext);
		}
		public static Thinkage.Libraries.Translation.Key K([Thinkage.Libraries.Translation.Context(LabelContext)]string s) {
			return Instance.BuildKey(s);
		}
	}
}
#pragma warning restore 1591

