


	
	
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//		Template file LINQGenerationTemplate.xml
//		Vault version 31
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Thinkage.MainBoss.WebAccess.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;

	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Master")]
	public partial class AuthenticationDataContext : System.Data.Linq.DataContext
	{
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void InsertPermission(AuthenticationEntities.Permission instance);
	partial void UpdatePermission(AuthenticationEntities.Permission instance);
	partial void DeletePermission(AuthenticationEntities.Permission instance);
	partial void InsertPrincipal(AuthenticationEntities.Principal instance);
	partial void UpdatePrincipal(AuthenticationEntities.Principal instance);
	partial void DeletePrincipal(AuthenticationEntities.Principal instance);
	partial void InsertRole(AuthenticationEntities.Role instance);
	partial void UpdateRole(AuthenticationEntities.Role instance);
	partial void DeleteRole(AuthenticationEntities.Role instance);
	partial void InsertUser(AuthenticationEntities.User instance);
	partial void UpdateUser(AuthenticationEntities.User instance);
	partial void DeleteUser(AuthenticationEntities.User instance);
	partial void InsertUserRole(AuthenticationEntities.UserRole instance);
	partial void UpdateUserRole(AuthenticationEntities.UserRole instance);
	partial void DeleteUserRole(AuthenticationEntities.UserRole instance);
	partial void InsertUserPermission(AuthenticationEntities.UserPermission instance);
	partial void UpdateUserPermission(AuthenticationEntities.UserPermission instance);
	partial void DeleteUserPermission(AuthenticationEntities.UserPermission instance);
	partial void InsertContact(AuthenticationEntities.Contact instance);
	partial void UpdateContact(AuthenticationEntities.Contact instance);
	partial void DeleteContact(AuthenticationEntities.Contact instance);
	partial void InsertLocation(AuthenticationEntities.Location instance);
	partial void UpdateLocation(AuthenticationEntities.Location instance);
	partial void DeleteLocation(AuthenticationEntities.Location instance);
	partial void InsertServiceConfiguration(AuthenticationEntities.ServiceConfiguration instance);
	partial void UpdateServiceConfiguration(AuthenticationEntities.ServiceConfiguration instance);
	partial void DeleteServiceConfiguration(AuthenticationEntities.ServiceConfiguration instance);
	partial void InsertRequestor(AuthenticationEntities.Requestor instance);
	partial void UpdateRequestor(AuthenticationEntities.Requestor instance);
	partial void DeleteRequestor(AuthenticationEntities.Requestor instance);
	#endregion

		public AuthenticationDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Master"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public AuthenticationDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public AuthenticationDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public AuthenticationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public AuthenticationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}
		public System.Data.Linq.Table<AuthenticationEntities.Permission> Permission
		{
			get
			{
				return this.GetTable<AuthenticationEntities.Permission>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.Principal> Principal
		{
			get
			{
				return this.GetTable<AuthenticationEntities.Principal>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.Role> Role
		{
			get
			{
				return this.GetTable<AuthenticationEntities.Role>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.User> User
		{
			get
			{
				return this.GetTable<AuthenticationEntities.User>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.UserRole> UserRole
		{
			get
			{
				return this.GetTable<AuthenticationEntities.UserRole>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.UserPermission> UserPermission
		{
			get
			{
				return this.GetTable<AuthenticationEntities.UserPermission>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.Contact> Contact
		{
			get
			{
				return this.GetTable<AuthenticationEntities.Contact>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.Location> Location
		{
			get
			{
				return this.GetTable<AuthenticationEntities.Location>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.ServiceConfiguration> ServiceConfiguration
		{
			get
			{
				return this.GetTable<AuthenticationEntities.ServiceConfiguration>();
			}
		}
		public System.Data.Linq.Table<AuthenticationEntities.Requestor> Requestor
		{
			get
			{
				return this.GetTable<AuthenticationEntities.Requestor>();
			}
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetDBVersion]", IsComposable=true)]
		public string _vgetDBVersion()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetDBServerVersion]", IsComposable=true)]
		public string _vgetDBServerVersion()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
  
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[_vgetPhonePrefix]", IsComposable=true)]
		public string _vgetPhonePrefix()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
}
namespace AuthenticationEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	using System.Runtime.CompilerServices;
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Permission with labelkey='Permission'
		static public string PermissionLabelKey { get{return AuthenticationLabelKdsMBLabel.K("Permission").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _PrincipalID;
		private string _PermissionPathPattern;
		private EntityRef<Principal> _Principal;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnPrincipalIDChanging(System.Guid value);
	partial void OnPrincipalIDChanged();
	partial void OnPermissionPathPatternChanging(string value);
	partial void OnPermissionPathPatternChanged();
	#endregion

		public Permission()
		{
			this._Principal = default(EntityRef<Principal>);
			OnCreated();
		}
		/// Denotes the Permission's Id column with type id(nonnull) with labelkey='Id'
		static public string Permission_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Permission),Name="Permission_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Permission's PrincipalID column with type link(nonnull, field Principal.Id) with labelkey=''
		static public string Permission_PrincipalID{ get{return AuthenticationLabelKdsMBLabel.K("").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Permission),Name="Permission_PrincipalID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid PrincipalID
		{
			get
			{
				return this._PrincipalID;
			}
			set
			{
				if ((this._PrincipalID != value))
				{
					if (this._Principal.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrincipalIDChanging(value);
					this.SendPropertyChanging();
					this._PrincipalID = value;
					this.SendPropertyChanged();
					this.OnPrincipalIDChanged();
				}
			}
		}
		/// Denotes the Permission's PermissionPathPattern column with type string(nonnull, minlength 1, maxlength 100, maxlines 0, trim) with labelkey='PermissionPathPattern'
		static public string Permission_PermissionPathPattern{ get{return AuthenticationLabelKdsMBLabel.K("PermissionPathPattern").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Permission),Name="Permission_PermissionPathPattern")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionPathPattern", DbType="NVARCHAR (100)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string PermissionPathPattern
		{
			get
			{
				return this._PermissionPathPattern;
			}
			set
			{
				if ((this._PermissionPathPattern != value))
				{
					this.OnPermissionPathPatternChanging(value);
					this.SendPropertyChanging();
					this._PermissionPathPattern = value;
					this.SendPropertyChanged();
					this.OnPermissionPathPatternChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Principal_Permission", Storage="_Principal", ThisKey="PrincipalID", OtherKey="Id", IsForeignKey=true)]
		public Principal Principal
		{
			get
			{
				return this._Principal.Entity;
			}
			set
			{
				Principal previousValue = this._Principal.Entity;
				if (((previousValue != value)
							|| (this._Principal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Principal.Entity = null;
						previousValue.PermissionPrincipal.Remove(this);
					}
					this._Principal.Entity = value;
					if ((value != null))
					{
						value.PermissionPrincipal.Add(this);
						this._PrincipalID = value.Id;
					}
					else
					{
						this._PrincipalID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Principal")]
	public partial class Principal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Principal with labelkey=''
		static public string PrincipalLabelKey { get{return AuthenticationLabelKdsMBLabel.K("").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<Permission> _PermissionPrincipal;
		private EntitySet<UserRole> _UserRolePrincipal;
		private EntityRef<Role> _DerivedRole;
		private EntityRef<User> _DerivedUser;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Principal()
		{
			this._PermissionPrincipal = new EntitySet<Permission>(new Action<Permission>(this.attach_PermissionPrincipal), new Action<Permission>(this.detach_PermissionPrincipal));
			this._UserRolePrincipal = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRolePrincipal), new Action<UserRole>(this.detach_UserRolePrincipal));
			this._DerivedRole = default(EntityRef<Role>);
			this._DerivedUser = default(EntityRef<User>);
			OnCreated();
		}
		/// Denotes the Principal's Id column with type id(nonnull) with labelkey='Id'
		static public string Principal_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Principal),Name="Principal_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Principal_Permission", Storage="_PermissionPrincipal", ThisKey="Id", OtherKey="PrincipalID")]
		public EntitySet<Permission> PermissionPrincipal
		{
			get
			{
				return this._PermissionPrincipal;
			}
			set
			{
				this._PermissionPrincipal.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Principal_DerivedRole", Storage="_DerivedRole", ThisKey="Id", OtherKey="PrincipalID", IsUnique=true, IsForeignKey=false)]
		public Role DerivedRole
		{
			get
			{
				return this._DerivedRole.Entity;
			}
			set
			{
				Role previousValue = this._DerivedRole.Entity;
				if (((previousValue != value)
							|| (this._DerivedRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DerivedRole.Entity = null;
						previousValue.BasePrincipal = null;
					}
					this._DerivedRole.Entity = value;
					if ((value != null))
					{
						value.BasePrincipal = this;
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Principal_DerivedUser", Storage="_DerivedUser", ThisKey="Id", OtherKey="PrincipalID", IsUnique=true, IsForeignKey=false)]
		public User DerivedUser
		{
			get
			{
				return this._DerivedUser.Entity;
			}
			set
			{
				User previousValue = this._DerivedUser.Entity;
				if (((previousValue != value)
							|| (this._DerivedUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DerivedUser.Entity = null;
						previousValue.BasePrincipal = null;
					}
					this._DerivedUser.Entity = value;
					if ((value != null))
					{
						value.BasePrincipal = this;
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Principal_UserRole", Storage="_UserRolePrincipal", ThisKey="Id", OtherKey="PrincipalID")]
		public EntitySet<UserRole> UserRolePrincipal
		{
			get
			{
				return this._UserRolePrincipal;
			}
			set
			{
				this._UserRolePrincipal.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_PermissionPrincipal(Permission entity)
		{
			this.SendPropertyChanging();
			entity.Principal = this;
		}
		private void detach_PermissionPrincipal(Permission entity)
		{
			this.SendPropertyChanging();
			entity.Principal = null;
		}

		private void attach_UserRolePrincipal(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Principal = this;
		}
		private void detach_UserRolePrincipal(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Principal = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Role with labelkey='Role'
		static public string RoleLabelKey { get{return AuthenticationLabelKdsMBLabel.K("Role").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _PrincipalID;
		private EntityRef<Principal> _BasePrincipal;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnPrincipalIDChanging(System.Guid value);
	partial void OnPrincipalIDChanged();
	#endregion

		public Role()
		{
			this._BasePrincipal = default(EntityRef<Principal>);
			OnCreated();
		}
		/// Denotes the Role's Id column with type id(nonnull) with labelkey='Id'
		static public string Role_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Role),Name="Role_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Role's PrincipalID column with type link(nonnull, field Principal.Id) with labelkey=''
		static public string Role_PrincipalID{ get{return AuthenticationLabelKdsMBLabel.K("").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Role),Name="Role_PrincipalID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid PrincipalID
		{
			get
			{
				return this._PrincipalID;
			}
			set
			{
				if ((this._PrincipalID != value))
				{
					if (this._BasePrincipal.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrincipalIDChanging(value);
					this.SendPropertyChanging();
					this._PrincipalID = value;
					this.SendPropertyChanged();
					this.OnPrincipalIDChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BasePrincipal_Role", Storage="_BasePrincipal", ThisKey="PrincipalID", OtherKey="Id", IsForeignKey=true)]
		public Principal BasePrincipal
		{
			get
			{
				return this._BasePrincipal.Entity;
			}
			set
			{
				Principal previousValue = this._BasePrincipal.Entity;
				if (((previousValue != value)
							|| (this._BasePrincipal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BasePrincipal.Entity = null;
					}
					this._BasePrincipal.Entity = value;
					if ((value != null))
					{
						this._PrincipalID = value.Id;
					}
					else
					{
						this._PrincipalID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table User with labelkey='User'
		static public string UserLabelKey { get{return AuthenticationLabelKdsMBLabel.K("User").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _PrincipalID;
		private string _AuthenticationCredential;
		private System.DateTime? _Hidden;
		private System.Guid _ContactID;
		private string _Desc;
		private string _Comment;
		private EntitySet<UserRole> _UserRoleUser;
		private EntitySet<UserPermission> _UserPermissionUser;
		private EntityRef<Principal> _BasePrincipal;
		private EntityRef<Contact> _Contact;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnPrincipalIDChanging(System.Guid value);
	partial void OnPrincipalIDChanged();
	partial void OnAuthenticationCredentialChanging(string value);
	partial void OnAuthenticationCredentialChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnContactIDChanging(System.Guid value);
	partial void OnContactIDChanged();
	partial void OnDescChanging(string value);
	partial void OnDescChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	#endregion

		public User()
		{
			this._UserRoleUser = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoleUser), new Action<UserRole>(this.detach_UserRoleUser));
			this._UserPermissionUser = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermissionUser), new Action<UserPermission>(this.detach_UserPermissionUser));
			this._BasePrincipal = default(EntityRef<Principal>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		/// Denotes the User's Id column with type id(nonnull) with labelkey='Id'
		static public string User_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the User's PrincipalID column with type link(nonnull, field Principal.Id) with labelkey=''
		static public string User_PrincipalID{ get{return AuthenticationLabelKdsMBLabel.K("").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_PrincipalID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid PrincipalID
		{
			get
			{
				return this._PrincipalID;
			}
			set
			{
				if ((this._PrincipalID != value))
				{
					if (this._BasePrincipal.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrincipalIDChanging(value);
					this.SendPropertyChanging();
					this._PrincipalID = value;
					this.SendPropertyChanged();
					this.OnPrincipalIDChanged();
				}
			}
		}
		/// Denotes the User's AuthenticationCredential column with type string(nonnull, minlength 1, maxlength 128, maxlines 0, trim) with labelkey='Authentication Credential'
		static public string User_AuthenticationCredential{ get{return AuthenticationLabelKdsMBLabel.K("Authentication Credential").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_AuthenticationCredential")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationCredential", DbType="NVARCHAR (128)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string AuthenticationCredential
		{
			get
			{
				return this._AuthenticationCredential;
			}
			set
			{
				if ((this._AuthenticationCredential != value))
				{
					this.OnAuthenticationCredentialChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationCredential = value;
					this.SendPropertyChanged();
					this.OnAuthenticationCredentialChanged();
				}
			}
		}
		/// Denotes the User's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string User_Hidden{ get{return AuthenticationLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the User's ContactID column with type link(nonnull, field Contact.Id) with labelkey='Contact'
		static public string User_ContactID{ get{return AuthenticationLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged();
					this.OnContactIDChanged();
				}
			}
		}
		/// Denotes the User's Desc column with type string(minlength 1, maxlength 150, maxlines 0, trim) with labelkey='Desc'
		static public string User_Desc{ get{return AuthenticationLabelKdsMBLabel.K("Desc").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_Desc")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc", DbType="NVARCHAR (150)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged();
					this.OnDescChanged();
				}
			}
		}
		/// Denotes the User's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string User_Comment{ get{return AuthenticationLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.User),Name="User_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoleUser", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<UserRole> UserRoleUser
		{
			get
			{
				return this._UserRoleUser;
			}
			set
			{
				this._UserRoleUser.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_UserPermissionUser", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<UserPermission> UserPermissionUser
		{
			get
			{
				return this._UserPermissionUser;
			}
			set
			{
				this._UserPermissionUser.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BasePrincipal_User", Storage="_BasePrincipal", ThisKey="PrincipalID", OtherKey="Id", IsForeignKey=true)]
		public Principal BasePrincipal
		{
			get
			{
				return this._BasePrincipal.Entity;
			}
			set
			{
				Principal previousValue = this._BasePrincipal.Entity;
				if (((previousValue != value)
							|| (this._BasePrincipal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BasePrincipal.Entity = null;
					}
					this._BasePrincipal.Entity = value;
					if ((value != null))
					{
						this._PrincipalID = value.Id;
					}
					else
					{
						this._PrincipalID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value)
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.UserContact.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.UserContact.Add(this);
						this._ContactID = value.Id;
					}
					else
					{
						this._ContactID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_UserRoleUser(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		private void detach_UserRoleUser(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}

		private void attach_UserPermissionUser(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		private void detach_UserPermissionUser(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table UserRole with labelkey=''
		static public string UserRoleLabelKey { get{return AuthenticationLabelKdsMBLabel.K("").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _PrincipalID;
		private System.Guid _UserID;
		private EntityRef<Principal> _Principal;
		private EntityRef<User> _User;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnPrincipalIDChanging(System.Guid value);
	partial void OnPrincipalIDChanged();
	partial void OnUserIDChanging(System.Guid value);
	partial void OnUserIDChanged();
	#endregion

		public UserRole()
		{
			this._Principal = default(EntityRef<Principal>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		/// Denotes the UserRole's Id column with type id(nonnull) with labelkey='Id'
		static public string UserRole_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.UserRole),Name="UserRole_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the UserRole's PrincipalID column with type link(nonnull, field Principal.Id) with labelkey='Role'
		static public string UserRole_PrincipalID{ get{return AuthenticationLabelKdsMBLabel.K("Role").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.UserRole),Name="UserRole_PrincipalID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid PrincipalID
		{
			get
			{
				return this._PrincipalID;
			}
			set
			{
				if ((this._PrincipalID != value))
				{
					if (this._Principal.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrincipalIDChanging(value);
					this.SendPropertyChanging();
					this._PrincipalID = value;
					this.SendPropertyChanged();
					this.OnPrincipalIDChanged();
				}
			}
		}
		/// Denotes the UserRole's UserID column with type link(nonnull, field User.Id) with labelkey='User'
		static public string UserRole_UserID{ get{return AuthenticationLabelKdsMBLabel.K("User").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.UserRole),Name="UserRole_UserID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged();
					this.OnUserIDChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Principal_UserRole", Storage="_Principal", ThisKey="PrincipalID", OtherKey="Id", IsForeignKey=true)]
		public Principal Principal
		{
			get
			{
				return this._Principal.Entity;
			}
			set
			{
				Principal previousValue = this._Principal.Entity;
				if (((previousValue != value)
							|| (this._Principal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Principal.Entity = null;
						previousValue.UserRolePrincipal.Remove(this);
					}
					this._Principal.Entity = value;
					if ((value != null))
					{
						value.UserRolePrincipal.Add(this);
						this._PrincipalID = value.Id;
					}
					else
					{
						this._PrincipalID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value)
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoleUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoleUser.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPermission")]
	public partial class UserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table UserPermission with labelkey=''
		static public string UserPermissionLabelKey { get{return AuthenticationLabelKdsMBLabel.K("").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.Guid _UserID;
		private string _PermissionPathPattern;
		private EntityRef<User> _User;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnUserIDChanging(System.Guid value);
	partial void OnUserIDChanged();
	partial void OnPermissionPathPatternChanging(string value);
	partial void OnPermissionPathPatternChanged();
	#endregion

		public UserPermission()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		/// Denotes the UserPermission's Id column with type id(nonnull) with labelkey='Id'
		static public string UserPermission_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.UserPermission),Name="UserPermission_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the UserPermission's UserID column with type link(nonnull, field User.Id) with labelkey='User'
		static public string UserPermission_UserID{ get{return AuthenticationLabelKdsMBLabel.K("User").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.UserPermission),Name="UserPermission_UserID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged();
					this.OnUserIDChanged();
				}
			}
		}
		/// Denotes the UserPermission's PermissionPathPattern column with type string(nonnull, minlength 1, maxlength 100, maxlines 0, trim) with labelkey='PermissionPathPattern'
		static public string UserPermission_PermissionPathPattern{ get{return AuthenticationLabelKdsMBLabel.K("PermissionPathPattern").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.UserPermission),Name="UserPermission_PermissionPathPattern")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionPathPattern", DbType="NVARCHAR (100)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string PermissionPathPattern
		{
			get
			{
				return this._PermissionPathPattern;
			}
			set
			{
				if ((this._PermissionPathPattern != value))
				{
					this.OnPermissionPathPatternChanging(value);
					this.SendPropertyChanging();
					this._PermissionPathPattern = value;
					this.SendPropertyChanged();
					this.OnPermissionPathPatternChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_User", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value)
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPermissionUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPermissionUser.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Contact with labelkey='Contact'
		static public string ContactLabelKey { get{return AuthenticationLabelKdsMBLabel.K("Contact").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private string _Code;
		private System.DateTime? _Hidden;
		private string _Comment;
		private string _BusinessPhone;
		private string _FaxPhone;
		private string _HomePhone;
		private string _PagerPhone;
		private string _MobilePhone;
		private string _Email;
		private string _AlternateEmail;
		private string _WebURL;
		private System.Guid? _LDAPGuid;
		private System.Guid? _LocationID;
		private int? _PreferredLanguage;
		private EntitySet<User> _UserContact;
		private EntitySet<Requestor> _RequestorContact;
		private EntityRef<Location> _Location;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnBusinessPhoneChanging(string value);
	partial void OnBusinessPhoneChanged();
	partial void OnFaxPhoneChanging(string value);
	partial void OnFaxPhoneChanged();
	partial void OnHomePhoneChanging(string value);
	partial void OnHomePhoneChanged();
	partial void OnPagerPhoneChanging(string value);
	partial void OnPagerPhoneChanged();
	partial void OnMobilePhoneChanging(string value);
	partial void OnMobilePhoneChanged();
	partial void OnEmailChanging(string value);
	partial void OnEmailChanged();
	partial void OnAlternateEmailChanging(string value);
	partial void OnAlternateEmailChanged();
	partial void OnWebURLChanging(string value);
	partial void OnWebURLChanged();
	partial void OnLDAPGuidChanging(System.Guid? value);
	partial void OnLDAPGuidChanged();
	partial void OnLocationIDChanging(System.Guid? value);
	partial void OnLocationIDChanged();
	partial void OnPreferredLanguageChanging(int? value);
	partial void OnPreferredLanguageChanged();
	#endregion

		public Contact()
		{
			this._UserContact = new EntitySet<User>(new Action<User>(this.attach_UserContact), new Action<User>(this.detach_UserContact));
			this._RequestorContact = new EntitySet<Requestor>(new Action<Requestor>(this.attach_RequestorContact), new Action<Requestor>(this.detach_RequestorContact));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		/// Denotes the Contact's Id column with type id(nonnull) with labelkey='Id'
		static public string Contact_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Contact's Code column with type string(nonnull, minlength 1, maxlength 50, maxlines 0, trim) with labelkey='Code'
		static public string Contact_Code{ get{return AuthenticationLabelKdsMBLabel.K("Code").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_Code")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVARCHAR (50)", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged();
					this.OnCodeChanged();
				}
			}
		}
		/// Denotes the Contact's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string Contact_Hidden{ get{return AuthenticationLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the Contact's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Contact_Comment{ get{return AuthenticationLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the Contact's BusinessPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='BusinessPhone'
		static public string Contact_BusinessPhone{ get{return AuthenticationLabelKdsMBLabel.K("BusinessPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_BusinessPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPhone", DbType="NVARCHAR (50)")]
		public string BusinessPhone
		{
			get
			{
				return this._BusinessPhone;
			}
			set
			{
				if ((this._BusinessPhone != value))
				{
					this.OnBusinessPhoneChanging(value);
					this.SendPropertyChanging();
					this._BusinessPhone = value;
					this.SendPropertyChanged();
					this.OnBusinessPhoneChanged();
				}
			}
		}
		/// Denotes the Contact's FaxPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='FaxPhone'
		static public string Contact_FaxPhone{ get{return AuthenticationLabelKdsMBLabel.K("FaxPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_FaxPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxPhone", DbType="NVARCHAR (50)")]
		public string FaxPhone
		{
			get
			{
				return this._FaxPhone;
			}
			set
			{
				if ((this._FaxPhone != value))
				{
					this.OnFaxPhoneChanging(value);
					this.SendPropertyChanging();
					this._FaxPhone = value;
					this.SendPropertyChanged();
					this.OnFaxPhoneChanged();
				}
			}
		}
		/// Denotes the Contact's HomePhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='HomePhone'
		static public string Contact_HomePhone{ get{return AuthenticationLabelKdsMBLabel.K("HomePhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_HomePhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVARCHAR (50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged();
					this.OnHomePhoneChanged();
				}
			}
		}
		/// Denotes the Contact's PagerPhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='PagerPhone'
		static public string Contact_PagerPhone{ get{return AuthenticationLabelKdsMBLabel.K("PagerPhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_PagerPhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagerPhone", DbType="NVARCHAR (50)")]
		public string PagerPhone
		{
			get
			{
				return this._PagerPhone;
			}
			set
			{
				if ((this._PagerPhone != value))
				{
					this.OnPagerPhoneChanging(value);
					this.SendPropertyChanging();
					this._PagerPhone = value;
					this.SendPropertyChanged();
					this.OnPagerPhoneChanged();
				}
			}
		}
		/// Denotes the Contact's MobilePhone column with type string(minlength 1, maxlength 50, maxlines 0, trim) with labelkey='MobilePhone'
		static public string Contact_MobilePhone{ get{return AuthenticationLabelKdsMBLabel.K("MobilePhone").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_MobilePhone")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVARCHAR (50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged();
					this.OnMobilePhoneChanged();
				}
			}
		}
		/// Denotes the Contact's Email column with type string(minlength 1, maxlength 128, maxlines 0, trim) with labelkey='Email'
		static public string Contact_Email{ get{return AuthenticationLabelKdsMBLabel.K("Email").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_Email")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVARCHAR (128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged();
					this.OnEmailChanged();
				}
			}
		}
		/// Denotes the Contact's AlternateEmail column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='Alternate Email'
		static public string Contact_AlternateEmail{ get{return AuthenticationLabelKdsMBLabel.K("Alternate Email").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_AlternateEmail")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail", DbType="NVARCHAR(MAX)")]
		public string AlternateEmail
		{
			get
			{
				return this._AlternateEmail;
			}
			set
			{
				if ((this._AlternateEmail != value))
				{
					this.OnAlternateEmailChanging(value);
					this.SendPropertyChanging();
					this._AlternateEmail = value;
					this.SendPropertyChanged();
					this.OnAlternateEmailChanged();
				}
			}
		}
		/// Denotes the Contact's WebURL column with type string(minlength 1, (maxlength 1,073,741,823), maxlines 0, trim) with labelkey='WebURL'
		static public string Contact_WebURL{ get{return AuthenticationLabelKdsMBLabel.K("WebURL").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_WebURL")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebURL", DbType="NVARCHAR(MAX)")]
		public string WebURL
		{
			get
			{
				return this._WebURL;
			}
			set
			{
				if ((this._WebURL != value))
				{
					this.OnWebURLChanging(value);
					this.SendPropertyChanging();
					this._WebURL = value;
					this.SendPropertyChanged();
					this.OnWebURLChanged();
				}
			}
		}
		/// Denotes the Contact's LDAPGuid column with type id with labelkey='AD Reference'
		static public string Contact_LDAPGuid{ get{return AuthenticationLabelKdsMBLabel.K("AD Reference").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_LDAPGuid")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDAPGuid", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? LDAPGuid
		{
			get
			{
				return this._LDAPGuid;
			}
			set
			{
				if ((this._LDAPGuid != value))
				{
					this.OnLDAPGuidChanging(value);
					this.SendPropertyChanging();
					this._LDAPGuid = value;
					this.SendPropertyChanged();
					this.OnLDAPGuidChanged();
				}
			}
		}
		/// Denotes the Contact's LocationID column with type link(field Location.Id) with labelkey='Location'
		static public string Contact_LocationID{ get{return AuthenticationLabelKdsMBLabel.K("Location").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_LocationID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UNIQUEIDENTIFIER")]
		public System.Guid? LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged();
					this.OnLocationIDChanged();
				}
			}
		}
		/// Denotes the Contact's PreferredLanguage column with type integer(32) with labelkey='PreferredLanguage'
		static public string Contact_PreferredLanguage{ get{return AuthenticationLabelKdsMBLabel.K("PreferredLanguage").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Contact),Name="Contact_PreferredLanguage")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredLanguage", DbType="INT")]
		public int? PreferredLanguage
		{
			get
			{
				return this._PreferredLanguage;
			}
			set
			{
				if ((this._PreferredLanguage != value))
				{
					this.OnPreferredLanguageChanging(value);
					this.SendPropertyChanging();
					this._PreferredLanguage = value;
					this.SendPropertyChanged();
					this.OnPreferredLanguageChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_UserContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<User> UserContact
		{
			get
			{
				return this._UserContact;
			}
			set
			{
				this._UserContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Requestor", Storage="_RequestorContact", ThisKey="Id", OtherKey="ContactID")]
		public EntitySet<Requestor> RequestorContact
		{
			get
			{
				return this._RequestorContact;
			}
			set
			{
				this._RequestorContact.Assign(value);
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_Location", ThisKey="LocationID", OtherKey="Id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value)
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.ContactLocation.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.ContactLocation.Add(this);
						this._LocationID = value.Id;
					}
					else
					{
						this._LocationID = default(System.Guid?);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_UserContact(User entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		private void detach_UserContact(User entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}

		private void attach_RequestorContact(Requestor entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		private void detach_RequestorContact(Requestor entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Location with labelkey='Location'
		static public string LocationLabelKey { get{return AuthenticationLabelKdsMBLabel.K("Location").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private EntitySet<Contact> _ContactLocation;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public Location()
		{
			this._ContactLocation = new EntitySet<Contact>(new Action<Contact>(this.attach_ContactLocation), new Action<Contact>(this.detach_ContactLocation));
			OnCreated();
		}
		/// Denotes the Location's Id column with type id(nonnull) with labelkey='Id'
		static public string Location_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Location),Name="Location_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_ContactLocation", ThisKey="Id", OtherKey="LocationID")]
		public EntitySet<Contact> ContactLocation
		{
			get
			{
				return this._ContactLocation;
			}
			set
			{
				this._ContactLocation.Assign(value);
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_ContactLocation(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		private void detach_ContactLocation(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceConfiguration")]
	public partial class ServiceConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table ServiceConfiguration with labelkey='ServiceConfiguration'
		static public string ServiceConfigurationLabelKey { get{return AuthenticationLabelKdsMBLabel.K("ServiceConfiguration").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	#endregion

		public ServiceConfiguration()
		{
			OnCreated();
		}
		/// Denotes the ServiceConfiguration's Id column with type id(nonnull) with labelkey='Id'
		static public string ServiceConfiguration_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.ServiceConfiguration),Name="ServiceConfiguration_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requestor")]
	public partial class Requestor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		// Denotes table Requestor with labelkey='Requestor'
		static public string RequestorLabelKey { get{return AuthenticationLabelKdsMBLabel.K("Requestor").Translate();}}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		private System.Guid _Id;
		private System.DateTime? _Hidden;
		private System.Guid _ContactID;
		private string _Comment;
		private bool _ReceiveAcknowledgement;
		private EntityRef<Contact> _Contact;
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(System.Guid value);
	partial void OnIdChanged();
	partial void OnHiddenChanging(System.DateTime? value);
	partial void OnHiddenChanged();
	partial void OnContactIDChanging(System.Guid value);
	partial void OnContactIDChanged();
	partial void OnCommentChanging(string value);
	partial void OnCommentChanged();
	partial void OnReceiveAcknowledgementChanging(bool value);
	partial void OnReceiveAcknowledgementChanged();
	#endregion

		public Requestor()
		{
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		/// Denotes the Requestor's Id column with type id(nonnull) with labelkey='Id'
		static public string Requestor_Id{ get{return AuthenticationLabelKdsMBLabel.K("Id").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Requestor),Name="Requestor_Id")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UNIQUEIDENTIFIER", IsPrimaryKey=true)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged();
					this.OnIdChanged();
				}
			}
		}
		/// Denotes the Requestor's Hidden column with type datetime((min Monday, 01 January 1753 00:00), (max Friday, 31 December 9999 23:59:59.99), divided 100) with labelkey='Hidden'
		static public string Requestor_Hidden{ get{return AuthenticationLabelKdsMBLabel.K("Hidden").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Requestor),Name="Requestor_Hidden")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="DATETIME")]
		public System.DateTime? Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged();
					this.OnHiddenChanged();
				}
			}
		}
		/// Denotes the Requestor's ContactID column with type link(nonnull, field Contact.Id) with labelkey='Contact'
		static public string Requestor_ContactID{ get{return AuthenticationLabelKdsMBLabel.K("Contact").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Requestor),Name="Requestor_ContactID")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UNIQUEIDENTIFIER", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue )
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged();
					this.OnContactIDChanged();
				}
			}
		}
		/// Denotes the Requestor's Comment column with type string(minlength 1, (maxlength 1,073,741,823), trim) with labelkey='Comment'
		static public string Requestor_Comment{ get{return AuthenticationLabelKdsMBLabel.K("Comment").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Requestor),Name="Requestor_Comment")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVARCHAR(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged();
					this.OnCommentChanged();
				}
			}
		}
		/// Denotes the Requestor's ReceiveAcknowledgement column with type bool(nonnull) with labelkey='ReceiveAcknowledgement'
		static public string Requestor_ReceiveAcknowledgement{ get{return AuthenticationLabelKdsMBLabel.K("ReceiveAcknowledgement").Translate();}}
		[System.ComponentModel.DataAnnotations.Display(ResourceType=typeof(AuthenticationEntities.Requestor),Name="Requestor_ReceiveAcknowledgement")]		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveAcknowledgement", DbType="BIT", CanBeNull=false)]
		[System.ComponentModel.DataAnnotations.Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Thinkage.Libraries.MVC.Models.FieldValidationResource))]
		public bool ReceiveAcknowledgement
		{
			get
			{
				return this._ReceiveAcknowledgement;
			}
			set
			{
				if ((this._ReceiveAcknowledgement != value))
				{
					this.OnReceiveAcknowledgementChanging(value);
					this.SendPropertyChanging();
					this._ReceiveAcknowledgement = value;
					this.SendPropertyChanged();
					this.OnReceiveAcknowledgementChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Requestor", Storage="_Contact", ThisKey="ContactID", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value)
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.RequestorContact.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.RequestorContact.Add(this);
						this._ContactID = value.Id;
					}
					else
					{
						this._ContactID = default(System.Guid);
					}
					this.SendPropertyChanged();
				}
			}
		}
		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged([CallerMemberName]String propertyName = null)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	internal class AuthenticationLabelKdsMBLabel : Thinkage.Libraries.Translation.GeneralKeyBuilder {
		const string LabelContext = "dsMBLabel";

		static AuthenticationLabelKdsMBLabel Instance = new AuthenticationLabelKdsMBLabel();
		protected AuthenticationLabelKdsMBLabel() {
		}
		protected override Thinkage.Libraries.Translation.ContextReference GetContext() {
			return Thinkage.Libraries.Translation.ContextReference.New(LabelContext);
		}
		public static Thinkage.Libraries.Translation.Key K([Thinkage.Libraries.Translation.Context(LabelContext)]string s) {
			return Instance.BuildKey(s);
		}
	}
}
#pragma warning restore 1591

