<?xml version="1.0" encoding="utf-8"?>
<database xmlns="http://www.thinkage.ca/XmlNamespaces/XAF">
  <types uri="..\Types.xafdb"/>
  <table name="ExistingAndForecastResources" log="false" id="Id" labelkey="">
	<field name="Id" read="blob(minlength 32, maxlength 32, nonnull)" />
	<field name="DemandID" type="GUIDREF" link="Demand"/>
	<field name="DemandTemplateID" type="GUIDREF" link="DemandTemplate"/>
	<field name="PMGenerationDetailID" type="GUIDREF" link="PMGenerationDetail"/>
	<!-- The remaining fields are unified between the WO and forecast information -->
	<field name="Code" type="RequiredCode"/>
	<field name="UnitLocationID" type="RequiredGUIDREF"  link="Location" labelkey="Unit" />
	<field name="Subject" type="Subject"/>
	<field name="Description" type="MultiLineUnlimited"/>
	<field name="ClosingComment" type="Comment" labelkey="Comment"/>
	<field name="WorkOrderExpenseModelID" type="GUIDREF"  link="WorkOrderExpenseModel" labelkey="Expense Model"/>
	<field name="WorkCategoryID" type="GUIDREF"  link="WorkCategory"/>
	<field name="AccessCodeID" type="GUIDREF"  link="AccessCode"/>
	<field name="ProjectID" type="GUIDREF"  link="Project"/>
	<field name="WorkOrderPriorityID" type="GUIDREF"  link="WorkOrderPriority" labelkey="Priority"/>
	<field name="CloseCodeID" type="GUIDREF"  link="CloseCode"/>
	<field name="StartDateEstimate" type="RequiredDate" labelkey="Planned Start Date"/>
	<field name="EndDateEstimate" type="RequiredDate" labelkey="Planned End Date"/>
	<field name="Downtime" type="Downtime"/>
	<field name="SelectPrintFlag" type="bool" labelkey="Select for Printing"/>
	<field name="GenerateLeadTime" type="WorkOrderDuration"/>
	<field name="QuantityTime" type="interval(min 00:01:00, max 36500.00:00:00, by 00:01:00)" labelkey="Hours Demanded"/>
    <field name="QuantityCount" type="integer(min 1, max 2147483647)" labelkey="Number Demanded"/>
	<field name="TradeID" type="GUIDREF" link="Trade"/>
	<field name="EmployeeID" type="GUIDREF" link="Employee"/>
	<field name="VendorID" type="GUIDREF" link="Vendor"/>
	<field name="ItemLocationID" type="GUIDREF" link="ItemLocation"/>
	<extension name="query">
	  with
		MergedPMGenerationDetail (Id, ScheduledWorkOrderID, WorkStartDate)
		  <!-- This view accounts for the generation of shared work orders by multiple PMGD records. -->
		  as (
			select min(cast(Id as binary(16))), ScheduledWorkOrderID, WorkStartDate
			  from PMGenerationDetail
			  where (
					DetailType = 2 <!-- DatabaseEnums.PMType.PredictedWorkOrder -->
				  or DetailType = 5 <!-- DatabaseEnums.PMType.MakeWorkOrder -->
				  or DetailType = 9 <!-- DatabaseEnums.PMType.MakeSharedWorkOrder -->)
				and WorkOrderID is null	-- Only part of an uncommitted batch
			  group by PMGenerationBatchID, ScheduledWorkOrderID, WorkStartDate
		  )
		<!-- Return the resources for existing draft and open work orders -->
		select cast(D.Id as binary(32)), D.Id, null, null, WO.Number,
			WO.UnitLocationID,
			WO.Subject,
			WO.Description,
			WO.ClosingComment,
			WO.WorkOrderExpenseModelID,
			WO.WorkCategoryID,
			WO.AccessCodeID,
			WO.ProjectID,
			WO.WorkOrderPriorityID,
			WO.CloseCodeID,
			WO.StartDateEstimate,
			WO.EndDateEstimate,
			WO.Downtime,
			WO.SelectPrintFlag,
			null, <!-- GenerateLeadTime -->
			coalesce(case when DLI.ActualQuantity > DLI.Quantity then dbo._INew(0, 0, 0, 0, 0) else dbo._IDiff(DLI.Quantity, DLI.ActualQuantity) end,
					  case when DLO.ActualQuantity > DLO.Quantity then dbo._INew(0, 0, 0, 0, 0) else dbo._IDiff(DLO.Quantity, DLO.ActualQuantity) end),
			coalesce(case when DI.ActualQuantity > DI.Quantity then 0 else DI.Quantity - DI.ActualQuantity end,
					  case when DOWI.ActualQuantity > DOWI.Quantity then 0 else DOWI.Quantity - DOWI.ActualQuantity end,
					  case when DOWO.ActualQuantity > DOWO.Quantity then 0 else DOWO.Quantity - DOWO.ActualQuantity end),
			coalesce(LI.TradeID, LO.TradeID, OWI.TradeID, OWO.TradeID),
			coalesce(LI.EmployeeID, OWI.EmployeeID),
			coalesce(LO.VendorID, OWO.VendorID),
			DI.ItemLocationID
		  from
			WorkOrder as WO
			join WorkOrderStateHistory as WOSH on WOSH.Id = WO.CurrentWorkOrderStateHistoryID
			join WorkOrderState as WOS on WOS.Id = WOSH.WorkOrderStateID
			join Demand as D on D.WorkOrderID = WO.Id
			left join DemandItem as DI on DI.DemandID = D.Id
			left join DemandLaborInside as DLI on DLI.DemandID = D.Id
			left join LaborInside as LI on LI.Id = DLI.LaborInsideID
			left join DemandLaborOutside as DLO on DLO.DemandID = D.Id
			left join LaborOutside as LO on LO.Id = DLO.LaborOutsideID
			left join DemandOtherWorkInside as DOWI on DOWI.DemandID = D.Id
			left join OtherWorkInside as OWI on OWI.Id = DOWI.OtherWorkInsideID
			left join DemandOtherWorkOutside as DOWO on DOWO.DemandID = D.Id
			left join OtherWorkOutside as OWO on OWO.Id = DOWO.OtherWorkOutsideID
		  where
			WOS.FilterAsDraft != 0 or WOS.FilterAsOpen != 0
	  union
		<!-- Return the resources for noncommitted scheduled work orders -->
		select cast(DT.Id as binary(16))+MPMGD.Id, null, DT.Id, cast(MPMGD.Id as uniqueidentifier), WOT.Code,
			SWO.UnitLocationID,
			RWOT.Subject,
			RWOT.Description,
			RWOT.ClosingComment,
			RWOT.WorkOrderExpenseModelID,
			RWOT.WorkCategoryID,
			RWOT.AccessCodeID,
			RWOT.ProjectID,
			RWOT.WorkOrderPriorityID,
			RWOT.CloseCodeID,
			MPMGD.WorkStartDate,
			dbo._ISubtract(dbo._IAdd(MPMGD.WorkStartDate, RWOT.Duration), dbo._INew(1, 0, 0, 0, 0)),
			RWOT.Downtime,
			RWOT.SelectPrintFlag,
			RWOT.GenerateLeadTime,
			coalesce(DLIT.Quantity, DLOT.QUantity),
			coalesce(DIT.Quantity, DOWIT.Quantity, DOWOT.Quantity),
			coalesce(LI.TradeID, LO.TradeID, OWI.TradeID, OWO.TradeID),
			coalesce(LI.EmployeeID, OWI.EmployeeID),
			coalesce(LO.VendorID, OWO.VendorID),
			DIT.ItemLocationID
		  from
			MergedPMGenerationDetail as MPMGD
			join ScheduledWorkOrder as SWO on SWO.Id = MPMGD.ScheduledWorkOrderID
			join WorkOrderTemplate as WOT on WOT.Id = SWO.WorkOrderTemplateID
			join ResolvedWorkOrderTemplate as RWOT on RWOT.WorkOrderTemplateID = SWO.WorkOrderTemplateID
			join WorkOrderTemplateContainment as WOTC on WOTC.ContainedWorkOrderTemplateID = SWO.WorkOrderTemplateID
			join DemandTemplate as DT on DT.WorkOrderTemplateID = WOTC.ContainingWorkOrderTemplateID
			left join DemandItemTemplate as DIT on DIT.DemandTemplateID = DT.Id
			left join DemandLaborInsideTemplate as DLIT on DLIT.DemandTemplateID = DT.Id
			left join LaborInside as LI on LI.Id = DLIT.LaborInsideID
			left join DemandLaborOutsideTemplate as DLOT on DLOT.DemandTemplateID = DT.Id
			left join LaborOutside as LO on LO.Id = DLOT.LaborOutsideID
			left join DemandOtherWorkInsideTemplate as DOWIT on DOWIT.DemandTemplateID = DT.Id
			left join OtherWorkInside as OWI on OWI.Id = DOWIT.OtherWorkInsideID
			left join DemandOtherWorkOutsideTemplate as DOWOT on DOWOT.DemandTemplateID = DT.Id
			left join OtherWorkOutside as OWO on OWO.Id = DOWOT.OtherWorkOutsideID
	</extension>
	<extension name="dependson">PMGenerationDetail</extension>
	<extension name="dependson">WorkOrderTemplate</extension>
	<extension name="dependson">ResolvedWorkOrderTemplate</extension>
	<extension name="dependson">WorkOrderTemplateContainment</extension>
	<extension name="dependson">Demand</extension>
	<extension name="dependson">WorkOrder</extension>
	<extension name="dependson">WorkOrderStateHistory</extension>
	<extension name="dependson">WorkOrderState</extension>
	<extension name="dependson">DemandTemplate</extension>
	<extension name="dependson">ScheduledWorkOrder</extension>
	<extension name="dependson">DemandItem</extension>
	<extension name="dependson">DemandLaborInside</extension>
	<extension name="dependson">DemandLaborOutside</extension>
	<extension name="dependson">DemandOtherWorkInside</extension>
	<extension name="dependson">DemandOtherWorkOutside</extension>
	<extension name="dependson">DemandItemTemplate</extension>
	<extension name="dependson">DemandLaborInsideTemplate</extension>
	<extension name="dependson">DemandLaborOutsideTemplate</extension>
	<extension name="dependson">DemandOtherWorkInsideTemplate</extension>
	<extension name="dependson">DemandOtherWorkOutsideTemplate</extension>
	<extension name="dependson">LaborInside</extension>
	<extension name="dependson">LaborOutside</extension>
	<extension name="dependson">OtherWorkInside</extension>
	<extension name="dependson">OtherWorkOutside</extension>
	<extension name="costrights">UnitValue</extension>
	<extension name="costrights">InventoryActivity</extension>
  </table>
  <table name="PMGenerationDetail"/>
  <table name="WorkOrderTemplate"/>
  <table name="ResolvedWorkOrderTemplate"/>
  <table name="WorkOrderTemplateContainment" id="Id">
	<field name="Id" read="blob(minlength 32, maxlength 32, nonnull)"/>
  </table>
  <table name="Demand"/>
  <table name="WorkOrder"/>
  <table name="WorkOrderStateHistory"/>
  <table name="WorkOrderState"/>
  <table name="DemandTemplate"/>
  <table name="ScheduledWorkOrder"/>
  <table name="DemandItem"/>
  <table name="DemandLaborInside"/>
  <table name="DemandLaborOutside"/>
  <table name="DemandOtherWorkInside"/>
  <table name="DemandOtherWorkOutside"/>
  <table name="DemandItemTemplate"/>
  <table name="DemandLaborInsideTemplate"/>
  <table name="DemandLaborOutsideTemplate"/>
  <table name="DemandOtherWorkInsideTemplate"/>
  <table name="DemandOtherWorkOutsideTemplate"/>
  <table name="LaborInside"/>
  <table name="LaborOutside"/>
  <table name="OtherWorkInside"/>
  <table name="OtherWorkOutside"/>
  <table name="Location"/>
  <table name="WorkOrderExpenseModel"/>
  <table name="WorkCategory"/>
  <table name="AccessCode"/>
  <table name="Project"/>
  <table name="WorkOrderPriority"/>
  <table name="CloseCode"/>
  <table name="Trade"/>
  <table name="Employee"/>
  <table name="Vendor"/>
  <table name="ItemLocation"/>
</database>
