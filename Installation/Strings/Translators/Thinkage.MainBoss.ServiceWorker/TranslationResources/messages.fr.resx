<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Thinkage.MainBoss.ServiceWorker§{0} rejection {0.IsOne ? message : messages } for {1}" type="" mimetype="">
    <value>Refus {0} {0.IsOne ? message : messages } pour {1}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§{0} Server '{1}' on port {2}" type="" mimetype="">
    <value>{0} Serveur '{1}' sur le port {2}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Creating a Requestor record for {0} with Contact Code {1}" type="" mimetype="">
    <value>Création d'une entrée pour le demandeur {0} en utilisant le code de contact {1}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Description" type="" mimetype="">
    <value>Description</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§E-mail request from {0} does not match the e-mail address of any Requestor" type="" mimetype="">
    <value>La demande de travaux par courriel{0} ne correspond à l'adresse de messagerie d'aucun demandeur.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§E-mail request from {0} matches e-mail address of Contact '{1}', but that Contact is not a Requestor." type="" mimetype="">
    <value>La demande de travaux par courriel {0} correspond à une adresse de messagerie pour le contact  '{1}', mais celui-ci n'est pas un demandeur.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Error during processing of E-mail requests" type="" mimetype="">
    <value>Erreur durant le traitement des demandes de travaux par courriel</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Error during retrieval of E-mail requests" type="" mimetype="">
    <value>Erreur lors de la récupération des demandes de travaux par courriel</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Error parsing XML Request" type="" mimetype="">
    <value>Erreur lors de l'analyse syntaxique de la demande XML</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Error processing Assignment Notifications" type="" mimetype="">
    <value>Error processing Assignment Notifications</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Error processing Requestor Notifications" type="" mimetype="">
    <value>Error processing Requestor Notifications</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Estimated Completion Date: {0}" type="" mimetype="">
    <value>Estimated Completion Date: {0}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Failed to locate Email Request {0} for processing." type="" mimetype="">
    <value>Incapable de localiser la demande de travaux par courriel {0} aux fins du traitement.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Generated by @Requests" type="" mimetype="">
    <value>Produit par @Requests</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Here is the original request:" type="" mimetype="">
    <value>Voici la demande originale.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Mail Server Type: {0}" type="" mimetype="">
    <value>Type de serveur de messagerie : {0}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Message {0}" type="" mimetype="">
    <value>Message {0}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Missing From address in message" type="" mimetype="">
    <value>Champ De vide dans le message</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification failed for purchase order {0} to {1}" type="" mimetype="">
    <value>Notification failed for purchase order {0} to {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification failed for request {0} to {1}" type="" mimetype="">
    <value>Notification failed for request {0} to {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification failed for work order {0} to {1}" type="" mimetype="">
    <value>Notification failed for work order {0} to {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification sent for purchase order {0} to {1}" type="" mimetype="">
    <value>Notification sent for purchase order {0} to {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification sent for request {0} to {1}" type="" mimetype="">
    <value>Notification sent for request {0} to {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification sent for work order {0} to {1}" type="" mimetype="">
    <value>Notification sent for work order {0} to {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification skipped for purchase order {0} to {1}:&#xD;&#xA;{2}" type="" mimetype="">
    <value>Notification skipped for purchase order {0} to {1}:
{2}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification skipped for request {0} to {1}:&#xD;&#xA;{2}" type="" mimetype="">
    <value>Notification skipped for request {0} to {1}:
{2}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification skipped for request {0}:&#xD;&#xA;{1}" type="" mimetype="">
    <value>Notification skipped for request {0}:
{1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Notification skipped for work order {0} to {1}:&#xD;&#xA;{2}" type="" mimetype="">
    <value>Notification skipped for work order {0} to {1}:
{2}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Number" type="" mimetype="">
    <value>Number</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Processing {0} {0.IsOne ? Notifications : Notifications }" type="" mimetype="">
    <value>Processing {0} {0.IsOne ? Notifications : Notifications }</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Processing {0} E-mail {0.IsOne ? message : messages }" type="" mimetype="">
    <value>Traitement de {0} message {0.IsOne ? message : messages }</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Processing {0} Requestor {0.IsOne ? Notification : Notifications }" type="" mimetype="">
    <value>Processing {0} Requestor {0.IsOne ? Notification : Notifications }</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Processing rejection notifications for {0} {0.IsOne ?  requestor : requestors }" type="" mimetype="">
    <value>Processing rejection notifications for {0} {0.IsOne ?  requestor : requestors }</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Purchase Order Assignee does not have an E-mail address" type="" mimetype="">
    <value>Purchase Order Assignee does not have an E-mail address</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Purchase Order Assignee does not want notifications" type="" mimetype="">
    <value>Purchase Order Assignee does not want notifications</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Purchase Order Assignee E-mail address is not valid '{0}'.&#xD;&#xA;All future purchase order notifications have been disabled for contact {1}" type="" mimetype="">
    <value>Purchase Order Assignee E-mail address is not valid '{0}'.
All future purchase order notifications have been disabled for contact {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Reference: Work Request # {0}" type="" mimetype="">
    <value>Référence : demande de travaux # {0}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request Acknowledgement and Rejection messages cannot be sent because the 'Return E-mail address' parameter is not set." type="" mimetype="">
    <value>Request Acknowledgement and Rejection messages cannot be sent because the 'Return E-mail address' parameter is not set.</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request Assignee does not have an E-mail address" type="" mimetype="">
    <value>Request Assignee does not have an E-mail address</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request Assignee does not want notifications" type="" mimetype="">
    <value>Request Assignee does not want notifications</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request Assignee E-mail address is not valid '{0}'.&#xD;&#xA;All future request notifications have been disabled for contact {1}" type="" mimetype="">
    <value>Request Assignee E-mail address is not valid '{0}'.
All future request notifications have been disabled for contact {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request from {0} created as {1}" type="" mimetype="">
    <value>La demande provenant de {0} a été créée comme {1}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request from {0} rejected: {1}" type="" mimetype="">
    <value>La demande de {0} a été rejetée : {1}</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Request may be web accessible at" type="" mimetype="">
    <value>Request may be web accessible at</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Requestor does not have an E-mail address" type="" mimetype="">
    <value>Le demandeur n'a pas d'adresse de messagerie.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Requestor does not want notifications" type="" mimetype="">
    <value>Requestor does not want notifications</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Requestor E-mail address is not valid '{0}'" type="" mimetype="">
    <value>Requestor E-mail address is not valid '{0}'</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Retrieved message from '{0}'" type="" mimetype="">
    <value>Message récupéré de '{0}'</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Retrieving {0} E-mail {0.IsOne ? message : messages }" type="" mimetype="">
    <value>Récupération du {0} message {0.IsOne ? message : messages }</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§SMTP Server '{0}' on port {1}" type="" mimetype="">
    <value>SMTP Server '{0}' on port {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Subject" type="" mimetype="">
    <value>Subject</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§The email address '{0}' is being used by {1} MainBoss Requestors:" type="" mimetype="">
    <value>The email address '{0}' is being used by {1} MainBoss Requestors:</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§The incoming mail server parameter is not set." type="" mimetype="">
    <value>Les paramètres du serveur de messagerie entrant ne sont pas définis.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§The incoming mail server type is not supported." type="" mimetype="">
    <value>Le type de serveur de messagerie entrant n'est pas pris en charge.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§The requestor '{0}' will be used for the email address '{1}'" type="" mimetype="">
    <value>The requestor '{0}' will be used for the email address '{1}'</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§The SMTP server parameter is not set." type="" mimetype="">
    <value>Le serveur SMTP n'est pas configuré.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Work Order Assignee does not have an E-mail address" type="" mimetype="">
    <value>Work Order Assignee does not have an E-mail address</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Work Order Assignee does not want notifications" type="" mimetype="">
    <value>Work Order Assignee does not want notifications</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Work Order Assignee E-mail address is not valid '{0}'.&#xD;&#xA;All future work order notifications have been disabled for contact {1}" type="" mimetype="">
    <value>Work Order Assignee E-mail address is not valid '{0}'.
All future work order notifications have been disabled for contact {1}</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Work Order may be web accessible at" type="" mimetype="">
    <value>Work Order may be web accessible at</value>
    <comment>New!</comment>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Your original request was:" type="" mimetype="">
    <value>Votre demande originale était :</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Your request was denied for the reasons outlined below" type="" mimetype="">
    <value>Votre demande de travaux a été refusée pour les motifs exposés ci-après.</value>
  </data>
  <data name="Thinkage.MainBoss.ServiceWorker§Your work request has been received and will now be reviewed." type="" mimetype="">
    <value>Nous avons reçu votre demande de travaux et nous l'examinons.</value>
  </data>
</root>